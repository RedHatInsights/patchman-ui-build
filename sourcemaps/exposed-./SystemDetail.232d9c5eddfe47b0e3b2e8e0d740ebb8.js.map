{"version":3,"file":"js/exposed-./SystemDetail.8988238d9bb11c3c5f2a.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Snippets/SystemUpToDate.js","webpack:///./src/PresentationalComponents/TableView/TableFooter.js","webpack:///./src/PresentationalComponents/TableView/TableView.js","webpack:///./src/index.js"],"sourcesContent":["import {\n    Bullseye,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateHeader,\n    Icon\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nexport const SystemUpToDate = () => (\n    <Bullseye>\n        <EmptyState style={{ paddingTop: 40 }}>\n            <EmptyStateHeader\n                titleText={intl.formatMessage(\n                    messages.statesNoApplicableAdvisories\n                )}\n                icon={\n                    <EmptyStateIcon\n                        icon={() => (\n                            <Icon size=\"xl\" style={{ marginBottom: 15 }}>\n                                <CheckCircleIcon\n                                    color={\n                                        'var(--pf-v5-global--success-color--200)'\n                                    }\n                                />\n                            </Icon>\n                        )}\n                    />\n                }\n                headingLevel=\"h5\"\n            />\n            <EmptyStateBody>\n                {intl.formatMessage(messages.statesSystemUpToDate)}\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n","import { Pagination, PaginationVariant, Skeleton } from '@patternfly/react-core';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TableFooter = ({ isLoading, page, perPage, onSetPage, totalItems, onPerPageSelect, paginationOUIA }) => {\n    return (\n        <TableToolbar isFooter>\n            {isLoading ? (\n                <div className=\"pf-v5-c-pagination pf-m-bottom\">\n                    <Skeleton fontSize=\"xl\" width=\"350px\" style={{ margin: 10 }} />\n                </div>\n            ) :\n                <Pagination\n                    itemCount={totalItems}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    onPerPageSelect={onPerPageSelect}\n                    widgetId={`pagination-options-menu-bottom`}\n                    variant={PaginationVariant.bottom}\n                    ouiaId={paginationOUIA}\n                    isDisabled={totalItems === 0}\n                />\n            }\n        </TableToolbar>\n    );\n};\n\nTableFooter.propTypes = {\n    isLoading: PropTypes.bool,\n    onSetPage: PropTypes.func,\n    onPerPageSelect: PropTypes.func,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    totalItems: PropTypes.number,\n    paginationOUIA: PropTypes.string\n};\n\nexport default TableFooter;\n","import {\n    TableVariant\n} from '@patternfly/react-table';\nimport {\n    Table,\n    TableBody,\n    TableHeader\n} from '@patternfly/react-table/deprecated';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport AsyncRemediationButton from '../../SmartComponents/Remediation/AsyncRemediationButton';\nimport { arrayFromObj, buildFilterChips, convertLimitOffset } from '../../Utilities/Helpers';\nimport { useRemoveFilter, useBulkSelectConfig } from '../../Utilities/hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport TableFooter from './TableFooter';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\nimport { Skeleton, ToolbarItem } from '@patternfly/react-core';\n\nconst TableView = ({\n    columns,\n    store: {\n        rows,\n        metadata,\n        status,\n        queryParams: { filter, search }\n    },\n    onCollapse,\n    onSelect,\n    onSetPage,\n    onPerPageSelect,\n    onSort,\n    onExport,\n    filterConfig,\n    sortBy,\n    remediationProvider,\n    selectedRows,\n    compact,\n    apply,\n    tableOUIA,\n    paginationOUIA,\n    errorState,\n    emptyState,\n    defaultFilters,\n    searchChipLabel,\n    ToolbarButton,\n    actionsConfig,\n    isRemediationLoading,\n    actionsToggle\n}) => {\n\n    const [page, perPage] = React.useMemo(\n        () => convertLimitOffset(metadata.limit, metadata.offset),\n        [metadata.limit, metadata.offset]\n    );\n\n    const [deleteFilters] = useRemoveFilter(filter, apply, defaultFilters);\n    const selectedCount = selectedRows && arrayFromObj(selectedRows).length;\n    const { code, hasError, isLoading } = status;\n    const bulkSelectConfig = useBulkSelectConfig(selectedCount, onSelect, metadata, rows, onCollapse);\n\n    return (\n        <React.Fragment>\n            {\n                (<React.Fragment>\n                    {(hasError || metadata.has_systems === false)\n                        ? <ErrorHandler code={code} ErrorState={errorState} EmptyState={emptyState} metadata={metadata} />\n                        : <React.Fragment>\n                            <PrimaryToolbar\n                                pagination={isLoading\n                                    ? <Skeleton fontSize=\"xl\" width=\"200px\" style={{ margin: 10 }} />\n                                    : {\n                                        itemCount: metadata.total_items,\n                                        page,\n                                        perPage,\n                                        isCompact: true,\n                                        onSetPage,\n                                        onPerPageSelect,\n                                        ouiaId: `top-${paginationOUIA}`,\n                                        isDisabled: metadata.total_items === 0\n                                    }}\n                                filterConfig={filterConfig}\n                                activeFiltersConfig={{\n                                    filters: buildFilterChips(filter, search, searchChipLabel),\n                                    onDelete: deleteFilters,\n                                    deleteTitle: intl.formatMessage(defaultFilters\n                                        && messages.labelsFiltersReset || messages.labelsFiltersClear)\n                                }}\n                                actionsConfig={{\n                                    actions: [remediationProvider && (\n                                        <AsyncRemediationButton\n                                            remediationProvider={remediationProvider}\n                                            isDisabled={\n                                                Object.values(selectedRows).filter(isSelected => isSelected).length === 0\n                                                || isRemediationLoading\n                                            }\n                                            isLoading={isRemediationLoading}\n                                        />\n                                    )]\n                                }}\n                                exportConfig={{\n                                    isDisabled: metadata.total_items === 0,\n                                    onSelect: onExport\n                                }}\n                                bulkSelect={onSelect && bulkSelectConfig}\n                            >\n                                {ToolbarButton && <ToolbarItem>\n                                    <ToolbarButton />\n                                </ToolbarItem>}\n                            </PrimaryToolbar>\n                            {isLoading\n                                ? <SkeletonTable\n                                    numberOfColumns={columns?.length ?? 5}\n                                    rows={20}\n                                    variant={compact && TableVariant.compact}\n                                />\n                                : <Table\n                                    aria-label=\"Patch table view\"\n                                    cells={columns}\n                                    onSelect={metadata.total_items && onSelect}\n                                    rows={rows}\n                                    onCollapse={metadata.total_items && onCollapse}\n                                    canSelectAll={false}\n                                    onSort={metadata.total_items && onSort}\n                                    ouiaId={tableOUIA}\n                                    sortBy={metadata.total_items && sortBy}\n                                    isStickyHeader\n                                    variant={compact && TableVariant.compact}\n                                    actions={actionsConfig}\n                                    actionsToggle={actionsToggle}\n                                >\n                                    <TableHeader />\n                                    <TableBody />\n                                </Table>\n                            }\n                            <TableFooter\n                                isLoading={isLoading}\n                                totalItems={metadata.total_items}\n                                perPage={perPage}\n                                page={page}\n                                onSetPage={onSetPage}\n                                onPerPageSelect={onPerPageSelect}\n                                paginationOUIA={`bottom-${paginationOUIA}`}\n                            />\n                        </React.Fragment>\n                    }\n                </React.Fragment>)\n            }\n        </React.Fragment>\n    );\n};\n\nTableView.propTypes = {\n    columns: PropTypes.array,\n    onCollapse: PropTypes.func,\n    onSelect: PropTypes.func,\n    onSetPage: PropTypes.func,\n    onPerPageSelect: PropTypes.func,\n    onSort: PropTypes.func,\n    onExport: PropTypes.func,\n    remediationProvider: PropTypes.func,\n    selectedRows: PropTypes.object,\n    apply: PropTypes.func,\n    sortBy: PropTypes.object,\n    filterConfig: PropTypes.object,\n    store: PropTypes.object,\n    compact: PropTypes.bool,\n    tableOUIA: PropTypes.string,\n    paginationOUIA: PropTypes.string,\n    errorState: PropTypes.element,\n    emptyState: PropTypes.element,\n    defaultFilters: PropTypes.object,\n    searchChipLabel: PropTypes.string,\n    ToolbarButton: PropTypes.elementType,\n    actionsConfig: PropTypes.array,\n    isRemediationLoading: PropTypes.bool,\n    actionsToggle: PropTypes.func\n};\n\nexport default TableView;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport SystemDetail from './SmartComponents/SystemDetail/SystemDetail';\nimport { SystemAdvisoryListStore } from './store/Reducers/SystemAdvisoryListStore';\nimport { SystemPackageListStore } from './store/Reducers/SystemPackageListStore';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst WrappedSystemDetail = ({ getRegistry, ...props }) => {\n    const [Wrapper, setWrapper] = useState();\n    useEffect(() => {\n        if (getRegistry) {\n            getRegistry()?.register?.({ SystemAdvisoryListStore, SystemPackageListStore });\n        }\n\n        setWrapper(() => getRegistry ? Provider : Fragment);\n    }, []);\n    return (\n        Wrapper ? <Wrapper {...getRegistry && { store: getRegistry()?.getStore() }}>\n            <SystemDetail {...props} isInventoryApp />\n        </Wrapper> : <Bullseye>\n            <Spinner size=\"xl\" />\n        </Bullseye>\n    );\n};\n\nWrappedSystemDetail.propTypes = {\n    getRegistry: PropTypes.func\n};\n\nexport { SystemPackageListStore, SystemAdvisoryListStore };\n\nexport default WrappedSystemDetail;\n"],"names":["SystemUpToDate","React","Bullseye","EmptyState","style","paddingTop","EmptyStateHeader","titleText","intl","formatMessage","messages","statesNoApplicableAdvisories","icon","EmptyStateIcon","Icon","size","marginBottom","CheckCircleIcon","color","headingLevel","EmptyStateBody","statesSystemUpToDate","TableFooter","_ref","isLoading","page","perPage","onSetPage","totalItems","onPerPageSelect","paginationOUIA","TableToolbar","isFooter","className","Skeleton","fontSize","width","margin","Pagination","itemCount","widgetId","variant","PaginationVariant","bottom","ouiaId","isDisabled","propTypes","PropTypes","TableView","_columns$length","columns","_ref$store","store","rows","metadata","status","_ref$store$queryParam","queryParams","filter","search","onCollapse","onSelect","onSort","onExport","filterConfig","sortBy","remediationProvider","selectedRows","compact","apply","tableOUIA","errorState","emptyState","defaultFilters","searchChipLabel","ToolbarButton","actionsConfig","isRemediationLoading","actionsToggle","_React$useMemo","convertLimitOffset","limit","offset","_React$useMemo2","_slicedToArray","_useRemoveFilter","useRemoveFilter","deleteFilters","selectedCount","arrayFromObj","length","code","hasError","bulkSelectConfig","useBulkSelectConfig","has_systems","ErrorHandler","ErrorState","PrimaryToolbar","pagination","total_items","isCompact","concat","activeFiltersConfig","filters","buildFilterChips","onDelete","deleteTitle","labelsFiltersReset","labelsFiltersClear","actions","AsyncRemediationButton","Object","values","isSelected","exportConfig","bulkSelect","ToolbarItem","SkeletonTable","numberOfColumns","TableVariant","Table","cells","canSelectAll","isStickyHeader","TableHeader","TableBody","WrappedSystemDetail","_getRegistry2","getRegistry","props","_objectWithoutProperties","_excluded","_useState","useState","_useState2","Wrapper","setWrapper","useEffect","_getRegistry","_getRegistry$register","register","call","SystemAdvisoryListStore","SystemPackageListStore","Provider","Fragment","getStore","SystemDetail","_extends","isInventoryApp","Spinner"],"sourceRoot":""}