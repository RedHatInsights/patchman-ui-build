{"version":3,"file":"js/5645.8988238d9bb11c3c5f2a.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/Notification/Notification.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/NotificationPagination/NotificationPagination.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/Portal/Portal.js","webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/ErrorState/ErrorState.js","webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/ErrorStack/ErrorStack.js","webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/ErrorBoundary/ErrorBoundary.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ErrorState/DefaultErrorMessage.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ErrorBoundary/ErrorBoundary.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/NotificationPortal/NotificationPortal.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/notificationsMiddleware/notificationsMiddleware.js","webpack:///./node_modules/react-intl/lib/src/components/provider.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-translations/esm/Provider/Provider.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-translations/esm/messages.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-translations/esm/index.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/RBAC/RBAC.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/RBACHook/RBACHook.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/RBACProvider/RBACProvider.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/api.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/base.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/configuration.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/index.js","webpack:///./node_modules/lodash/_baseHas.js","webpack:///./node_modules/lodash/has.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/redux/es/redux.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef } from 'react';\nimport { Alert, AlertActionCloseButton, AlertProps } from \"@patternfly/react-core/dist/dynamic/components/Alert\";\nimport { Text, TextContent, TextVariants } from \"@patternfly/react-core/dist/dynamic/components/Text\";\nimport CloseIcon from \"@patternfly/react-icons/dist/dynamic/icons/close-icon\";\nimport '../Notification/notification.css';\nvar DEFAULT_DELAY = 8000;\nvar Notification = function (_a) {\n    var description = _a.description, _b = _a.dismissable, dismissable = _b === void 0 ? true : _b, onDismiss = _a.onDismiss, _c = _a.dismissDelay, dismissDelay = _c === void 0 ? DEFAULT_DELAY : _c, title = _a.title, sentryId = _a.sentryId, requestId = _a.requestId, _d = _a.autoDismiss, autoDismiss = _d === void 0 ? true : _d, id = _a.id, rest = __rest(_a, [\"description\", \"dismissable\", \"onDismiss\", \"dismissDelay\", \"title\", \"sentryId\", \"requestId\", \"autoDismiss\", \"id\"]);\n    var dismissTimeout = useRef();\n    var handleDismiss = function () {\n        onDismiss(id);\n    };\n    var setDismissTimeout = function () {\n        if (autoDismiss) {\n            dismissTimeout.current = setTimeout(function () { return handleDismiss(); }, dismissDelay);\n        }\n    };\n    var clearDismissTimeout = function () {\n        if (dismissTimeout.current) {\n            clearTimeout(dismissTimeout.current);\n        }\n    };\n    useEffect(function () {\n        setDismissTimeout();\n        return function () {\n            clearDismissTimeout();\n        };\n    }, []);\n    return (_jsxs(Alert, __assign({ className: \"notification-item\", id: \"\".concat(id), title: typeof title === 'string' ? title.replace(/<\\/?[^>]+(>|$)/g, '') : title }, rest, { actionClose: dismissable ? (_jsx(AlertActionCloseButton, { \"aria-label\": \"close-notification\", variant: \"plain\", onClick: handleDismiss, children: _jsx(CloseIcon, {}) })) : null, onMouseEnter: clearDismissTimeout, onMouseLeave: setDismissTimeout, children: [_jsx(TextContent, { children: _jsx(Text, { className: \"sentry-mask data-hj-suppress\", component: TextVariants.small, children: typeof description === 'string' ? description.replace(/<\\/?[^>]+(>|$)/g, '') : description }) }), sentryId && (_jsx(TextContent, { children: _jsxs(Text, { component: TextVariants.small, children: [\"Tracking Id: \", sentryId] }) })), requestId && (_jsx(TextContent, { children: _jsxs(Text, { component: TextVariants.small, children: [\"Request Id: \", requestId] }) }))] })));\n};\nexport default Notification;\n//# sourceMappingURL=Notification.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button, ButtonVariant } from \"@patternfly/react-core/dist/dynamic/components/Button\";\nimport { Card, CardBody } from \"@patternfly/react-core/dist/dynamic/components/Card\";\nimport { Level, LevelItem } from \"@patternfly/react-core/dist/dynamic/layouts/Level\";\nimport { Pagination, PaginationVariant } from \"@patternfly/react-core/dist/dynamic/components/Pagination\";\nexport var NotificationPagination = function (_a) {\n    var _b = _a.page, page = _b === void 0 ? 1 : _b, onSetPage = _a.onSetPage, onClearAll = _a.onClearAll, _c = _a.count, count = _c === void 0 ? 0 : _c;\n    return (_jsx(Card, { className: \"notification-item\", children: _jsx(CardBody, { children: _jsxs(Level, { children: [_jsx(LevelItem, { children: _jsx(Button, { variant: ButtonVariant.link, className: \"ins-c-pagination__clear-all\", onClick: onClearAll, children: \"Clear all\" }) }), _jsx(LevelItem, { children: _jsx(Pagination, { itemCount: count, variant: PaginationVariant.bottom, perPageOptions: [\n                                {\n                                    title: '5',\n                                    value: 5,\n                                },\n                            ], titles: {\n                                items: 'Notifications',\n                            }, perPage: 5, page: page, onSetPage: onSetPage }) })] }) }) }));\n};\nexport default NotificationPagination;\n//# sourceMappingURL=NotificationPagination.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport Notification from '../Notification';\nimport NotificationPagination from '../NotificationPagination';\nimport { AlertProps } from \"@patternfly/react-core/dist/dynamic/components/Alert\";\nimport '../Portal/portal.css';\nvar Portal = function (_a) {\n    var _b = _a.notifications, notifications = _b === void 0 ? [] : _b, _c = _a.removeNotification, removeNotification = _c === void 0 ? function () { return undefined; } : _c, rootId = _a.rootId, onClearAll = _a.onClearAll;\n    var _d = useState({ page: 1 }), state = _d[0], setState = _d[1];\n    var onSetPage = function (_event, page) {\n        setState(function (prev) { return (__assign(__assign({}, prev), { page: page })); });\n    };\n    var page = state.page;\n    var slicedNotifications = notifications && notifications.length <= 5 ? notifications : notifications && notifications.slice((page - 1) * 5, page * 5);\n    return notifications.length === 0\n        ? null\n        : createPortal(_jsxs(\"div\", { className: \"notifications-portal\", children: [notifications.length > 5 && (_jsx(NotificationPagination, { onSetPage: onSetPage, count: notifications.length, page: page, onClearAll: onClearAll })), slicedNotifications.map(function (props) { return (_jsx(Notification, __assign({ onDismiss: removeNotification }, props), \"\".concat(props.id))); })] }), rootId ? document.getElementById(rootId) || document.body : document.body);\n};\nexport default Portal;\n//# sourceMappingURL=Portal.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/';\nimport { Button, EmptyState, EmptyStateBody, EmptyStateFooter, EmptyStateHeader, EmptyStateIcon, EmptyStateVariant, Stack, StackItem, } from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport React from 'react';\nconst useStyles = createUseStyles({\n    errorIcon: {\n        fill: 'var(--pf-v5-global--danger-color--100)',\n    },\n});\nconst ErrorState = (_a) => {\n    var { errorTitle = 'Something went wrong', errorDescription, defaultErrorDescription } = _a, props = __rest(_a, [\"errorTitle\", \"errorDescription\", \"defaultErrorDescription\"]);\n    const classes = useStyles();\n    return (React.createElement(EmptyState, Object.assign({ variant: EmptyStateVariant.lg }, props),\n        React.createElement(EmptyStateHeader, { titleText: React.createElement(React.Fragment, null, errorTitle), icon: React.createElement(EmptyStateIcon, { className: classes.errorIcon, icon: ExclamationCircleIcon }), headingLevel: \"h4\" }),\n        React.createElement(EmptyStateBody, null,\n            React.createElement(Stack, null, errorDescription ? React.createElement(StackItem, null, errorDescription) : defaultErrorDescription)),\n        React.createElement(EmptyStateFooter, null, document.referrer ? (React.createElement(Button, { variant: \"primary\", onClick: () => history.back() }, \"Return to last page\")) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: \".\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"Go to home page\")))));\n};\nexport default ErrorState;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n    errorStack: {\n        fontFamily: 'monospace',\n        fontSize: 'var(--pf-v5-global--icon--FontSize--md)',\n        textAlign: 'left',\n        backgroundColor: 'white',\n        borderStyle: 'solid',\n        borderColor: 'var(--pf-v5-global--BackgroundColor--dark-300)',\n        overflowWrap: 'break-word',\n        padding: 'var(--pf-v5-global--spacer--sm)'\n    },\n});\nexport const ErrorStack = (_a) => {\n    var { error, className } = _a, props = __rest(_a, [\"error\", \"className\"]);\n    const classes = useStyles();\n    if (error.stack) {\n        return (React.createElement(Text, Object.assign({ className: clsx(classes.errorStack, className) }, props), error.stack.split('\\n').map((line) => (React.createElement(\"div\", { key: line }, line)))));\n    }\n    if (error.name && error.message) {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Text, { component: \"h6\" }, error.name),\n            React.createElement(Text, Object.assign({ className: clsx(classes.errorStack, className), component: \"blockquote\" }, props), error.message)));\n    }\n    return (React.createElement(Text, { className: classes.errorStack, component: \"blockquote\" }, error.toString()));\n};\nexport default ErrorStack;\n","import * as React from 'react';\nimport { ExpandableSection, Title } from '@patternfly/react-core';\nimport ErrorState from '../ErrorState';\nimport ErrorStack from '../ErrorStack';\n// As of time of writing, React only supports error boundaries in class components\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateState = () => {\n            if (this.state.historyState !== history.state) {\n                this.setState({\n                    hasError: false,\n                    historyState: history.state,\n                });\n            }\n        };\n        this.state = {\n            hasError: false,\n            historyState: history.state,\n        };\n    }\n    static getDerivedStateFromError(error) {\n        return { hasError: true, error, historyState: history.state };\n    }\n    componentDidUpdate() {\n        this.updateState();\n    }\n    componentDidMount() {\n        this.updateState();\n    }\n    render() {\n        if (this.state.hasError) {\n            if (this.props.silent) {\n                return null;\n            }\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Title, { headingLevel: \"h1\", size: \"2xl\" }, this.props.headerTitle),\n                React.createElement(ErrorState, { errorTitle: this.props.errorTitle, errorDescription: React.createElement(React.Fragment, null,\n                        React.createElement(\"span\", null, this.props.errorDescription),\n                        this.state.error && (React.createElement(ExpandableSection, { toggleText: \"Show details\" },\n                            React.createElement(ErrorStack, { error: this.state.error })))), defaultErrorDescription: this.props.defaultErrorDescription })));\n        }\n        return this.props.children;\n    }\n}\nexport default ErrorBoundary;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DefaultErrorMessage = function () {\n    var redirectLink = 'https://access.redhat.com/support';\n    var statusLink = 'https://status.redhat.com';\n    return (_jsxs(_Fragment, { children: [\"If the problem persists, contact \", _jsx(\"a\", { href: redirectLink, children: \"Red Hat Support\" }), \" or check our \", _jsx(\"a\", { href: statusLink, children: \" status page\" }), \" for known outages.\"] }));\n};\nexport default DefaultErrorMessage;\n//# sourceMappingURL=DefaultErrorMessage.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport ErrorBoundaryPF from '@patternfly/react-component-groups/dist/dynamic/ErrorBoundary';\nimport { DefaultErrorMessage } from '../ErrorState';\nvar ErrorBoundary = function (props) { return (_jsx(ErrorBoundaryPF, __assign({ defaultErrorDescription: _jsx(DefaultErrorMessage, {}) }, props))); };\nexport default ErrorBoundary;\n//# sourceMappingURL=ErrorBoundary.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Portal from '../Portal';\nimport { clearNotifications, removeNotification } from '../redux/actions/notifications';\nimport { ErrorBoundary } from '@redhat-cloud-services/frontend-components/ErrorBoundary';\nexport var NotificationPortalBase = function (_a) {\n    var propsClear = _a.clearNotifications, props = __rest(_a, [\"clearNotifications\"]);\n    var notifications = useSelector(function (_a) {\n        var notifications = _a.notifications;\n        return notifications;\n    });\n    var dispatch = useDispatch();\n    var removeNotif = function (id) { return dispatch(removeNotification(id)); };\n    var onClearAll = function () { return dispatch(clearNotifications()); };\n    return (_jsx(Portal, __assign({ notifications: notifications, removeNotification: removeNotif, onClearAll: propsClear || onClearAll }, props)));\n};\nexport var NotificationPortal = function (_a) {\n    var _b = _a.silent, silent = _b === void 0 ? true : _b, props = __rest(_a, [\"silent\"]);\n    return (_jsx(ErrorBoundary, { headerTitle: \"Notifications portal\", silent: silent, children: _jsx(NotificationPortalBase, __assign({}, props)) }));\n};\nexport { default as Portal } from '../Portal';\nexport default NotificationPortal;\n//# sourceMappingURL=NotificationPortal.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport { addNotification } from '../redux/actions/notifications';\nimport { AlertVariant } from \"@patternfly/react-core/dist/dynamic/components/Alert\";\nvar prepareErrorMessage = function (payload, errorTitleKey, errorDescriptionKey) {\n    if (typeof payload === 'string') {\n        return {\n            title: 'Error',\n            description: payload,\n        };\n    }\n    var titleKey = errorTitleKey;\n    if (Array.isArray(errorTitleKey)) {\n        titleKey = errorTitleKey.find(function (key) { return has(payload, key); });\n    }\n    var descriptionKey = errorDescriptionKey;\n    if (Array.isArray(errorDescriptionKey)) {\n        descriptionKey = errorDescriptionKey.find(function (key) { return has(payload, key); });\n    }\n    return {\n        title: get(payload, titleKey) || 'Error',\n        description: get(payload, descriptionKey),\n        sentryId: payload === null || payload === void 0 ? void 0 : payload.sentryId,\n        requestId: payload === null || payload === void 0 ? void 0 : payload.requestId,\n    };\n};\nvar shouldDispatchDefaultError = function (_a) {\n    var isRejected = _a.isRejected, hasCustomNotification = _a.hasCustomNotification, noErrorOverride = _a.noErrorOverride, dispatchDefaultFailure = _a.dispatchDefaultFailure;\n    return isRejected && !hasCustomNotification && !noErrorOverride && dispatchDefaultFailure;\n};\nexport var createNotificationsMiddleware = function (options) {\n    var defaultOptions = {\n        dispatchDefaultFailure: true,\n        pendingSuffix: '_PENDING',\n        fulfilledSuffix: '_FULFILLED',\n        rejectedSuffix: '_REJECTED',\n        autoDismiss: false,\n        dismissDelay: 5000,\n        errorTitleKey: 'title',\n        errorDescriptionKey: 'detail',\n        useStatusText: false,\n    };\n    var middlewareOptions = __assign(__assign({}, defaultOptions), options);\n    var matchPending = function (type) { return Boolean(type.match(new RegExp(\"^.*\".concat(middlewareOptions.pendingSuffix, \"$\")))); };\n    var matchFulfilled = function (type) { return Boolean(type.match(new RegExp(\"^.*\".concat(middlewareOptions.fulfilledSuffix, \"$\")))); };\n    var matchRejected = function (type) { return Boolean(type.match(new RegExp(\"^.*\".concat(middlewareOptions.rejectedSuffix, \"$\")))); };\n    var defaultNotificationOptions = {\n        dismissable: !middlewareOptions.autoDismiss,\n        dismissDelay: middlewareOptions.dismissDelay,\n    };\n    var middleware = function (_a) {\n        var dispatch = _a.dispatch;\n        return function (next) {\n            return function (action) {\n                var meta = action.meta, type = action.type;\n                if (meta && meta.notifications) {\n                    var notifications = meta.notifications;\n                    if (matchPending(type) && notifications.pending) {\n                        if (typeof notifications.pending === 'function') {\n                            notifications.pending = notifications.pending(action.payload);\n                        }\n                        dispatch(addNotification(__assign(__assign({}, defaultNotificationOptions), notifications.pending)));\n                    }\n                    else if (matchFulfilled(type) && notifications.fulfilled) {\n                        if (typeof notifications.fulfilled === 'function') {\n                            notifications.fulfilled = notifications.fulfilled(action.payload);\n                        }\n                        dispatch(addNotification(__assign(__assign({}, defaultNotificationOptions), notifications.fulfilled)));\n                    }\n                    else if (matchRejected(type) && notifications.rejected) {\n                        if (typeof notifications.rejected === 'function') {\n                            notifications.rejected = notifications.rejected(action.payload);\n                        }\n                        dispatch(addNotification(__assign(__assign(__assign({}, defaultNotificationOptions), notifications.rejected), { sentryId: action.payload && action.payload.sentryId, requestId: action.payload && action.payload.requestId })));\n                    }\n                }\n                if (shouldDispatchDefaultError({\n                    isRejected: matchRejected(type),\n                    hasCustomNotification: meta && meta.notifications && meta.notifications.rejected,\n                    noErrorOverride: meta && meta.noError,\n                    dispatchDefaultFailure: middlewareOptions.dispatchDefaultFailure,\n                })) {\n                    if (middlewareOptions.useStatusText) {\n                        dispatch(addNotification(__assign({ variant: AlertVariant.danger, dismissable: true }, prepareErrorMessage(action.payload, middlewareOptions.errorTitleKey, 'statusText'))));\n                    }\n                    else {\n                        var namespaceKey = Array.isArray(middlewareOptions.errorNamespaceKey) && middlewareOptions.errorNamespaceKey.find(function (key) { return has(action.payload, key); });\n                        if (namespaceKey) {\n                            get(action.payload, namespaceKey).map(function (item) {\n                                dispatch(addNotification(__assign({ variant: AlertVariant.danger, dismissable: true }, prepareErrorMessage(item, middlewareOptions.errorTitleKey, middlewareOptions.errorDescriptionKey))));\n                            });\n                        }\n                        else {\n                            if (Array.isArray(action.payload)) {\n                                action.payload.map(function (item) {\n                                    dispatch(addNotification(__assign({ variant: AlertVariant.danger, dismissable: true }, prepareErrorMessage(item, middlewareOptions.errorTitleKey, middlewareOptions.errorDescriptionKey))));\n                                });\n                            }\n                            else {\n                                dispatch(addNotification(__assign({ variant: AlertVariant.danger, dismissable: true }, prepareErrorMessage(action.payload, middlewareOptions.errorTitleKey, middlewareOptions.errorDescriptionKey))));\n                            }\n                        }\n                    }\n                }\n                next(action);\n            };\n        };\n    };\n    return middleware;\n};\nexport default createNotificationsMiddleware;\n//# sourceMappingURL=notificationsMiddleware.js.map","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __extends } from \"tslib\";\nimport { createIntlCache } from '@formatjs/intl';\nimport * as React from 'react';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, shallowEqual } from '../utils';\nimport { Provider } from './injectIntl';\nimport { createIntl } from './createIntl';\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        onWarn: config.onWarn,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEqual(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"locale\", \"messages\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { IntlProvider as ReactIntlProvider } from 'react-intl';\nimport { LOCALSTORAGE_KEY } from '..';\nimport translatedMessages from '../locales/data.json';\nvar IntlProvider = function IntlProvider(_ref) {\n  var locale = _ref.locale,\n    messages = _ref.messages,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var language = locale || localStorage.getItem(LOCALSTORAGE_KEY) || navigator.language.split(/[-_]/)[0] || 'en';\n  return /*#__PURE__*/React.createElement(ReactIntlProvider, _extends({\n    locale: language,\n    messages: _objectSpread(_objectSpread({}, translatedMessages[language]), messages && messages.hasOwnProperty(language) ? messages[language] : messages)\n  }, props));\n};\nIntlProvider.propTypes = {\n  locale: PropTypes.string,\n  messages: PropTypes.object\n};\nIntlProvider.defaultProps = {\n  locale: null\n};\nexport default IntlProvider;","import { defineMessages } from 'react-intl';\nexport default defineMessages({\n  cancel: {\n    id: 'default.cancel',\n    description: 'Default cancel string',\n    defaultMessage: 'Cancel'\n  },\n  save: {\n    id: 'default.save',\n    description: 'Default save string',\n    defaultMessage: 'Save'\n  },\n  \"delete\": {\n    id: 'default.delete',\n    description: 'Default delete string',\n    defaultMessage: 'Delete'\n  },\n  remove: {\n    id: 'default.remove',\n    description: 'Default remove string',\n    defaultMessage: 'Remove'\n  }\n});","export { default as IntlProvider } from './Provider';\nexport { default as defaultMessages } from './messages';\nexport var LOCALSTORAGE_KEY = 'rhcs-language';\nexport { default as intlHelper } from './intlHelper';","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { createContext } from 'react';\nimport { ResourceDefinitionFilterOperationEnum } from '@redhat-cloud-services/rbac-client';\nexport function getRBAC(applicationName, disableCache) {\n    var _a, _b, _c, _d, _e;\n    if (applicationName === void 0) { applicationName = ''; }\n    if (disableCache === void 0) { disableCache = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        var insights, user;\n        var _f;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    insights = window.insights;\n                    return [4, ((_b = (_a = insights === null || insights === void 0 ? void 0 : insights.chrome) === null || _a === void 0 ? void 0 : _a.auth) === null || _b === void 0 ? void 0 : _b.getUser())];\n                case 1:\n                    user = _g.sent();\n                    _f = {\n                        isOrgAdmin: ((_d = (_c = user === null || user === void 0 ? void 0 : user.identity) === null || _c === void 0 ? void 0 : _c.user) === null || _d === void 0 ? void 0 : _d.is_org_admin) || false\n                    };\n                    return [4, ((_e = insights === null || insights === void 0 ? void 0 : insights.chrome) === null || _e === void 0 ? void 0 : _e.getUserPermissions(applicationName, disableCache))];\n                case 2: return [2, (_f.permissions = (_g.sent()) || null,\n                        _f)];\n            }\n        });\n    });\n}\nfunction isAccessType(permission) {\n    return typeof permission === 'object';\n}\nfunction extractResourceDefinitionValues(rds) {\n    return rds.reduce(function (acc, cur) {\n        var _a = cur.attributeFilter, key = _a.key, operation = _a.operation, value = _a.value;\n        if (operation === ResourceDefinitionFilterOperationEnum.In) {\n            return __spreadArray(__spreadArray([], acc, true), (Array.isArray(value) ? value.map(function (value) { return (value === null ? 'null' : value); }).toString() : value)\n                .split(',')\n                .map(function (value) { return \"\".concat(key, \":\").concat(value); }), true);\n        }\n        if (operation === ResourceDefinitionFilterOperationEnum.Equal) {\n            return __spreadArray(__spreadArray([], acc, true), [\"\".concat(key, \":\").concat(value)], false);\n        }\n        throw new TypeError('Resource definition operation has incorrect format.');\n    }, []);\n}\nfunction verifyResourceDefinitions(userRds, requestedRds) {\n    var userValues = extractResourceDefinitionValues(userRds), requestedValues = extractResourceDefinitionValues(requestedRds);\n    return requestedValues.every(function (value) { return userValues.includes(value); });\n}\nfunction checkRequestedPermission(userPermissions, requestedPermission, checkResourceDefinitions) {\n    return userPermissions.some(function (userPermission) {\n        var requestedPermissionArray = (isAccessType(requestedPermission) ? requestedPermission.permission : requestedPermission).split(':');\n        var userPermissionArray = (isAccessType(userPermission) ? userPermission.permission : userPermission).split(':');\n        var matchesPermission = userPermissionArray.slice(0).reduce(function (acc, curr, index, array) {\n            if (acc === false) {\n                array.splice(index);\n                return acc;\n            }\n            return curr === '*' || curr === (requestedPermissionArray === null || requestedPermissionArray === void 0 ? void 0 : requestedPermissionArray[index]);\n        }, true);\n        if (checkResourceDefinitions === true && matchesPermission === true) {\n            if (isAccessType(userPermission)) {\n                if (userPermission.resourceDefinitions === undefined || userPermission.resourceDefinitions.length === 0) {\n                    return true;\n                }\n                if (!isAccessType(requestedPermission) ||\n                    userPermission.resourceDefinitions === undefined ||\n                    requestedPermission.resourceDefinitions.length === 0) {\n                    return false;\n                }\n                return verifyResourceDefinitions(userPermission.resourceDefinitions, requestedPermission.resourceDefinitions);\n            }\n            return true;\n        }\n        return matchesPermission;\n    });\n}\nexport function doesHavePermissions(userPermissions, permissionList, checkResourceDefinitions) {\n    if (!userPermissions) {\n        return false;\n    }\n    return permissionList.some(function (permission) { return checkRequestedPermission(userPermissions, permission, checkResourceDefinitions); });\n}\nexport function hasAllPermissions(userPermissions, permissionList, checkResourceDefinitions) {\n    if (!userPermissions) {\n        return false;\n    }\n    return permissionList.every(function (permission) { return checkRequestedPermission(userPermissions, permission, checkResourceDefinitions); });\n}\nexport var initialPermissions = {\n    isLoading: true,\n    isOrgAdmin: false,\n    permissions: [],\n};\nexport var RBACContext = createContext(initialPermissions);\nexport default getRBAC;\n//# sourceMappingURL=RBAC.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useContext, useEffect, useState } from 'react';\nimport { RBACContext, doesHavePermissions, getRBAC, hasAllPermissions } from '../RBAC';\nexport function usePermissions(appName, permissionsList, disableCache, checkAll, checkResourceDefinitions) {\n    var _this = this;\n    if (checkResourceDefinitions === void 0) { checkResourceDefinitions = false; }\n    var _a = useState({\n        isLoading: true,\n        hasAccess: false,\n        isOrgAdmin: false,\n        permissions: [],\n    }), permissions = _a[0], setPermissions = _a[1];\n    useEffect(function () {\n        var ignore = false;\n        setPermissions(function (prev) { return (__assign(__assign({}, prev), { isLoading: true })); });\n        (function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, isOrgAdmin, userPermissions;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4, getRBAC(appName, disableCache)];\n                    case 1:\n                        _a = _b.sent(), isOrgAdmin = _a.isOrgAdmin, userPermissions = _a.permissions;\n                        !ignore &&\n                            setPermissions({\n                                isLoading: false,\n                                isOrgAdmin: isOrgAdmin,\n                                permissions: userPermissions,\n                                hasAccess: checkAll\n                                    ? hasAllPermissions(userPermissions, permissionsList, checkResourceDefinitions)\n                                    : doesHavePermissions(userPermissions, permissionsList, checkResourceDefinitions),\n                            });\n                        return [2];\n                }\n            });\n        }); })();\n        return function () {\n            ignore = true;\n        };\n    }, [appName, disableCache]);\n    return permissions;\n}\nexport var usePermissionsWithContext = function (requiredPermissions, checkAll, checkResourceDefinitionsOverride) {\n    var _a = useContext(RBACContext), hasAccess = _a.hasAccess, permissionState = __rest(_a, [\"hasAccess\"]);\n    return __assign(__assign({}, permissionState), { hasAccess: (hasAccess === null || hasAccess === void 0 ? void 0 : hasAccess(requiredPermissions, checkAll, checkResourceDefinitionsOverride)) || false });\n};\nexport default usePermissions;\n//# sourceMappingURL=RBACHook.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { Bullseye } from \"@patternfly/react-core/dist/dynamic/layouts/Bullseye\";\nimport { Spinner } from \"@patternfly/react-core/dist/dynamic/components/Spinner\";\nimport { RBACContext, doesHavePermissions, getRBAC, hasAllPermissions, initialPermissions, } from '@redhat-cloud-services/frontend-components-utilities/RBAC';\nvar hasAccessWithUserPermissions = function (userPermissions, checkResourceDefinitions) {\n    return function (requiredPermissions, checkAll, checkResourceDefinitionsOverride) {\n        return checkAll\n            ? hasAllPermissions(userPermissions, requiredPermissions, checkResourceDefinitionsOverride !== null && checkResourceDefinitionsOverride !== void 0 ? checkResourceDefinitionsOverride : checkResourceDefinitions)\n            : doesHavePermissions(userPermissions, requiredPermissions, checkResourceDefinitionsOverride !== null && checkResourceDefinitionsOverride !== void 0 ? checkResourceDefinitionsOverride : checkResourceDefinitions);\n    };\n};\nexport var RBACProvider = function (_a) {\n    var appName = _a.appName, _b = _a.checkResourceDefinitions, checkResourceDefinitions = _b === void 0 ? false : _b, children = _a.children;\n    var _c = useState(initialPermissions), permissionState = _c[0], setPermissionState = _c[1];\n    var fetchPermissions = function () { return __awaiter(void 0, void 0, void 0, function () {\n        var _a, isOrgAdmin, userPermissions;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, getRBAC(appName === null ? '' : appName, true)];\n                case 1:\n                    _a = _b.sent(), isOrgAdmin = _a.isOrgAdmin, userPermissions = _a.permissions;\n                    setPermissionState(function (currentPerms) { return (__assign(__assign({}, currentPerms), { isLoading: false, isOrgAdmin: isOrgAdmin, permissions: userPermissions })); });\n                    return [2];\n            }\n        });\n    }); };\n    useEffect(function () {\n        if (appName !== undefined) {\n            fetchPermissions();\n        }\n        else {\n            setPermissionState(function (currentPerms) { return (__assign(__assign({}, currentPerms), { isLoading: false })); });\n        }\n    }, [appName]);\n    return (_jsx(RBACContext.Provider, { value: __assign(__assign({}, permissionState), { hasAccess: hasAccessWithUserPermissions((permissionState === null || permissionState === void 0 ? void 0 : permissionState.permissions) || [], checkResourceDefinitions) }), children: !permissionState.isLoading ? (children) : (_jsx(Bullseye, { children: _jsx(Spinner, { size: \"xl\" }) })) }));\n};\n//# sourceMappingURL=RBACProvider.js.map","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusApi = exports.StatusApiFactory = exports.StatusApiFp = exports.StatusApiAxiosParamCreator = exports.RoleApi = exports.RoleApiFactory = exports.RoleApiFp = exports.RoleApiAxiosParamCreator = exports.PrincipalApi = exports.PrincipalApiFactory = exports.PrincipalApiFp = exports.PrincipalApiAxiosParamCreator = exports.PolicyApi = exports.PolicyApiFactory = exports.PolicyApiFp = exports.PolicyApiAxiosParamCreator = exports.PermissionApi = exports.PermissionApiFactory = exports.PermissionApiFp = exports.PermissionApiAxiosParamCreator = exports.GroupApi = exports.GroupApiFactory = exports.GroupApiFp = exports.GroupApiAxiosParamCreator = exports.CrossAccountRequestApi = exports.CrossAccountRequestApiFactory = exports.CrossAccountRequestApiFp = exports.CrossAccountRequestApiAxiosParamCreator = exports.AccessApi = exports.AccessApiFactory = exports.AccessApiFp = exports.AccessApiAxiosParamCreator = exports.ResourceDefinitionFilterOperationEnum = exports.CrossAccountRequestPatchStatusEnum = void 0;\nvar globalImportUrl = require(\"url\");\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar base_1 = require(\"./base\");\n/**\n    * @export\n    * @enum {string}\n    */\nvar CrossAccountRequestPatchStatusEnum;\n(function (CrossAccountRequestPatchStatusEnum) {\n    CrossAccountRequestPatchStatusEnum[\"Pending\"] = \"pending\";\n    CrossAccountRequestPatchStatusEnum[\"Approved\"] = \"approved\";\n    CrossAccountRequestPatchStatusEnum[\"Expired\"] = \"expired\";\n    CrossAccountRequestPatchStatusEnum[\"Cancelled\"] = \"cancelled\";\n    CrossAccountRequestPatchStatusEnum[\"Denied\"] = \"denied\";\n})(CrossAccountRequestPatchStatusEnum = exports.CrossAccountRequestPatchStatusEnum || (exports.CrossAccountRequestPatchStatusEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar ResourceDefinitionFilterOperationEnum;\n(function (ResourceDefinitionFilterOperationEnum) {\n    ResourceDefinitionFilterOperationEnum[\"Equal\"] = \"equal\";\n    ResourceDefinitionFilterOperationEnum[\"In\"] = \"in\";\n})(ResourceDefinitionFilterOperationEnum = exports.ResourceDefinitionFilterOperationEnum || (exports.ResourceDefinitionFilterOperationEnum = {}));\n/**\n * AccessApi - axios parameter creator\n * @export\n */\nvar AccessApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {'application' | 'resource_type' | 'verb'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, orderBy, status, limit, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'application' is not null or undefined\n                    if (application === null || application === undefined) {\n                        throw new base_1.RequiredError('application', 'Required parameter application was null or undefined when calling getPrincipalAccess.');\n                    }\n                    localVarPath = \"/access/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (status !== undefined) {\n                        localVarQueryParameter['status'] = status;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.AccessApiAxiosParamCreator = AccessApiAxiosParamCreator;\n/**\n * AccessApi - functional programming interface\n * @export\n */\nvar AccessApiFp = function (configuration) {\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {'application' | 'resource_type' | 'verb'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, orderBy, status, limit, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.AccessApiAxiosParamCreator)(configuration).getPrincipalAccess(application, username, orderBy, status, limit, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.AccessApiFp = AccessApiFp;\n/**\n * AccessApi - factory interface\n * @export\n */\nvar AccessApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {'application' | 'resource_type' | 'verb'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, orderBy, status, limit, offset, options) {\n            return (0, exports.AccessApiFp)(configuration).getPrincipalAccess(application, username, orderBy, status, limit, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.AccessApiFactory = AccessApiFactory;\n/**\n * AccessApi - object-oriented interface\n * @export\n * @class AccessApi\n * @extends {BaseAPI}\n */\nvar AccessApi = /** @class */ (function (_super) {\n    __extends(AccessApi, _super);\n    function AccessApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Access responses are sorted in ascending order by an ID internal to the database\n     * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n     * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n     * @param {'application' | 'resource_type' | 'verb'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n     * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccessApi\n     */\n    AccessApi.prototype.getPrincipalAccess = function (application, username, orderBy, status, limit, offset, options) {\n        var _this = this;\n        return (0, exports.AccessApiFp)(this.configuration).getPrincipalAccess(application, username, orderBy, status, limit, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return AccessApi;\n}(base_1.BaseAPI));\nexports.AccessApi = AccessApi;\n/**\n * CrossAccountRequestApi - axios parameter creator\n * @export\n */\nvar CrossAccountRequestApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Create a cross account request\n         * @param {CrossAccountRequestIn} crossAccountRequestIn CrossAccountRequest to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCrossAccountRequests: function (crossAccountRequestIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'crossAccountRequestIn' is not null or undefined\n                    if (crossAccountRequestIn === null || crossAccountRequestIn === undefined) {\n                        throw new base_1.RequiredError('crossAccountRequestIn', 'Required parameter crossAccountRequestIn was null or undefined when calling createCrossAccountRequests.');\n                    }\n                    localVarPath = \"/cross-account-requests/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof crossAccountRequestIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(crossAccountRequestIn !== undefined ? crossAccountRequestIn : {}) : (crossAccountRequestIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCrossAccountRequest: function (uuid, queryBy, account, approvedOnly, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getCrossAccountRequest.');\n                    }\n                    localVarPath = \"/cross-account-requests/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (queryBy !== undefined) {\n                        localVarQueryParameter['query_by'] = queryBy;\n                    }\n                    if (account !== undefined) {\n                        localVarQueryParameter['account'] = account;\n                    }\n                    if (approvedOnly !== undefined) {\n                        localVarQueryParameter['approved_only'] = approvedOnly;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by created_at\n         * @summary List the cross account requests for a user or account\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {string} [orgId] Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by org id.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {'pending' | 'approved' | 'denied' | 'cancelled' | 'expired'} [status] Parameter for filtering resource based on status.\n         * @param {'request_id' | 'start_date' | 'end_date' | 'created' | 'modified' | 'status'} [orderBy] Parameter for ordering by field. For inverse ordering, use \\&#39;-\\&#39;, e.g. ?order_by&#x3D;-start_date.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listCrossAccountRequests: function (limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/cross-account-requests/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (queryBy !== undefined) {\n                        localVarQueryParameter['query_by'] = queryBy;\n                    }\n                    if (account !== undefined) {\n                        localVarQueryParameter['account'] = account;\n                    }\n                    if (orgId !== undefined) {\n                        localVarQueryParameter['org_id'] = orgId;\n                    }\n                    if (approvedOnly !== undefined) {\n                        localVarQueryParameter['approved_only'] = approvedOnly;\n                    }\n                    if (status !== undefined) {\n                        localVarQueryParameter['status'] = status;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\n         * @summary Patch a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestPatch} crossAccountRequestPatch Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchCrossAccountRequest: function (uuid, crossAccountRequestPatch, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling patchCrossAccountRequest.');\n                    }\n                    // verify required parameter 'crossAccountRequestPatch' is not null or undefined\n                    if (crossAccountRequestPatch === null || crossAccountRequestPatch === undefined) {\n                        throw new base_1.RequiredError('crossAccountRequestPatch', 'Required parameter crossAccountRequestPatch was null or undefined when calling patchCrossAccountRequest.');\n                    }\n                    localVarPath = \"/cross-account-requests/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof crossAccountRequestPatch !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(crossAccountRequestPatch !== undefined ? crossAccountRequestPatch : {}) : (crossAccountRequestPatch || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\n         * @summary Update a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestUpdateIn} crossAccountRequestUpdateIn Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        putCrossAccountRequest: function (uuid, crossAccountRequestUpdateIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling putCrossAccountRequest.');\n                    }\n                    // verify required parameter 'crossAccountRequestUpdateIn' is not null or undefined\n                    if (crossAccountRequestUpdateIn === null || crossAccountRequestUpdateIn === undefined) {\n                        throw new base_1.RequiredError('crossAccountRequestUpdateIn', 'Required parameter crossAccountRequestUpdateIn was null or undefined when calling putCrossAccountRequest.');\n                    }\n                    localVarPath = \"/cross-account-requests/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof crossAccountRequestUpdateIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(crossAccountRequestUpdateIn !== undefined ? crossAccountRequestUpdateIn : {}) : (crossAccountRequestUpdateIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.CrossAccountRequestApiAxiosParamCreator = CrossAccountRequestApiAxiosParamCreator;\n/**\n * CrossAccountRequestApi - functional programming interface\n * @export\n */\nvar CrossAccountRequestApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a cross account request\n         * @param {CrossAccountRequestIn} crossAccountRequestIn CrossAccountRequest to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCrossAccountRequests: function (crossAccountRequestIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).createCrossAccountRequests(crossAccountRequestIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCrossAccountRequest: function (uuid, queryBy, account, approvedOnly, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).getCrossAccountRequest(uuid, queryBy, account, approvedOnly, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by created_at\n         * @summary List the cross account requests for a user or account\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {string} [orgId] Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by org id.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {'pending' | 'approved' | 'denied' | 'cancelled' | 'expired'} [status] Parameter for filtering resource based on status.\n         * @param {'request_id' | 'start_date' | 'end_date' | 'created' | 'modified' | 'status'} [orderBy] Parameter for ordering by field. For inverse ordering, use \\&#39;-\\&#39;, e.g. ?order_by&#x3D;-start_date.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listCrossAccountRequests: function (limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).listCrossAccountRequests(limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\n         * @summary Patch a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestPatch} crossAccountRequestPatch Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchCrossAccountRequest: function (uuid, crossAccountRequestPatch, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).patchCrossAccountRequest(uuid, crossAccountRequestPatch, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\n         * @summary Update a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestUpdateIn} crossAccountRequestUpdateIn Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        putCrossAccountRequest: function (uuid, crossAccountRequestUpdateIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).putCrossAccountRequest(uuid, crossAccountRequestUpdateIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.CrossAccountRequestApiFp = CrossAccountRequestApiFp;\n/**\n * CrossAccountRequestApi - factory interface\n * @export\n */\nvar CrossAccountRequestApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a cross account request\n         * @param {CrossAccountRequestIn} crossAccountRequestIn CrossAccountRequest to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCrossAccountRequests: function (crossAccountRequestIn, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).createCrossAccountRequests(crossAccountRequestIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCrossAccountRequest: function (uuid, queryBy, account, approvedOnly, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).getCrossAccountRequest(uuid, queryBy, account, approvedOnly, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by created_at\n         * @summary List the cross account requests for a user or account\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {string} [orgId] Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by org id.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {'pending' | 'approved' | 'denied' | 'cancelled' | 'expired'} [status] Parameter for filtering resource based on status.\n         * @param {'request_id' | 'start_date' | 'end_date' | 'created' | 'modified' | 'status'} [orderBy] Parameter for ordering by field. For inverse ordering, use \\&#39;-\\&#39;, e.g. ?order_by&#x3D;-start_date.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listCrossAccountRequests: function (limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).listCrossAccountRequests(limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\n         * @summary Patch a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestPatch} crossAccountRequestPatch Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchCrossAccountRequest: function (uuid, crossAccountRequestPatch, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).patchCrossAccountRequest(uuid, crossAccountRequestPatch, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\n         * @summary Update a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestUpdateIn} crossAccountRequestUpdateIn Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        putCrossAccountRequest: function (uuid, crossAccountRequestUpdateIn, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).putCrossAccountRequest(uuid, crossAccountRequestUpdateIn, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.CrossAccountRequestApiFactory = CrossAccountRequestApiFactory;\n/**\n * CrossAccountRequestApi - object-oriented interface\n * @export\n * @class CrossAccountRequestApi\n * @extends {BaseAPI}\n */\nvar CrossAccountRequestApi = /** @class */ (function (_super) {\n    __extends(CrossAccountRequestApi, _super);\n    function CrossAccountRequestApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a cross account request\n     * @param {CrossAccountRequestIn} crossAccountRequestIn CrossAccountRequest to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.createCrossAccountRequests = function (crossAccountRequestIn, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).createCrossAccountRequests(crossAccountRequestIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a cross account request\n     * @param {string} uuid ID of cross account request to get\n     * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n     * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n     * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.getCrossAccountRequest = function (uuid, queryBy, account, approvedOnly, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).getCrossAccountRequest(uuid, queryBy, account, approvedOnly, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by created_at\n     * @summary List the cross account requests for a user or account\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n     * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n     * @param {string} [orgId] Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by org id.\n     * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n     * @param {'pending' | 'approved' | 'denied' | 'cancelled' | 'expired'} [status] Parameter for filtering resource based on status.\n     * @param {'request_id' | 'start_date' | 'end_date' | 'created' | 'modified' | 'status'} [orderBy] Parameter for ordering by field. For inverse ordering, use \\&#39;-\\&#39;, e.g. ?order_by&#x3D;-start_date.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.listCrossAccountRequests = function (limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).listCrossAccountRequests(limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\n     * @summary Patch a cross account request\n     * @param {string} uuid ID of cross account request to get\n     * @param {CrossAccountRequestPatch} crossAccountRequestPatch Updates to CrossAccountRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.patchCrossAccountRequest = function (uuid, crossAccountRequestPatch, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).patchCrossAccountRequest(uuid, crossAccountRequestPatch, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\n     * @summary Update a cross account request\n     * @param {string} uuid ID of cross account request to get\n     * @param {CrossAccountRequestUpdateIn} crossAccountRequestUpdateIn Updates to CrossAccountRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.putCrossAccountRequest = function (uuid, crossAccountRequestUpdateIn, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).putCrossAccountRequest(uuid, crossAccountRequestUpdateIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return CrossAccountRequestApi;\n}(base_1.BaseAPI));\nexports.CrossAccountRequestApi = CrossAccountRequestApi;\n/**\n * GroupApi - axios parameter creator\n * @export\n */\nvar GroupApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling addPrincipalToGroup.');\n                    }\n                    // verify required parameter 'groupPrincipalIn' is not null or undefined\n                    if (groupPrincipalIn === null || groupPrincipalIn === undefined) {\n                        throw new base_1.RequiredError('groupPrincipalIn', 'Required parameter groupPrincipalIn was null or undefined when calling addPrincipalToGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof groupPrincipalIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(groupPrincipalIn !== undefined ? groupPrincipalIn : {}) : (groupPrincipalIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling addRoleToGroup.');\n                    }\n                    // verify required parameter 'groupRoleIn' is not null or undefined\n                    if (groupRoleIn === null || groupRoleIn === undefined) {\n                        throw new base_1.RequiredError('groupRoleIn', 'Required parameter groupRoleIn was null or undefined when calling addRoleToGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof groupRoleIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(groupRoleIn !== undefined ? groupRoleIn : {}) : (groupRoleIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'group' is not null or undefined\n                    if (group === null || group === undefined) {\n                        throw new base_1.RequiredError('group', 'Required parameter group was null or undefined when calling createGroup.');\n                    }\n                    localVarPath = \"/groups/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof group !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(group !== undefined ? group : {}) : (group || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} [usernames] A comma separated list of usernames for principals to remove from the group\n         * @param {string} [serviceAccounts] A comma separated list of usernames for service accounts to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, serviceAccounts, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deletePrincipalFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (usernames !== undefined) {\n                        localVarQueryParameter['usernames'] = usernames;\n                    }\n                    if (serviceAccounts !== undefined) {\n                        localVarQueryParameter['service-accounts'] = serviceAccounts;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteRoleFromGroup.');\n                    }\n                    // verify required parameter 'roles' is not null or undefined\n                    if (roles === null || roles === undefined) {\n                        throw new base_1.RequiredError('roles', 'Required parameter roles was null or undefined when calling deleteRoleFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (roles !== undefined) {\n                        localVarQueryParameter['roles'] = roles;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account.\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {'service-account' | 'user'} [principalType] Parameter for selecting the type of principal to be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, adminOnly, principalUsername, limit, offset, orderBy, usernameOnly, principalType, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getPrincipalsFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (adminOnly !== undefined) {\n                        localVarQueryParameter['admin_only'] = adminOnly;\n                    }\n                    if (principalUsername !== undefined) {\n                        localVarQueryParameter['principal_username'] = principalUsername;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (usernameOnly !== undefined) {\n                        localVarQueryParameter['username_only'] = usernameOnly;\n                    }\n                    if (principalType !== undefined) {\n                        localVarQueryParameter['principal_type'] = principalType;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [excludeUsername] A username for a principal to filter for groups where principal is not a member and can be added manually\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {boolean} [platformDefault] An optional flag to return either platform default or non-platform default groups.\n         * @param {boolean} [adminDefault] An optional flag to return either admin default or non-admin default groups.\n         * @param {boolean} [system] An optional flag to return either system or non-system groups.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/groups/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (nameMatch !== undefined) {\n                        localVarQueryParameter['name_match'] = nameMatch;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (excludeUsername !== undefined) {\n                        localVarQueryParameter['exclude_username'] = excludeUsername;\n                    }\n                    if (uuid) {\n                        localVarQueryParameter['uuid'] = uuid.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (roleNames) {\n                        localVarQueryParameter['role_names'] = roleNames.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (roleDiscriminator !== undefined) {\n                        localVarQueryParameter['role_discriminator'] = roleDiscriminator;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (platformDefault !== undefined) {\n                        localVarQueryParameter['platform_default'] = platformDefault;\n                    }\n                    if (adminDefault !== undefined) {\n                        localVarQueryParameter['admin_default'] = adminDefault;\n                    }\n                    if (system !== undefined) {\n                        localVarQueryParameter['system'] = system;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {boolean} [roleSystem] Parameter for filtering group roles by system flag.\n         * @param {string} [roleExternalTenant] Parameter for filtering group roles by role &#x60;external_tenant&#x60; using string search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling listRolesForGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (exclude !== undefined) {\n                        localVarQueryParameter['exclude'] = exclude;\n                    }\n                    if (roleName !== undefined) {\n                        localVarQueryParameter['role_name'] = roleName;\n                    }\n                    if (roleDisplayName !== undefined) {\n                        localVarQueryParameter['role_display_name'] = roleDisplayName;\n                    }\n                    if (roleDescription !== undefined) {\n                        localVarQueryParameter['role_description'] = roleDescription;\n                    }\n                    if (roleSystem !== undefined) {\n                        localVarQueryParameter['role_system'] = roleSystem;\n                    }\n                    if (roleExternalTenant !== undefined) {\n                        localVarQueryParameter['role_external_tenant'] = roleExternalTenant;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updateGroup.');\n                    }\n                    // verify required parameter 'group' is not null or undefined\n                    if (group === null || group === undefined) {\n                        throw new base_1.RequiredError('group', 'Required parameter group was null or undefined when calling updateGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof group !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(group !== undefined ? group : {}) : (group || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.GroupApiAxiosParamCreator = GroupApiAxiosParamCreator;\n/**\n * GroupApi - functional programming interface\n * @export\n */\nvar GroupApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).addRoleToGroup(uuid, groupRoleIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).createGroup(group, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).deleteGroup(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} [usernames] A comma separated list of usernames for principals to remove from the group\n         * @param {string} [serviceAccounts] A comma separated list of usernames for service accounts to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, serviceAccounts, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).deletePrincipalFromGroup(uuid, usernames, serviceAccounts, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).deleteRoleFromGroup(uuid, roles, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).getGroup(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account.\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {'service-account' | 'user'} [principalType] Parameter for selecting the type of principal to be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, adminOnly, principalUsername, limit, offset, orderBy, usernameOnly, principalType, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).getPrincipalsFromGroup(uuid, adminOnly, principalUsername, limit, offset, orderBy, usernameOnly, principalType, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [excludeUsername] A username for a principal to filter for groups where principal is not a member and can be added manually\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {boolean} [platformDefault] An optional flag to return either platform default or non-platform default groups.\n         * @param {boolean} [adminDefault] An optional flag to return either admin default or non-admin default groups.\n         * @param {boolean} [system] An optional flag to return either system or non-system groups.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).listGroups(limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {boolean} [roleSystem] Parameter for filtering group roles by system flag.\n         * @param {string} [roleExternalTenant] Parameter for filtering group roles by role &#x60;external_tenant&#x60; using string search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).updateGroup(uuid, group, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.GroupApiFp = GroupApiFp;\n/**\n * GroupApi - factory interface\n * @export\n */\nvar GroupApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            return (0, exports.GroupApiFp)(configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            return (0, exports.GroupApiFp)(configuration).addRoleToGroup(uuid, groupRoleIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            return (0, exports.GroupApiFp)(configuration).createGroup(group, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            return (0, exports.GroupApiFp)(configuration).deleteGroup(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} [usernames] A comma separated list of usernames for principals to remove from the group\n         * @param {string} [serviceAccounts] A comma separated list of usernames for service accounts to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, serviceAccounts, options) {\n            return (0, exports.GroupApiFp)(configuration).deletePrincipalFromGroup(uuid, usernames, serviceAccounts, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            return (0, exports.GroupApiFp)(configuration).deleteRoleFromGroup(uuid, roles, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            return (0, exports.GroupApiFp)(configuration).getGroup(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account.\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {'service-account' | 'user'} [principalType] Parameter for selecting the type of principal to be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, adminOnly, principalUsername, limit, offset, orderBy, usernameOnly, principalType, options) {\n            return (0, exports.GroupApiFp)(configuration).getPrincipalsFromGroup(uuid, adminOnly, principalUsername, limit, offset, orderBy, usernameOnly, principalType, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [excludeUsername] A username for a principal to filter for groups where principal is not a member and can be added manually\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {boolean} [platformDefault] An optional flag to return either platform default or non-platform default groups.\n         * @param {boolean} [adminDefault] An optional flag to return either admin default or non-admin default groups.\n         * @param {boolean} [system] An optional flag to return either system or non-system groups.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options) {\n            return (0, exports.GroupApiFp)(configuration).listGroups(limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {boolean} [roleSystem] Parameter for filtering group roles by system flag.\n         * @param {string} [roleExternalTenant] Parameter for filtering group roles by role &#x60;external_tenant&#x60; using string search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options) {\n            return (0, exports.GroupApiFp)(configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Update a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            return (0, exports.GroupApiFp)(configuration).updateGroup(uuid, group, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.GroupApiFactory = GroupApiFactory;\n/**\n * GroupApi - object-oriented interface\n * @export\n * @class GroupApi\n * @extends {BaseAPI}\n */\nvar GroupApi = /** @class */ (function (_super) {\n    __extends(GroupApi, _super);\n    function GroupApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Add a principal to a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.addPrincipalToGroup = function (uuid, groupPrincipalIn, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Add a role to a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {GroupRoleIn} groupRoleIn Role to add to a group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.addRoleToGroup = function (uuid, groupRoleIn, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).addRoleToGroup(uuid, groupRoleIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Create a group in a tenant\n     * @param {Group} group Group to create in tenant\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.createGroup = function (group, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).createGroup(group, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a group in the tenant\n     * @param {string} uuid ID of group to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deleteGroup = function (uuid, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).deleteGroup(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Remove a principal from a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {string} [usernames] A comma separated list of usernames for principals to remove from the group\n     * @param {string} [serviceAccounts] A comma separated list of usernames for service accounts to remove from the group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deletePrincipalFromGroup = function (uuid, usernames, serviceAccounts, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).deletePrincipalFromGroup(uuid, usernames, serviceAccounts, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Remove a role from a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deleteRoleFromGroup = function (uuid, roles, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).deleteRoleFromGroup(uuid, roles, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a group in the tenant\n     * @param {string} uuid ID of group to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.getGroup = function (uuid, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).getGroup(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by username\n     * @summary Get a list of principals from a group in the tenant\n     * @param {string} uuid ID of group from which to get principals\n     * @param {'true' | 'false'} [adminOnly] Get only admin users within an account.\n     * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n     * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n     * @param {'service-account' | 'user'} [principalType] Parameter for selecting the type of principal to be returned.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.getPrincipalsFromGroup = function (uuid, adminOnly, principalUsername, limit, offset, orderBy, usernameOnly, principalType, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).getPrincipalsFromGroup(uuid, adminOnly, principalUsername, limit, offset, orderBy, usernameOnly, principalType, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by group name\n     * @summary List the groups for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {string} [username] A username for a principal to filter for groups\n     * @param {string} [excludeUsername] A username for a principal to filter for groups where principal is not a member and can be added manually\n     * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n     * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n     * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n     * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {boolean} [platformDefault] An optional flag to return either platform default or non-platform default groups.\n     * @param {boolean} [adminDefault] An optional flag to return either admin default or non-admin default groups.\n     * @param {boolean} [system] An optional flag to return either system or non-system groups.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.listGroups = function (limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).listGroups(limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by role name\n     * @summary List the roles for a group in the tenant\n     * @param {string} uuid ID of group\n     * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n     * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n     * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n     * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n     * @param {boolean} [roleSystem] Parameter for filtering group roles by system flag.\n     * @param {string} [roleExternalTenant] Parameter for filtering group roles by role &#x60;external_tenant&#x60; using string search.\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.listRolesForGroup = function (uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Update a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {Group} group Group to update in tenant\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.updateGroup = function (uuid, group, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).updateGroup(uuid, group, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return GroupApi;\n}(base_1.BaseAPI));\nexports.GroupApi = GroupApi;\n/**\n * PermissionApi - axios parameter creator\n * @export\n */\nvar PermissionApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission option with a global allowance on the supplied \\&#39;?field&#x3D;\\&#39; value of \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'field' is not null or undefined\n                    if (field === null || field === undefined) {\n                        throw new base_1.RequiredError('field', 'Required parameter field was null or undefined when calling listPermissionOptions.');\n                    }\n                    localVarPath = \"/permissions/options/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (field !== undefined) {\n                        localVarQueryParameter['field'] = field;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (resourceType !== undefined) {\n                        localVarQueryParameter['resource_type'] = resourceType;\n                    }\n                    if (verb !== undefined) {\n                        localVarQueryParameter['verb'] = verb;\n                    }\n                    if (excludeGlobals !== undefined) {\n                        localVarQueryParameter['exclude_globals'] = excludeGlobals;\n                    }\n                    if (allowedOnly !== undefined) {\n                        localVarQueryParameter['allowed_only'] = allowedOnly;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {string} [excludeRoles] An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/permissions/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (resourceType !== undefined) {\n                        localVarQueryParameter['resource_type'] = resourceType;\n                    }\n                    if (verb !== undefined) {\n                        localVarQueryParameter['verb'] = verb;\n                    }\n                    if (permission !== undefined) {\n                        localVarQueryParameter['permission'] = permission;\n                    }\n                    if (excludeGlobals !== undefined) {\n                        localVarQueryParameter['exclude_globals'] = excludeGlobals;\n                    }\n                    if (excludeRoles !== undefined) {\n                        localVarQueryParameter['exclude_roles'] = excludeRoles;\n                    }\n                    if (allowedOnly !== undefined) {\n                        localVarQueryParameter['allowed_only'] = allowedOnly;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.PermissionApiAxiosParamCreator = PermissionApiAxiosParamCreator;\n/**\n * PermissionApi - functional programming interface\n * @export\n */\nvar PermissionApiFp = function (configuration) {\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission option with a global allowance on the supplied \\&#39;?field&#x3D;\\&#39; value of \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PermissionApiAxiosParamCreator)(configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {string} [excludeRoles] An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PermissionApiAxiosParamCreator)(configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.PermissionApiFp = PermissionApiFp;\n/**\n * PermissionApi - factory interface\n * @export\n */\nvar PermissionApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission option with a global allowance on the supplied \\&#39;?field&#x3D;\\&#39; value of \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options) {\n            return (0, exports.PermissionApiFp)(configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {string} [excludeRoles] An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options) {\n            return (0, exports.PermissionApiFp)(configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.PermissionApiFactory = PermissionApiFactory;\n/**\n * PermissionApi - object-oriented interface\n * @export\n * @class PermissionApi\n * @extends {BaseAPI}\n */\nvar PermissionApi = /** @class */ (function (_super) {\n    __extends(PermissionApi, _super);\n    function PermissionApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * By default, options of application is returned. And could be resource_type or verb on demand.\n     * @summary List the available options for fields of permissions for a tenant\n     * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n     * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n     * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n     * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission option with a global allowance on the supplied \\&#39;?field&#x3D;\\&#39; value of \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n     * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PermissionApi\n     */\n    PermissionApi.prototype.listPermissionOptions = function (field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options) {\n        var _this = this;\n        return (0, exports.PermissionApiFp)(this.configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by permission application.\n     * @summary List the permissions for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n     * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n     * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n     * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n     * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n     * @param {string} [excludeRoles] An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\n     * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PermissionApi\n     */\n    PermissionApi.prototype.listPermissions = function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options) {\n        var _this = this;\n        return (0, exports.PermissionApiFp)(this.configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PermissionApi;\n}(base_1.BaseAPI));\nexports.PermissionApi = PermissionApi;\n/**\n * PolicyApi - axios parameter creator\n * @export\n */\nvar PolicyApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'policyIn' is not null or undefined\n                    if (policyIn === null || policyIn === undefined) {\n                        throw new base_1.RequiredError('policyIn', 'Required parameter policyIn was null or undefined when calling createPolicies.');\n                    }\n                    localVarPath = \"/policies/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof policyIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(policyIn !== undefined ? policyIn : {}) : (policyIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deletePolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getPolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/policies/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (groupName !== undefined) {\n                        localVarQueryParameter['group_name'] = groupName;\n                    }\n                    if (groupUuid !== undefined) {\n                        localVarQueryParameter['group_uuid'] = groupUuid;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updatePolicy.');\n                    }\n                    // verify required parameter 'policyIn' is not null or undefined\n                    if (policyIn === null || policyIn === undefined) {\n                        throw new base_1.RequiredError('policyIn', 'Required parameter policyIn was null or undefined when calling updatePolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof policyIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(policyIn !== undefined ? policyIn : {}) : (policyIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.PolicyApiAxiosParamCreator = PolicyApiAxiosParamCreator;\n/**\n * PolicyApi - functional programming interface\n * @export\n */\nvar PolicyApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).createPolicies(policyIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).deletePolicy(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).getPolicy(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).updatePolicy(uuid, policyIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.PolicyApiFp = PolicyApiFp;\n/**\n * PolicyApi - factory interface\n * @export\n */\nvar PolicyApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            return (0, exports.PolicyApiFp)(configuration).createPolicies(policyIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            return (0, exports.PolicyApiFp)(configuration).deletePolicy(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            return (0, exports.PolicyApiFp)(configuration).getPolicy(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            return (0, exports.PolicyApiFp)(configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            return (0, exports.PolicyApiFp)(configuration).updatePolicy(uuid, policyIn, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.PolicyApiFactory = PolicyApiFactory;\n/**\n * PolicyApi - object-oriented interface\n * @export\n * @class PolicyApi\n * @extends {BaseAPI}\n */\nvar PolicyApi = /** @class */ (function (_super) {\n    __extends(PolicyApi, _super);\n    function PolicyApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a policy in a tenant\n     * @param {PolicyIn} policyIn Policy to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.createPolicies = function (policyIn, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).createPolicies(policyIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a policy in the tenant\n     * @param {string} uuid ID of policy to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.deletePolicy = function (uuid, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).deletePolicy(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a policy in the tenant\n     * @param {string} uuid ID of policy to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.getPolicy = function (uuid, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).getPolicy(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by policy name\n     * @summary List the policies in the tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n     * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n     * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.listPolicies = function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Update a policy in the tenant\n     * @param {string} uuid ID of policy to update\n     * @param {PolicyIn} policyIn Policy to update\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.updatePolicy = function (uuid, policyIn, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).updatePolicy(uuid, policyIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PolicyApi;\n}(base_1.BaseAPI));\nexports.PolicyApi = PolicyApi;\n/**\n * PrincipalApi - axios parameter creator\n * @export\n */\nvar PrincipalApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name and/or email. Currently, match_criteria of partial searches for a username/email using \\&quot;starts with\\&quot; pattern.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {'service-account' | 'user'} [type] Parameter for selecting the type of principal to be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, type, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/principals/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (matchCriteria !== undefined) {\n                        localVarQueryParameter['match_criteria'] = matchCriteria;\n                    }\n                    if (usernames !== undefined) {\n                        localVarQueryParameter['usernames'] = usernames;\n                    }\n                    if (sortOrder !== undefined) {\n                        localVarQueryParameter['sort_order'] = sortOrder;\n                    }\n                    if (email !== undefined) {\n                        localVarQueryParameter['email'] = email;\n                    }\n                    if (status !== undefined) {\n                        localVarQueryParameter['status'] = status;\n                    }\n                    if (adminOnly !== undefined) {\n                        localVarQueryParameter['admin_only'] = adminOnly;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (usernameOnly !== undefined) {\n                        localVarQueryParameter['username_only'] = usernameOnly;\n                    }\n                    if (type !== undefined) {\n                        localVarQueryParameter['type'] = type;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.PrincipalApiAxiosParamCreator = PrincipalApiAxiosParamCreator;\n/**\n * PrincipalApi - functional programming interface\n * @export\n */\nvar PrincipalApiFp = function (configuration) {\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name and/or email. Currently, match_criteria of partial searches for a username/email using \\&quot;starts with\\&quot; pattern.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {'service-account' | 'user'} [type] Parameter for selecting the type of principal to be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, type, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PrincipalApiAxiosParamCreator)(configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, type, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.PrincipalApiFp = PrincipalApiFp;\n/**\n * PrincipalApi - factory interface\n * @export\n */\nvar PrincipalApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name and/or email. Currently, match_criteria of partial searches for a username/email using \\&quot;starts with\\&quot; pattern.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {'service-account' | 'user'} [type] Parameter for selecting the type of principal to be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, type, options) {\n            return (0, exports.PrincipalApiFp)(configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, type, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.PrincipalApiFactory = PrincipalApiFactory;\n/**\n * PrincipalApi - object-oriented interface\n * @export\n * @class PrincipalApi\n * @extends {BaseAPI}\n */\nvar PrincipalApi = /** @class */ (function (_super) {\n    __extends(PrincipalApi, _super);\n    function PrincipalApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * By default, responses are sorted in ascending order by username\n     * @summary List the principals for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name and/or email. Currently, match_criteria of partial searches for a username/email using \\&quot;starts with\\&quot; pattern.\n     * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n     * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n     * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n     * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n     * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n     * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n     * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n     * @param {'service-account' | 'user'} [type] Parameter for selecting the type of principal to be returned.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PrincipalApi\n     */\n    PrincipalApi.prototype.listPrincipals = function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, type, options) {\n        var _this = this;\n        return (0, exports.PrincipalApiFp)(this.configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, type, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PrincipalApi;\n}(base_1.BaseAPI));\nexports.PrincipalApi = PrincipalApi;\n/**\n * RoleApi - axios parameter creator\n * @export\n */\nvar RoleApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Create a role for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRole: function (roleIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'roleIn' is not null or undefined\n                    if (roleIn === null || roleIn === undefined) {\n                        throw new base_1.RequiredError('roleIn', 'Required parameter roleIn was null or undefined when calling createRole.');\n                    }\n                    localVarPath = \"/roles/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof roleIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(roleIn !== undefined ? roleIn : {}) : (roleIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getRoleAccess.');\n                    }\n                    localVarPath = \"/roles/{uuid}/access/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {boolean} [system] Parameter for filtering resource by system flag.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count' | 'access'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions or external tenant name. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {string} [externalTenant] Parameter for filtering roles by external tenant name using string search.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/roles/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (system !== undefined) {\n                        localVarQueryParameter['system'] = system;\n                    }\n                    if (displayName !== undefined) {\n                        localVarQueryParameter['display_name'] = displayName;\n                    }\n                    if (nameMatch !== undefined) {\n                        localVarQueryParameter['name_match'] = nameMatch;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (addFields) {\n                        localVarQueryParameter['add_fields'] = addFields.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (permission !== undefined) {\n                        localVarQueryParameter['permission'] = permission;\n                    }\n                    if (externalTenant !== undefined) {\n                        localVarQueryParameter['external_tenant'] = externalTenant;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch a role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling patchRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof rolePatch !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(rolePatch !== undefined ? rolePatch : {}) : (rolePatch || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updateRole.');\n                    }\n                    // verify required parameter 'roleWithAccess' is not null or undefined\n                    if (roleWithAccess === null || roleWithAccess === undefined) {\n                        throw new base_1.RequiredError('roleWithAccess', 'Required parameter roleWithAccess was null or undefined when calling updateRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof roleWithAccess !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(roleWithAccess !== undefined ? roleWithAccess : {}) : (roleWithAccess || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.RoleApiAxiosParamCreator = RoleApiAxiosParamCreator;\n/**\n * RoleApi - functional programming interface\n * @export\n */\nvar RoleApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a role for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRole: function (roleIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).createRole(roleIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).deleteRole(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).getRole(uuid, scope, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).getRoleAccess(uuid, limit, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {boolean} [system] Parameter for filtering resource by system flag.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count' | 'access'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions or external tenant name. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {string} [externalTenant] Parameter for filtering roles by external tenant name using string search.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).listRoles(limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch a role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).patchRole(uuid, rolePatch, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).updateRole(uuid, roleWithAccess, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.RoleApiFp = RoleApiFp;\n/**\n * RoleApi - factory interface\n * @export\n */\nvar RoleApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a role for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRole: function (roleIn, options) {\n            return (0, exports.RoleApiFp)(configuration).createRole(roleIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            return (0, exports.RoleApiFp)(configuration).deleteRole(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            return (0, exports.RoleApiFp)(configuration).getRole(uuid, scope, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            return (0, exports.RoleApiFp)(configuration).getRoleAccess(uuid, limit, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {boolean} [system] Parameter for filtering resource by system flag.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count' | 'access'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions or external tenant name. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {string} [externalTenant] Parameter for filtering roles by external tenant name using string search.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options) {\n            return (0, exports.RoleApiFp)(configuration).listRoles(limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Patch a role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            return (0, exports.RoleApiFp)(configuration).patchRole(uuid, rolePatch, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Update a role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            return (0, exports.RoleApiFp)(configuration).updateRole(uuid, roleWithAccess, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.RoleApiFactory = RoleApiFactory;\n/**\n * RoleApi - object-oriented interface\n * @export\n * @class RoleApi\n * @extends {BaseAPI}\n */\nvar RoleApi = /** @class */ (function (_super) {\n    __extends(RoleApi, _super);\n    function RoleApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a role for a tenant\n     * @param {RoleIn} roleIn Role to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.createRole = function (roleIn, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).createRole(roleIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a role in the tenant\n     * @param {string} uuid ID of role to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.deleteRole = function (uuid, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).deleteRole(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a role in the tenant\n     * @param {string} uuid ID of role to get\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.getRole = function (uuid, scope, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).getRole(uuid, scope, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get access for a role in the tenant\n     * @param {string} uuid ID of the role\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.getRoleAccess = function (uuid, limit, offset, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).getRoleAccess(uuid, limit, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by role name\n     * @summary List the roles for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {boolean} [system] Parameter for filtering resource by system flag.\n     * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n     * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {Array<'groups_in' | 'groups_in_count' | 'access'>} [addFields] Parameter for add list of fields to display for roles.\n     * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n     * @param {string} [application] The application name(s) to filter roles by, from permissions or external tenant name. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n     * @param {string} [externalTenant] Parameter for filtering roles by external tenant name using string search.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.listRoles = function (limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).listRoles(limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Patch a role in the tenant\n     * @param {string} uuid ID of role to update\n     * @param {RolePatch} [rolePatch] Patch to a role\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.patchRole = function (uuid, rolePatch, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).patchRole(uuid, rolePatch, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Update a role in the tenant\n     * @param {string} uuid ID of role to update\n     * @param {RoleWithAccess} roleWithAccess Update to a role\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.updateRole = function (uuid, roleWithAccess, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).updateRole(uuid, roleWithAccess, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return RoleApi;\n}(base_1.BaseAPI));\nexports.RoleApi = RoleApi;\n/**\n * StatusApi - axios parameter creator\n * @export\n */\nvar StatusApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/status/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.StatusApiAxiosParamCreator = StatusApiAxiosParamCreator;\n/**\n * StatusApi - functional programming interface\n * @export\n */\nvar StatusApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.StatusApiAxiosParamCreator)(configuration).getStatus(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.StatusApiFp = StatusApiFp;\n/**\n * StatusApi - factory interface\n * @export\n */\nvar StatusApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            return (0, exports.StatusApiFp)(configuration).getStatus(options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.StatusApiFactory = StatusApiFactory;\n/**\n * StatusApi - object-oriented interface\n * @export\n * @class StatusApi\n * @extends {BaseAPI}\n */\nvar StatusApi = /** @class */ (function (_super) {\n    __extends(StatusApi, _super);\n    function StatusApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Obtain server status\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StatusApi\n     */\n    StatusApi.prototype.getStatus = function (options) {\n        var _this = this;\n        return (0, exports.StatusApiFp)(this.configuration).getStatus(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return StatusApi;\n}(base_1.BaseAPI));\nexports.StatusApi = StatusApi;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = exports.BASE_PATH = void 0;\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://console.redhat.com/api/rbac/v1\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(configuration, basePath, axios) {\n        if (basePath === void 0) { basePath = exports.BASE_PATH; }\n        if (axios === void 0) { axios = axios_1.default; }\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n    return BaseAPI;\n}());\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nvar RequiredError = /** @class */ (function (_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error));\nexports.RequiredError = RequiredError;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./configuration\"), exports);\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","description","_b","dismissable","onDismiss","_c","dismissDelay","title","sentryId","requestId","_d","autoDismiss","id","rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","dismissTimeout","useRef","handleDismiss","setDismissTimeout","current","setTimeout","clearDismissTimeout","clearTimeout","useEffect","Alert","className","concat","replace","actionClose","AlertActionCloseButton","variant","onClick","children","onMouseEnter","onMouseLeave","TextContent","Text","component","small","page","onSetPage","onClearAll","count","Card","CardBody","Level","LevelItem","Button","link","Pagination","itemCount","bottom","perPageOptions","value","titles","items","perPage","notifications","removeNotification","rootId","useState","state","setState","slicedNotifications","slice","createPortal","_event","prev","map","props","document","getElementById","body","useStyles","errorIcon","fill","errorTitle","errorDescription","defaultErrorDescription","classes","EmptyState","EmptyStateVariant","lg","EmptyStateHeader","titleText","icon","EmptyStateIcon","headingLevel","EmptyStateBody","Stack","StackItem","EmptyStateFooter","referrer","history","back","href","target","rel","errorStack","fontFamily","fontSize","textAlign","backgroundColor","borderStyle","borderColor","overflowWrap","padding","error","stack","clsx","split","line","key","name","message","toString","ErrorBoundary","constructor","super","updateState","historyState","hasError","static","componentDidUpdate","componentDidMount","render","silent","Title","size","headerTitle","ExpandableSection","toggleText","NotificationPortalBase","propsClear","clearNotifications","dispatch","prepareErrorMessage","payload","errorTitleKey","errorDescriptionKey","titleKey","Array","isArray","find","descriptionKey","options","middlewareOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","useStatusText","matchRejected","type","Boolean","match","RegExp","defaultNotificationOptions","next","action","meta","matchPending","pending","matchFulfilled","fulfilled","rejected","isRejected","hasCustomNotification","noErrorOverride","shouldDispatchDefaultError","noError","danger","namespaceKey","errorNamespaceKey","item","processIntlConfig","config","locale","timeZone","fallbackOnEmptyString","formats","textComponent","messages","defaultLocale","defaultFormats","onError","onWarn","wrapRichTextChunksInFragment","defaultRichTextElements","_super","IntlProvider","_this","cache","intl","createIntl","prevConfig","__extends","getDerivedStateFromProps","displayName","defaultProps","_excluded","ownKeys","object","enumerableOnly","keys","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_ref","language","localStorage","getItem","LOCALSTORAGE_KEY","navigator","propTypes","cancel","defaultMessage","save","remove","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","step","result","done","then","__generator","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","__spreadArray","to","from","pack","ar","l","getRBAC","applicationName","disableCache","_e","insights","user","_f","_g","window","chrome","auth","getUser","isOrgAdmin","identity","is_org_admin","getUserPermissions","permissions","isAccessType","permission","extractResourceDefinitionValues","rds","reduce","acc","cur","attributeFilter","operation","ResourceDefinitionFilterOperationEnum","In","Equal","checkRequestedPermission","userPermissions","requestedPermission","checkResourceDefinitions","some","userPermission","userRds","requestedRds","userValues","requestedPermissionArray","matchesPermission","curr","index","array","splice","undefined","resourceDefinitions","every","includes","doesHavePermissions","permissionList","hasAllPermissions","initialPermissions","isLoading","RBACContext","createContext","usePermissionsWithContext","requiredPermissions","checkAll","checkResourceDefinitionsOverride","useContext","hasAccess","permissionState","hasAccessWithUserPermissions","RBACProvider","appName","setPermissionState","currentPerms","Provider","extendStatics","d","b","setPrototypeOf","__proto__","String","__","create","exports","StatusApi","StatusApiFactory","StatusApiFp","StatusApiAxiosParamCreator","RoleApi","RoleApiFactory","RoleApiFp","RoleApiAxiosParamCreator","PrincipalApi","PrincipalApiFactory","PrincipalApiFp","PrincipalApiAxiosParamCreator","PolicyApi","PolicyApiFactory","PolicyApiFp","PolicyApiAxiosParamCreator","PermissionApi","PermissionApiFactory","PermissionApiFp","PermissionApiAxiosParamCreator","GroupApi","GroupApiFactory","GroupApiFp","GroupApiAxiosParamCreator","CrossAccountRequestApi","CrossAccountRequestApiFactory","CrossAccountRequestApiFp","CrossAccountRequestApiAxiosParamCreator","AccessApi","AccessApiFactory","AccessApiFp","AccessApiAxiosParamCreator","CrossAccountRequestPatchStatusEnum","globalImportUrl","axios_1","base_1","configuration","getPrincipalAccess","application","username","orderBy","status","limit","offset","localVarUrlObj","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","headersFromBaseOptions","RequiredError","parse","method","password","query","search","headers","url","format","localVarAxiosArgs","axios","basePath","default","BASE_PATH","axiosRequestArgs","request","BaseAPI","createCrossAccountRequests","crossAccountRequestIn","needsSerialization","data","JSON","stringify","getCrossAccountRequest","uuid","queryBy","account","approvedOnly","localVarPath","encodeURIComponent","listCrossAccountRequests","orgId","patchCrossAccountRequest","crossAccountRequestPatch","putCrossAccountRequest","crossAccountRequestUpdateIn","addPrincipalToGroup","groupPrincipalIn","addRoleToGroup","groupRoleIn","createGroup","group","deleteGroup","deletePrincipalFromGroup","usernames","serviceAccounts","deleteRoleFromGroup","roles","getGroup","getPrincipalsFromGroup","adminOnly","principalUsername","usernameOnly","principalType","listGroups","nameMatch","scope","excludeUsername","roleNames","roleDiscriminator","platformDefault","adminDefault","system","join","COLLECTION_FORMATS","csv","listRolesForGroup","exclude","roleName","roleDisplayName","roleDescription","roleSystem","roleExternalTenant","updateGroup","listPermissionOptions","field","resourceType","excludeGlobals","allowedOnly","listPermissions","excludeRoles","createPolicies","policyIn","deletePolicy","getPolicy","listPolicies","groupName","groupUuid","updatePolicy","listPrincipals","matchCriteria","sortOrder","email","createRole","roleIn","deleteRole","getRole","getRoleAccess","listRoles","addFields","externalTenant","patchRole","rolePatch","updateRole","roleWithAccess","getStatus","ssv","tsv","pipes","msg","Error","Configuration","param","apiKey","accessToken","__createBinding","o","m","k","k2","desc","__esModule","writable","configurable","get","__exportStar","module","baseHas","hasPath","path","_objectSpread2","formatProdErrorMessage","code","$$observable","observable","randomString","Math","random","substring","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","legacy_createStore","createStore","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","obj","proto","getPrototypeOf","isPlainObject","listeners","replaceReducer","nextReducer","outerSubscribe","observer","observeState","unsubscribe","combineReducers","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","compose","_len","funcs","arg","a","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","middleware"],"sourceRoot":""}