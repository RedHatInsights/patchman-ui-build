{"version":3,"file":"js/PackageDetail.f31251c4d09dcb586c84.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Chip/chip.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/ChipGroup/chip-group.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Select/select.mjs","webpack:///./src/PresentationalComponents/Filters/StatusFilter.js","webpack:///./src/PresentationalComponents/PackageHeader/PackageHeader.js","webpack:///./src/PresentationalComponents/Filters/VersionFilter.js","webpack:///./src/SmartComponents/PackageSystems/PackageSystems.js","webpack:///./src/SmartComponents/PackageDetail/PackageDetail.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","import './chip.css';\nexport default {\n  \"badge\": \"pf-c-badge\",\n  \"button\": \"pf-c-button\",\n  \"chip\": \"pf-c-chip\",\n  \"chipIcon\": \"pf-c-chip__icon\",\n  \"chipText\": \"pf-c-chip__text\",\n  \"modifiers\": {\n    \"overflow\": \"pf-m-overflow\",\n    \"draggable\": \"pf-m-draggable\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './chip-group.css';\nexport default {\n  \"chipGroup\": \"pf-c-chip-group\",\n  \"chipGroupClose\": \"pf-c-chip-group__close\",\n  \"chipGroupLabel\": \"pf-c-chip-group__label\",\n  \"chipGroupList\": \"pf-c-chip-group__list\",\n  \"chipGroupListItem\": \"pf-c-chip-group__list-item\",\n  \"chipGroupMain\": \"pf-c-chip-group__main\",\n  \"modifiers\": {\n    \"category\": \"pf-m-category\"\n  }\n};","import './select.css';\nexport default {\n  \"check\": \"pf-c-check\",\n  \"checkLabel\": \"pf-c-check__label\",\n  \"chipGroup\": \"pf-c-chip-group\",\n  \"divider\": \"pf-c-divider\",\n  \"formControl\": \"pf-c-form-control\",\n  \"modifiers\": {\n    \"invalid\": \"pf-m-invalid\",\n    \"success\": \"pf-m-success\",\n    \"warning\": \"pf-m-warning\",\n    \"disabled\": \"pf-m-disabled\",\n    \"active\": \"pf-m-active\",\n    \"expanded\": \"pf-m-expanded\",\n    \"plain\": \"pf-m-plain\",\n    \"typeahead\": \"pf-m-typeahead\",\n    \"placeholder\": \"pf-m-placeholder\",\n    \"top\": \"pf-m-top\",\n    \"alignRight\": \"pf-m-align-right\",\n    \"static\": \"pf-m-static\",\n    \"favorite\": \"pf-m-favorite\",\n    \"favoriteAction\": \"pf-m-favorite-action\",\n    \"focus\": \"pf-m-focus\",\n    \"link\": \"pf-m-link\",\n    \"action\": \"pf-m-action\",\n    \"selected\": \"pf-m-selected\",\n    \"description\": \"pf-m-description\",\n    \"load\": \"pf-m-load\",\n    \"loading\": \"pf-m-loading\"\n  },\n  \"select\": \"pf-c-select\",\n  \"selectListItem\": \"pf-c-select__list-item\",\n  \"selectMenu\": \"pf-c-select__menu\",\n  \"selectMenuFieldset\": \"pf-c-select__menu-fieldset\",\n  \"selectMenuFooter\": \"pf-c-select__menu-footer\",\n  \"selectMenuGroup\": \"pf-c-select__menu-group\",\n  \"selectMenuGroupTitle\": \"pf-c-select__menu-group-title\",\n  \"selectMenuItem\": \"pf-c-select__menu-item\",\n  \"selectMenuItemActionIcon\": \"pf-c-select__menu-item-action-icon\",\n  \"selectMenuItemCount\": \"pf-c-select__menu-item-count\",\n  \"selectMenuItemDescription\": \"pf-c-select__menu-item-description\",\n  \"selectMenuItemIcon\": \"pf-c-select__menu-item-icon\",\n  \"selectMenuItemMain\": \"pf-c-select__menu-item-main\",\n  \"selectMenuItemMatch\": \"pf-c-select__menu-item--match\",\n  \"selectMenuItemRow\": \"pf-c-select__menu-item-row\",\n  \"selectMenuItemText\": \"pf-c-select__menu-item-text\",\n  \"selectMenuSearch\": \"pf-c-select__menu-search\",\n  \"selectMenuWrapper\": \"pf-c-select__menu-wrapper\",\n  \"selectToggle\": \"pf-c-select__toggle\",\n  \"selectToggleArrow\": \"pf-c-select__toggle-arrow\",\n  \"selectToggleBadge\": \"pf-c-select__toggle-badge\",\n  \"selectToggleButton\": \"pf-c-select__toggle-button\",\n  \"selectToggleClear\": \"pf-c-select__toggle-clear\",\n  \"selectToggleIcon\": \"pf-c-select__toggle-icon\",\n  \"selectToggleStatusIcon\": \"pf-c-select__toggle-status-icon\",\n  \"selectToggleText\": \"pf-c-select__toggle-text\",\n  \"selectToggleTypeahead\": \"pf-c-select__toggle-typeahead\",\n  \"selectToggleWrapper\": \"pf-c-select__toggle-wrapper\",\n  \"themeDark\": \"pf-theme-dark\"\n};","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport React from 'react';\nimport { updatableTypes } from '../../Utilities/constants';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { updatable: currentValue } = currentFilter;\n\n    const updatableTypesMap = React.useMemo(\n        () =>\n            updatableTypes.map(({ value, label }) => ({\n                label,\n                value: value.toString()\n            })),\n        []\n    );\n    const filterByType = value => {\n        apply({ filter: { updatable: value } });\n    };\n\n    return {\n        label: intl.formatMessage(messages.labelsFiltersStatus),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByType(value);\n            },\n            items: updatableTypesMap,\n            value: currentValue,\n            placeholder: intl.formatMessage(messages.labelsColumnsStatusPlaceholder)\n        }\n    };\n};\n\nexport default statusFilter;\n","import { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { Fragment } from 'react';\nimport { truncateDescription } from '../../Utilities/Helpers';\nimport WithLoader, { WithLoaderVariants } from '../WithLoader/WithLoader';\n\nconst PackageHeader = ({ attributes: { description }, isLoading }) => {\n    const [wordLength, setWordLength] = React.useState(1000);\n\n    return description && (<Grid hasGutter style={{ minHeight: 50 }}>\n        <GridItem md={8} sm={12}>\n            <WithLoader\n                loading={isLoading}\n                variant={WithLoaderVariants.spinner}\n                centered\n            >\n                <Stack hasGutter>\n                    <StackItem />\n                    <StackItem style={{ whiteSpace: 'pre-line' }}>\n                        {\n                            description && truncateDescription(description, wordLength, setWordLength)\n                        }\n                    </StackItem>\n                </Stack>\n            </WithLoader>\n        </GridItem>\n    </Grid>) || <Fragment/>;\n};\n\nPackageHeader.propTypes = {\n    attributes: propTypes.object,\n    isLoading: propTypes.bool\n};\n\nexport default PackageHeader;\n","import React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst VersionFilter = (apply, filter, packageVersions) => {\n\n    const [isOpen, setOpen] = React.useState(false);\n    const [numOptions, setNumOptions] = React.useState(10);\n\n    const isSet = filter && filter.installed_evra;\n    const installedEvra = isSet &&\n        (typeof(filter.installed_evra) === 'string' && filter.installed_evra.split(',')\n        || filter.installed_evra);\n    const versionList = packageVersions.data && packageVersions.data.sort().map(version => ({ value: version.evra }))\n        || [{ value: intl.formatMessage(messages.textNoVersionAvailable), disabled: true }];\n\n    const onToggle = (isOpen) => {\n        setOpen(isOpen);\n    };\n\n    const onSelect = (_, selection) => {\n        const config = { filter: {} };\n        if (!installedEvra || (installedEvra && !installedEvra.includes(selection))) {\n            const existingVersions = isSet && filter.installed_evra !== '' && filter.installed_evra.concat(',') || '';\n\n            config.filter = { installed_evra: `${existingVersions}${selection}` };\n        } else {\n            const filteredOutEvras = installedEvra.length !== 1\n                && installedEvra.filter(evra => !evra.includes(selection)).join(',') || undefined;\n\n            config.filter = { installed_evra: filteredOutEvras };\n        }\n\n        apply(config);\n    };\n\n    const onViewMoreClick = () => {\n        setNumOptions(versionList.length);\n    };\n\n    return (\n        {\n            type: conditionalFilterType.custom,\n            label: intl.formatMessage(messages.labelsFiltersPackageVersionTitle),\n            value: 'custom',\n            filterValues: {\n                children: (\n                    <Select\n                        variant={versionList.length > 0 && SelectVariant.checkbox || SelectVariant.typeaheadMulti}\n                        typeAheadAriaLabel={intl.formatMessage(messages.labelsFiltersPackageVersionPlaceholder)}\n                        onToggle={onToggle}\n                        onSelect={onSelect}\n                        selections={installedEvra}\n                        isOpen={isOpen}\n                        aria-labelledby={'patch-version-filter'}\n                        placeholderText={intl.formatMessage(messages.labelsFiltersPackageVersionPlaceholder)}\n                        {...(numOptions < versionList.lengt\n                            && { loadingVariant: { text: 'View more', onClick: onViewMoreClick } })}\n                        style={{ maxHeight: '400px', overflow: 'auto' }}\n                    >\n                        {versionList.slice(0, numOptions).map((option, index) => (\n                            <SelectOption\n                                isDisabled={option.disabled}\n                                key={index}\n                                value={option.value}\n                                {...(option.description && { description: option.description })}\n                            />\n                        ))}\n                    </Select>\n                )\n            }\n        }\n    );\n\n};\n\nexport default VersionFilter;\n","import { TableVariant } from '@patternfly/react-table';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport propTypes from 'prop-types';\nimport React, { useCallback, useMemo, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector, useStore } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport messages from '../../Messages';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/StatusFilter';\nimport versionFilter from '../../PresentationalComponents/Filters/VersionFilter';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\nimport { defaultReducers } from '../../store';\nimport { changePackageSystemsParams, clearInventoryReducer,\n    clearPackageSystemsReducer, systemSelectAction } from '../../store/Actions/Actions';\nimport { inventoryEntitiesReducer, modifyPackageSystems } from '../../store/Reducers/InventoryEntitiesReducer';\nimport {\n    exportPackageSystemsCSV,\n    exportPackageSystemsJSON, fetchPackageSystems,\n    fetchPackageVersions\n} from '../../Utilities/api';\nimport { remediationIdentifiers } from '../../Utilities/constants';\nimport {\n    arrayFromObj, buildFilterChips, decodeQueryparams, filterRemediatablePackageSystems,\n    persistantParams, remediationProviderWithPairs, removeUndefinedObjectKeys\n} from '../../Utilities/Helpers';\nimport { useBulkSelectConfig, useGetEntities, useOnExport, useRemoveFilter } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport AsyncRemediationButton from '../Remediation/AsyncRemediationButton';\nimport { packageSystemsColumns } from '../Systems/SystemsListAssets';\nimport { useOnSelect, ID_API_ENDPOINTS } from '../../Utilities/useOnSelect';\nimport { combineReducers } from 'redux';\n\nconst PackageSystems = ({ packageName }) => {\n    const dispatch = useDispatch();\n    const store = useStore();\n    const history = useHistory();\n    const [packageVersions, setPackageVersions] = React.useState([]);\n\n    const decodedParams = decodeQueryparams(history.location.search);\n    const systems = useSelector(({ entities }) => entities?.rows || [], shallowEqual);\n    const status = useSelector(\n        ({ entities }) => entities?.status || {}\n    );\n    const totalItems = useSelector(\n        ({ entities }) => entities?.total || 0\n    );\n    const selectedRows = useSelector(\n        ({ entities }) => entities?.selectedRows || []\n    );\n    const queryParams = useSelector(\n        ({ PackageSystemsStore }) => PackageSystemsStore?.queryParams || {}\n    );\n\n    const { systemProfile, selectedTags,\n        filter, search, sort, page, perPage } = queryParams;\n\n    const apply = useCallback((params) => {\n        dispatch(changePackageSystemsParams(params));\n    }, []);\n\n    useEffect(async () => {\n        apply(decodedParams);\n        setPackageVersions(await fetchPackageVersions({ package_name: packageName }));\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearInventoryReducer());\n            dispatch(clearPackageSystemsReducer());\n        };\n    }, []);\n\n    const [deleteFilters] = useRemoveFilter({ ...filter, search }, apply);\n\n    const filterConfig = {\n        items: [\n            searchFilter(apply, search,\n                intl.formatMessage(messages.labelsFiltersSystemsSearchTitle),\n                intl.formatMessage(messages.labelsFiltersSystemsSearchPlaceholder)\n            ),\n            statusFilter(apply, filter),\n            versionFilter(apply, filter, packageVersions)\n        ]\n    };\n\n    const activeFiltersConfig = useMemo(() => ({\n        filters: buildFilterChips(filter, search, intl.formatMessage(messages.labelsFiltersSystemsSearchTitle)),\n        onDelete: deleteFilters\n    }), [filter, search]);\n\n    const constructFilename = (system) => {\n        return `${packageName}-${system.available_evra}`;\n    };\n\n    const onSelect = useOnSelect(\n        systems,\n        selectedRows,\n        {\n            endpoint: ID_API_ENDPOINTS.packageSystems(packageName),\n            queryParams,\n            selectionDispatcher: systemSelectAction,\n            constructFilename,\n            apiResponseTransformer: filterRemediatablePackageSystems\n        }\n    );\n\n    const selectedCount = selectedRows && arrayFromObj(selectedRows).length;\n\n    const onExport = useOnExport(packageName, queryParams, {\n        csv: exportPackageSystemsCSV,\n        json: exportPackageSystemsJSON\n    }, dispatch);\n\n    const prepareRemediationPairs = useCallback((systemIDs) => {\n        const pairs = [];\n\n        systemIDs.forEach(id => {\n            const packageEvra = selectedRows[id];\n            const issueID = `patch-package:${packageEvra}`;\n            const index = pairs.findIndex(pair => pair.id === issueID);\n\n            if (index !== -1) {\n                pairs[index].systems.push(id);\n            } else if (packageEvra) {\n                pairs.push({\n                    id: issueID,\n                    description: packageEvra,\n                    systems: [id]\n                });\n            }\n        });\n\n        return pairs.length ? { issues: pairs } : false;\n    }, [selectedRows]);\n\n    const getEntites = useGetEntities(fetchPackageSystems, apply, { packageName }, history);\n\n    const remediationDataProvider = () => remediationProviderWithPairs(\n        removeUndefinedObjectKeys(selectedRows),\n        prepareRemediationPairs,\n        remediationIdentifiers.package\n    );\n\n    const bulkSelectConfig = useBulkSelectConfig(selectedCount, onSelect, { total_items: totalItems }, systems);\n\n    return (\n        <React.Fragment>\n            {status.hasError && <ErrorHandler code={status.code} /> || (\n                <InventoryTable\n                    disableDefaultColumns={['system_profile', 'updated']}\n                    isFullView\n                    autoRefresh\n                    initialLoading\n                    hideFilters={{ all: true, tags: false }}\n                    columns={packageSystemsColumns}\n                    showTags\n                    getEntities={getEntites}\n                    customFilters={{\n                        patchParams: {\n                            search,\n                            filter,\n                            systemProfile,\n                            selectedTags\n                        }\n                    }}\n                    paginationProps={{\n                        isDisabled: totalItems === 0\n                    }}\n                    onLoad={({ mergeWithEntities }) => {\n                        store.replaceReducer(combineReducers({\n                            ...defaultReducers,\n                            ...mergeWithEntities(\n                                inventoryEntitiesReducer(packageSystemsColumns, modifyPackageSystems),\n                                persistantParams({ page, perPage, sort, search }, decodedParams)\n                            )\n                        }));\n\n                    }}\n                    tableProps={{\n                        canSelectAll: false,\n                        variant: TableVariant.compact, className: 'patchCompactInventory', isStickyHeader: true\n                    }}\n                    filterConfig={filterConfig}\n                    activeFiltersConfig={activeFiltersConfig}\n                    bulkSelect={onSelect && bulkSelectConfig}\n                    exportConfig={{\n                        isDisabled: totalItems === 0,\n                        onSelect: onExport\n                    }}\n                    dedicatedAction={(\n                        <AsyncRemediationButton\n                            remediationProvider={remediationDataProvider}\n                            isDisabled={arrayFromObj(selectedRows).length === 0}\n                        />\n                    )}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nPackageSystems.propTypes = {\n    packageName: propTypes.string\n};\n\nexport default PackageSystems;\n","import { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport messages from '../../Messages';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport PackageHeader from '../../PresentationalComponents/PackageHeader/PackageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport PackageSystems from '../../SmartComponents/PackageSystems/PackageSystems';\nimport { clearPackageDetailStore, fetchPackageDetails } from '../../store/Actions/Actions';\nimport { setPageTitle } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\n\nconst PackageDetail = ({ match }) => {\n    const dispatch = useDispatch();\n    const [packageName] = React.useState(match.params.packageName);\n    const pageTitle = `${packageName} - ${intl.formatMessage(messages.titlesPackages)}`;\n    setPageTitle(pageTitle);\n    const packageDetails = useSelector(\n        ({ PackageDetailStore }) => PackageDetailStore\n    );\n    const status = useSelector(\n        ({ PackageDetailStore }) => PackageDetailStore.status\n    );\n\n    React.useEffect(() => {\n        dispatch(fetchPackageDetails({ packageName }));\n    }, []);\n\n    React.useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n            dispatch(clearPackageDetailStore());\n        };\n    }, []);\n\n    const { attributes } = packageDetails.data;\n\n    return (\n        <React.Fragment>\n            <Header\n                title={packageName}\n                headerOUIA={'package-details'}\n                breadcrumbs={[\n                    {\n                        title: intl.formatMessage(messages.titlesPatchPackages),\n                        to: '/packages',\n                        isActive: false\n                    },\n                    {\n                        title: packageName,\n                        isActive: true\n                    }\n                ]}\n            >{status.hasError ? <Unavailable/> :\n                    <PackageHeader\n                        attributes={{ ...attributes, id: packageName }}\n                        isLoading={status.isLoading}\n                    />}\n            </Header>\n            <Main>\n                <Stack hasGutter>\n                    <StackItem>\n                        <TextContent>\n                            <Text component={TextVariants.h2}>{intl.formatMessage(messages.titlesAffectedSystems)}</Text>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem>\n                        {status.hasError\n                            && < ErrorHandler />\n                                || (!status.isLoading && <PackageSystems packageName={packageName}></PackageSystems>)\n                        }\n                    </StackItem>\n                </Stack>\n            </Main>\n        </React.Fragment>\n    );\n};\n\nPackageDetail.propTypes = {\n    match: propTypes.any\n};\n\nexport default withRouter(PackageDetail);\n"],"names":["exports","__esModule","ExclamationCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","ExclamationCircleIcon","ExclamationTriangleIconConfig","ExclamationTriangleIcon","apply","currentFilter","currentValue","updatable","updatableTypesMap","React","updatableTypes","value","label","toString","filterByType","filter","intl","messages","type","conditionalFilterType","filterValues","onChange","event","items","placeholder","PackageHeader","description","attributes","isLoading","wordLength","setWordLength","Grid","hasGutter","style","minHeight","GridItem","md","sm","WithLoader","loading","variant","WithLoaderVariants","centered","Stack","StackItem","whiteSpace","truncateDescription","Fragment","propTypes","packageVersions","isOpen","setOpen","numOptions","setNumOptions","isSet","installed_evra","installedEvra","split","versionList","data","sort","map","version","evra","disabled","children","Select","length","SelectVariant","typeAheadAriaLabel","onToggle","onSelect","_","selection","config","includes","existingVersions","concat","filteredOutEvras","join","undefined","selections","placeholderText","lengt","loadingVariant","text","onClick","maxHeight","overflow","slice","option","index","SelectOption","isDisabled","key","PackageSystems","packageName","dispatch","useDispatch","store","useStore","history","useHistory","setPackageVersions","decodedParams","decodeQueryparams","location","search","systems","useSelector","entities","rows","shallowEqual","status","totalItems","total","selectedRows","queryParams","PackageSystemsStore","systemProfile","selectedTags","page","perPage","useCallback","params","changePackageSystemsParams","useEffect","fetchPackageVersions","package_name","clearInventoryReducer","clearPackageSystemsReducer","useRemoveFilter","deleteFilters","filterConfig","searchFilter","statusFilter","versionFilter","activeFiltersConfig","useMemo","filters","buildFilterChips","onDelete","useOnSelect","endpoint","ID_API_ENDPOINTS","selectionDispatcher","systemSelectAction","constructFilename","system","available_evra","apiResponseTransformer","filterRemediatablePackageSystems","selectedCount","arrayFromObj","onExport","useOnExport","csv","exportPackageSystemsCSV","json","exportPackageSystemsJSON","prepareRemediationPairs","systemIDs","pairs","forEach","id","packageEvra","issueID","findIndex","pair","push","issues","getEntites","useGetEntities","fetchPackageSystems","bulkSelectConfig","useBulkSelectConfig","total_items","hasError","ErrorHandler","code","InventoryTable","disableDefaultColumns","isFullView","autoRefresh","initialLoading","hideFilters","all","tags","columns","packageSystemsColumns","showTags","getEntities","customFilters","patchParams","paginationProps","onLoad","mergeWithEntities","replaceReducer","combineReducers","defaultReducers","inventoryEntitiesReducer","modifyPackageSystems","persistantParams","tableProps","canSelectAll","TableVariant","className","isStickyHeader","bulkSelect","exportConfig","dedicatedAction","AsyncRemediationButton","remediationProvider","remediationProviderWithPairs","removeUndefinedObjectKeys","remediationIdentifiers","PackageDetail","match","pageTitle","setPageTitle","packageDetails","PackageDetailStore","fetchPackageDetails","clearNotifications","clearPackageDetailStore","Header","title","headerOUIA","breadcrumbs","to","isActive","Unavailable","Main","TextContent","Text","component","TextVariants","withRouter"],"sourceRoot":""}