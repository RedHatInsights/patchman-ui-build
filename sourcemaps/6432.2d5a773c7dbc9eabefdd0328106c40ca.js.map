{"version":3,"file":"js/6432.3c72577e9e35b78569e2.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/WithPermission/WithPermission.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/store/Reducers/SystemDetailStore.js","webpack:///./src/store/Reducers/AdvisoryDetailStore.js","webpack:///./src/store/Reducers/PackageDetailStore.js","webpack:///./src/store/Reducers/PackagesListStore.js","webpack:///./src/store/Reducers/SystemsStore.js","webpack:///./src/store/Reducers/PackageSystemsStore.js","webpack:///./src/store/Reducers/AdvisorySystemsStore.js","webpack:///./src/store/Reducers/GlobalFilterStore.js","webpack:///./src/store/Reducers/PatchSetsReducer.js","webpack:///./src/store/Reducers/PatchSetDetailStore.js","webpack:///./src/store/Reducers/PatchSetDetailSystemsStore.js","webpack:///./src/store/Reducers/SpecificPatchSetReducer.js","webpack:///./src/store/index.js","webpack:///./src/store/Reducers/AdvisoryListStore.js","webpack:///./src/store/Reducers/CvesListStore.js"],"sourcesContent":["import React  from 'react';\nimport propTypes from 'prop-types';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst WithPermission = ({ children, requiredPermissions = [] }) => {\n    const { hasAccess, isLoading } = usePermissionsWithContext(requiredPermissions);\n    if (!isLoading) {\n        return hasAccess ? children : <NotAuthorized serviceName=\"patch\" />;\n    } else {\n        return '';\n    }\n};\n\nWithPermission.propTypes = {\n    children: propTypes.node,\n    requiredPermissions: propTypes.array\n};\n\nexport default WithPermission;\n","import PropTypes from 'prop-types';\nimport React, { lazy, Suspense, useCallback, useEffect } from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport WithPermission from './PresentationalComponents/WithPermission/WithPermission';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { useFeatureFlag } from './Utilities/Hooks';\nimport { featureFlags } from './Utilities/constants';\nimport some from 'lodash/some';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst PermissionRouter = (route, index) => {\n    const {\n        component: Component,\n        isExact,\n        path,\n        props = {},\n        requiredPermissions\n    } = route;\n    const routeProps = {\n        isExact,\n        path\n    };\n\n    const componentProps = {\n        ...props,\n        route: { ...route }\n    };\n\n    return (\n        <Route {...routeProps} key={index}>\n            <WithPermission requiredPermissions={requiredPermissions}>\n                <Component {...componentProps} />\n            </WithPermission>\n        </Route>\n    );\n};\n\nPermissionRouter.propTypes = {\n    component: PropTypes.node,\n    isExact: PropTypes.bool,\n    path: PropTypes.string,\n    props: PropTypes.object\n};\n\nconst Advisories = lazy(() =>\n    import(\n        /* webpackChunkName: \"Advisories\" */ './SmartComponents/Advisories/Advisories'\n    )\n);\n\nconst Systems = lazy(() =>\n    import(\n        /* webpackChunkName: \"Systems\" */ './SmartComponents/Systems/Systems'\n    )\n);\n\nconst InventoryDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"InventoryDetail\" */ './SmartComponents/SystemDetail/InventoryDetail'\n    )\n);\n\nconst AdvisoryPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"AdvisoryPage\" */ './SmartComponents/AdvisoryDetail/AdvisoryDetail'\n    )\n);\n\nconst PackagesPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Packages\" */ './SmartComponents/Packages/Packages'\n    )\n);\n\nconst PackageDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"PackageDetail\" */ './SmartComponents/PackageDetail/PackageDetail'\n    )\n);\n\nconst Templates = lazy(() =>\n    import(\n        /* webpackChunkName: \"Templates\" */ './SmartComponents/PatchSet/PatchSet'\n    )\n);\n\nconst TemplateDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"TemplateDetail\" */ './SmartComponents/PatchSetDetail/PatchSetDetail'\n    )\n);\n\nexport const Routes = () => {\n    const history = useHistory();\n    const chrome = useChrome();\n\n    const isPatchSetEnabled = useFeatureFlag(featureFlags.patch_set, chrome);\n    const generalPermissions = ['patch:*:*', 'patch:*:read'];\n\n    const paths = [\n        {\n            path: '/advisories/:advisoryId/:inventoryId',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: InventoryDetail\n        },\n        {\n            path: '/advisories/:advisoryId',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: AdvisoryPage\n        },\n        {\n            path: '/advisories',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: Advisories\n        },\n        {\n            path: '/systems/:inventoryId',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: InventoryDetail\n        },\n        {\n            path: '/systems',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: Systems\n        },\n        {\n            path: '/packages/:packageName/:inventoryId',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: InventoryDetail\n        },\n        {\n            path: '/packages/:packageName',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: PackageDetail\n        },\n        {\n            path: '/packages',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: PackagesPage\n        },\n        ...(isPatchSetEnabled ? [{\n            path: '/templates/:templateName',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: TemplateDetail\n        },\n        {\n            path: '/templates',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: Templates\n        }] : [])\n    ];\n\n    const listenNavigation = useCallback(() => {\n        if (chrome) {\n            return chrome.on('APP_NAVIGATION', event => {\n                if (event.domEvent) {\n                    history.push(`/${event.navId}`);\n                }\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        const unregister = listenNavigation();\n        return () => unregister();\n    }, []);\n\n    return (\n        <Suspense\n            fallback={\n                <Bullseye>\n                    <Spinner />\n                </Bullseye>\n            }\n        >\n            <Switch>\n                {paths.map(PermissionRouter)}\n                <Redirect\n                    from='/advisories/:advisoryId/:inventoryId'\n                    to='/systems/:inventoryId'\n                />\n                <Redirect\n                    from='/packages/:packageName/:inventoryId'\n                    to='/systems/:inventoryId'\n                />\n                <Route render={() =>\n                    (\n                        (!isPatchSetEnabled || !some(paths, p => p.to === history.location.pathname)) && (\n                            <Redirect to={'/advisories'} />\n                        )\n                    )\n                }\n                />\n            </Switch>\n        </Suspense>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\nimport { changeGlobalTags, changeProfile, globalFilter } from './store/Actions/Actions';\nimport { mapGlobalFilters } from './Utilities/Helpers';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport './App.scss';\nimport { Routes } from './Routes';\n\nconst App = () => {\n    const dispatch = useDispatch();\n    const chrome = useChrome();\n    const [config, setConfig] = useState({\n        selectedTags: [],\n        systemProfile: false\n    });\n\n    useEffect(() => {\n        chrome?.globalFilterScope?.('insights');\n\n        if (chrome?.globalFilterScope) {\n            chrome?.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const SIDs = chrome?.mapGlobalFilter?.(data, false, true)[1];\n                const TAGs = chrome?.mapGlobalFilter?.(data)\n                ?.filter(item => !item.includes('Workloads'));\n\n                const globalFilterConfig = mapGlobalFilters(TAGs, SIDs, data?.Workloads);\n\n                if (JSON.stringify(config) !== JSON.stringify(globalFilterConfig)) {\n                    dispatch(globalFilter(globalFilterConfig));\n                    setConfig(globalFilterConfig);\n                    dispatch(changeGlobalTags(globalFilterConfig.selectedTags));\n                    dispatch(changeProfile(globalFilterConfig.systemProfile));\n                }\n\n            });\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <NotificationPortal />\n            <RBACProvider appName=\"patch\">\n                <Router basename={getBaseName(window.location.pathname)}>\n                    <Routes />\n                </Router>\n            </RBACProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","let initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const SystemDetailStore = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'FETCH_SYSTEM_DETAIL_FULFILLED':\n            state.hasThirdPartyRepo = payload.data?.attributes.third_party;\n            state.patchSetName = payload.data?.attributes.baseline_name;\n            state.patchSetId = payload.data?.attributes.baseline_id;\n            return state;\n        case 'LOAD_ENTITY_PENDING':\n            return {\n                ...state,\n                loaded: false\n            };\n        case 'LOAD_ENTITY_FULFILLED':\n            return {\n                ...state,\n                loaded: true\n            };\n        case 'LOAD_ENTITY_REJECTED':\n            return {\n                ...state,\n                loaded: true\n            };\n        default:\n            return state;\n    }\n};\n","import { CLEAR_ADVISORY_DETAILS, FETCH_ADVISORY_DETAILS } from '../ActionTypes';\nimport {\n\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const AdvisoryDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_ADVISORY_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_ADVISORY_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_ADVISORY_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_ADVISORY_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { CLEAR_PACKAGE_DETAILS, FETCH_PACKAGE_DETAILS } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const PackageDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_PACKAGE_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_PACKAGE_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_PACKAGE_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_PACKAGE_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults, packagesListDefaultFilters } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport { changeFilters, fetchFulfilled, fetchPending, fetchRejected } from './HelperReducers';\n\nconst initialStore = { ...storeListDefaults,  queryParams: packagesListDefaultFilters };\n\nexport const PackagesListStore = (state = initialStore, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_PACKAGES_LIST + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PACKAGES_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nconst initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        filter: {\n            stale: [true, false]\n        }\n    }\n};\n\n// Reducer\nexport const SystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CHANGE_SYSTEMS_METADATA:\n            newState.metadata = action.payload;\n            return newState;\n\n        case ActionTypes.TOGGLE_ALL_SELECTED:\n            newState.areAllSelected = action.payload;\n            return newState;\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n\nexport const PackageSystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_PACKAGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CLEAR_PACKAGE_SYSTEMS_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n// Reducer\n\nexport const AdvisorySystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_AFFECTED_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CLEAR_ADVISORY_SYSTEMS_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\n\nconst initialState = {\n    selectedGlobalTags: [],\n    selectedTags: [],\n    systemProfile: undefined\n};\n\nexport const GlobalFilterStore = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.CHANGE_TAGS:\n            return {\n                ...state,\n                selectedTags: action.payload\n            };\n\n        case ActionTypes.CHANGE_GLOBAL_TAGS:\n            return {\n                ...state,\n                selectedGlobalTags: action.payload\n            };\n\n        case ActionTypes.CHANGE_PROFILE:\n            return {\n                ...state,\n                systemProfile: action.payload\n            };\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    rows: [],\n    selectedRows: [],\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        offset: 0,\n        filter: {}\n    },\n    status: { isLoading: true },\n    metadata: {\n        limit: 20,\n        offset: 0,\n        total_items: 0\n    },\n    error: {}\n};\n\nexport const PatchSetsReducer = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_FULFILLED':\n            return {\n                ...newState,\n                rows: action.payload.data?.map(set => ({ ...set.attributes, id: set.id })),\n                metadata: action.payload.meta || {},\n                error: {},\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PATCH_SET_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.SELECT_PATCH_SET_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.CLEAR_PATCH_SETS:\n            return initialState;\n\n        default:\n            return newState;\n    }\n};\n","import { FETCH_TEMPLATE_DETAIL, CLEAR_TEMPLATE_DETAIL } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\nexport const PatchSetDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case FETCH_TEMPLATE_DETAIL + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_TEMPLATE_DETAIL + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_TEMPLATE_DETAIL + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_TEMPLATE_DETAIL:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import {\n    CLEAR_PATCH_SET_DETAIL_SYSTEMS,\n    FETCH_PATCH_SET_DETAIL_SYSTEMS,\n    CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS\n} from '../ActionTypes';\nimport { fetchPending, fetchRejected, changeFilters } from './HelperReducers';\n\nexport let initialState = {\n    rows: [],\n    selectedRows: [],\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        offset: 0,\n        filter: {}\n    },\n    status: { isLoading: true },\n    metadata: {\n        limit: 20,\n        offset: 0,\n        total_items: 0\n    },\n    error: {},\n    data: null\n};\n\nexport const PatchSetDetailSystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case FETCH_PATCH_SET_DETAIL_SYSTEMS + '_FULFILLED':\n            return {\n                ...newState,\n                rows: action.payload.data,\n                metadata: action.payload.meta || {},\n                error: {},\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n\n        case FETCH_PATCH_SET_DETAIL_SYSTEMS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_PATCH_SET_DETAIL_SYSTEMS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS:\n            return changeFilters(newState, action);\n\n        case CLEAR_PATCH_SET_DETAIL_SYSTEMS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport {\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport const initialState = {\n    patchSet: {\n        config: {}\n    },\n    assignedSystems: [],\n    status: {},\n    error: {}\n};\n\nexport const SpecificPatchSetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.FETCH_PATCH_SET + '_FULFILLED': {\n            const { attributes: { config, name, description }, id } = action.payload?.data || { config: {} };\n\n            return {\n                ...state,\n                patchSet: { name, description, config: config || {}, id },\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n        }\n\n        case ActionTypes.FETCH_PATCH_SET + '_PENDING':\n            return fetchPending(state);\n\n        case ActionTypes.FETCH_PATCH_SET + '_REJECTED':\n            return fetchRejected(state, action);\n\n        case ActionTypes.FETCH_PATCH_SET_SYSTEMS + `_FULFILLED`: {\n            const systems = action.payload?.data || [];\n\n            return {\n                ...state,\n                assignedSystems: systems.map(system => system?.inventory_id)\n            };\n        }\n\n        case ActionTypes.CLEAR_PATCH_SET:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { AdvisoryDetailStore } from './Reducers/AdvisoryDetailStore';\nimport { AdvisoryListStore } from './Reducers/AdvisoryListStore';\nimport { CvesListStore } from './Reducers/CvesListStore';\nimport { PackageDetailStore } from './Reducers/PackageDetailStore';\nimport { PackagesListStore } from './Reducers/PackagesListStore';\nimport { SystemAdvisoryListStore } from './Reducers/SystemAdvisoryListStore';\nimport { SystemDetailStore } from './Reducers/SystemDetailStore';\nimport { SystemPackageListStore } from './Reducers/SystemPackageListStore';\nimport { SystemsStore } from './Reducers/SystemsStore';\nimport { PackageSystemsStore } from './Reducers/PackageSystemsStore';\nimport { AdvisorySystemsStore } from './Reducers/AdvisorySystemsStore';\nimport { GlobalFilterStore } from './Reducers/GlobalFilterStore';\nimport { PatchSetsReducer } from './Reducers/PatchSetsReducer';\nimport { PatchSetDetailStore } from './Reducers/PatchSetDetailStore';\nimport { PatchSetDetailSystemsStore } from './Reducers/PatchSetDetailSystemsStore';\nimport { SpecificPatchSetReducer } from './Reducers/SpecificPatchSetReducer';\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers, compose } from 'redux';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const defaultReducers = {\n    AdvisoryListStore,\n    SystemDetailStore,\n    SystemAdvisoryListStore,\n    AdvisoryDetailStore,\n    SystemPackageListStore,\n    PackagesListStore,\n    PackageDetailStore,\n    CvesListStore,\n    SystemsStore,\n    PackageSystemsStore,\n    AdvisorySystemsStore,\n    GlobalFilterStore,\n    PatchSetsStore: PatchSetsReducer,\n    PatchSetDetailStore,\n    PatchSetDetailSystemsStore,\n    SpecificPatchSetReducer,\n    notifications: notificationsReducer\n};\n\nexport const store = createStore(\n    combineReducers(defaultReducers),\n    composeEnhancers(applyMiddleware(promiseMiddleware, notificationsMiddleware()))\n);\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    expandRows,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const AdvisoryListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_ADVISORY_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.EXPAND_ADVISORY_ROW:\n            return expandRows(newState, action);\n\n        case ActionTypes.SELECT_ADVISORY_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TOGGLE_ALL_SELECTED:\n            newState.areAllSelected = action.payload;\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const CvesListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_CVES_INFO + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_CVES_INFO + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_CVES_INFO + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_CVES_STORE_PARAMS:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n"],"names":["WithPermission","children","requiredPermissions","usePermissionsWithContext","hasAccess","isLoading","NotAuthorized","serviceName","propTypes","PermissionRouter","route","index","Component","component","isExact","path","props","routeProps","componentProps","Route","key","PropTypes","Advisories","lazy","Systems","InventoryDetail","AdvisoryPage","PackagesPage","PackageDetail","Templates","TemplateDetail","Routes","history","useHistory","chrome","useChrome","isPatchSetEnabled","useFeatureFlag","featureFlags","generalPermissions","paths","listenNavigation","useCallback","on","event","domEvent","push","navId","useEffect","unregister","Suspense","fallback","Bullseye","Spinner","Switch","map","Redirect","from","to","render","some","p","location","pathname","dispatch","useDispatch","useState","selectedTags","systemProfile","config","setConfig","globalFilterScope","data","SIDs","mapGlobalFilter","TAGs","filter","item","includes","globalFilterConfig","mapGlobalFilters","Workloads","JSON","stringify","globalFilter","changeGlobalTags","changeProfile","NotificationPortal","RBACProvider","appName","basename","getBaseName","window","initialState","loaded","SystemDetailStore","state","type","payload","hasThirdPartyRepo","attributes","third_party","patchSetName","baseline_name","patchSetId","baseline_id","status","initialStore","storeListDefaults","queryParams","packagesListDefaultFilters","selectedRows","page","perPage","stale","selectedGlobalTags","undefined","rows","offset","metadata","limit","total_items","error","patchSet","assignedSystems","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","defaultReducers","AdvisoryListStore","action","newState","ActionTypes","fetchFulfilled","fetchPending","fetchRejected","changeFilters","expandRows","selectRows","areAllSelected","SystemAdvisoryListStore","AdvisoryDetailStore","FETCH_ADVISORY_DETAILS","CLEAR_ADVISORY_DETAILS","SystemPackageListStore","PackagesListStore","PackageDetailStore","FETCH_PACKAGE_DETAILS","CLEAR_PACKAGE_DETAILS","CvesListStore","SystemsStore","changeListParams","PackageSystemsStore","AdvisorySystemsStore","GlobalFilterStore","PatchSetsStore","set","id","meta","code","hasError","PatchSetDetailStore","FETCH_TEMPLATE_DETAIL","CLEAR_TEMPLATE_DETAIL","PatchSetDetailSystemsStore","FETCH_PATCH_SET_DETAIL_SYSTEMS","CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS","CLEAR_PATCH_SET_DETAIL_SYSTEMS","SpecificPatchSetReducer","name","description","systems","system","inventory_id","notifications","notificationsReducer","store","createStore","combineReducers","applyMiddleware","promiseMiddleware","notificationsMiddleware"],"sourceRoot":""}