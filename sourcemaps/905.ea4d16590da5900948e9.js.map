{"version":3,"sources":["webpack:///./src/PresentationalComponents/Filters/OsVersionFilter.js"],"names":["currentFilter","apply","React","isOpen","setOpen","numOptions","setNumOptions","versionFromNewestToOldest","osFilterTypes","currentValue","os","filterByOsType","_","value","filter","onToggle","onViewMoreClick","length","type","conditionalFilterType","label","intl","messages","filterValues","children","variant","SelectVariant","typeAheadAriaLabel","onSelect","selections","placeholderText","loadingVariant","text","onClick","style","maxHeight","overflow","slice","map","option","index","SelectOption","isDisabled","disabled","key","description"],"mappings":"0VA8DA,QAvDwB,WAA+B,IAA9BA,EAA8B,uDAAd,GAAIC,EAAU,uCAEnD,EAA0BC,cAAe,GAAzC,eAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,aAAe,IAAnD,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAA4BC,eAExBC,EAAiBT,EAArBU,GAEAC,EAAiB,SAACC,EAAGC,GACvBZ,EAAM,CAAEa,OAAQ,CAAEJ,GAAIG,MAGpBE,EAAW,SAACZ,GACdC,EAAQD,IAGNa,EAAkB,WACpBV,EAAcC,EAA0BU,SAG5C,MACI,CACIC,KAAMC,WACNC,MAAOC,kBAAmBC,4BAC1BT,MAAO,SACPU,aAAc,CACVC,SACI,kBAAC,KAAD,QACIC,QAASlB,EAA0BU,OAAS,GAAKS,0BAA0BA,+BAC3EC,mBAAoBN,kBAAmBC,uCACvCP,SAAUA,EACVa,SAAUjB,EACVkB,WAAYpB,EACZN,OAAQA,EACR,kBAAiB,0BACjB2B,gBAAiBT,kBAAmBC,wCAC/BjB,EAAaE,EAA0BU,QACrC,CAAEc,eAAgB,CAAEC,KAAM,YAAaC,QAASjB,IAV3D,CAWIkB,MAAO,CAAEC,UAAW,QAASC,SAAU,UAEtC7B,EAA0B8B,MAAM,EAAGhC,GAAYiC,KAAI,SAACC,EAAQC,GAAT,OAChD,kBAAC,EAAAC,cAAD,QACIC,WAAYH,EAAOI,SACnBC,IAAKJ,EACL3B,MAAO0B,EAAO1B,OACT0B,EAAOM,aAAe,CAAEA,YAAaN,EAAOM","file":"js/905.32b30d82ecd5f829e209.js","sourcesContent":["import React from 'react';\nimport { osFilterTypes } from '../../Utilities/constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst osVersionFilter = (currentFilter = {}, apply) => {\n\n    const [isOpen, setOpen] = React.useState(false);\n    const [numOptions, setNumOptions] = React.useState(10);\n    const versionFromNewestToOldest = osFilterTypes.reverse();\n\n    let { os: currentValue } = currentFilter;\n\n    const filterByOsType = (_, value) => {\n        apply({ filter: { os: value } });\n    };\n\n    const onToggle = (isOpen) => {\n        setOpen(isOpen);\n    };\n\n    const onViewMoreClick = () => {\n        setNumOptions(versionFromNewestToOldest.length);\n    };\n\n    return (\n        {\n            type: conditionalFilterType.custom,\n            label: intl.formatMessage(messages.labelsFiltersOsVersion),\n            value: 'custom',\n            filterValues: {\n                children: (\n                    <Select\n                        variant={versionFromNewestToOldest.length > 0 && SelectVariant.checkbox || SelectVariant.typeaheadMulti}\n                        typeAheadAriaLabel={intl.formatMessage(messages.labelsFiltersOsVersionPlaceholder)}\n                        onToggle={onToggle}\n                        onSelect={filterByOsType}\n                        selections={currentValue}\n                        isOpen={isOpen}\n                        aria-labelledby={'patch-os-version-filter'}\n                        placeholderText={intl.formatMessage(messages.labelsFiltersOsVersionPlaceholder)}\n                        {...(numOptions < versionFromNewestToOldest.length\n                            && { loadingVariant: { text: 'View more', onClick: onViewMoreClick } })}\n                        style={{ maxHeight: '400px', overflow: 'auto' }}\n                    >\n                        {versionFromNewestToOldest.slice(0, numOptions).map((option, index) => (\n                            <SelectOption\n                                isDisabled={option.disabled}\n                                key={index}\n                                value={option.value}\n                                {...(option.description && { description: option.description })}\n                            />\n                        ))}\n                    </Select>\n                )\n            }\n        }\n    );\n};\n\nexport default osVersionFilter;\n"],"sourceRoot":""}