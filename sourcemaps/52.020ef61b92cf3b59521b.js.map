{"version":3,"sources":["webpack:///./src/App.js","webpack:///./src/PresentationalComponents/Header/HeaderBreadcrumbs.js","webpack:///./src/PresentationalComponents/Header/HeaderTabs.js","webpack:///./src/PresentationalComponents/Header/Header.js","webpack:///./src/PresentationalComponents/Snippets/NoAccess.js","webpack:///./src/Routes.js","webpack:///./src/Utilities/getBaseName.js","webpack:///./src/store/Reducers/SystemDetailStore.js","webpack:///./src/store/Reducers/AdvisoryDetailStore.js","webpack:///./src/store/Reducers/AdvisoryListStore.js","webpack:///./src/store/Reducers/CvesListStore.js","webpack:///./src/store/Reducers/PackageDetailStore.js","webpack:///./src/store/Reducers/PackagesListStore.js","webpack:///./src/store/Reducers/SystemsStore.js","webpack:///./src/store/Reducers/PackageSystemsStore.js","webpack:///./src/store/Reducers/AdvisorySystemsStore.js","webpack:///./src/store/index.js"],"names":["withRouter","dispatch","useDispatch","useState","selectedTags","systemProfile","config","setConfig","location","useLocation","history","useHistory","useEffect","listen","newLocation","pathname","currentRoute","Object","values","paths","filter","element","includes","to","insights","chrome","appNavClick","id","navId","split","length","init","identifyApp","globalFilterScope","on","data","SID","mapGlobalFilter","SAP","Workloads","item","map","tag","encodeURIComponent","newconfig","isSelected","undefined","SID_filter","join","concat","globalFilter","unregister","event","domEvent","push","childProps","HeaderBreadcrumbs","items","headerOUIA","Breadcrumb","Boolean","BreadcrumbItem","key","title","isActive","Link","data-ouia-component-type","data-ouia-component-id","propTypes","PropTypes","HeaderTabs","Tabs","onSelect","tabString","activeKey","className","Tab","eventKey","Header","showTabs","breadcrumbs","children","PageHeader","PageHeaderTitle","Page","intl","messages","Main","Bullseye","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","LockIcon","Title","headingLevel","size","EmptyStateBody","document","referrer","Button","onClick","back","component","href","Advisories","lazy","Systems","InventoryDetail","AdvisoryPage","PackagsPage","PackageDetail","RegisterPage","advisories","systems","inventoryDetail","advisoryDetail","advisoryDetailSystem","register","packages","packageDetail","packageDetailSystem","Routes","props","hasPatchAccess","setPatchAccess","React","fetchSystems","limit","then","res","meta","replace","err","status","path","Suspense","fallback","Fragment","Switch","Redirect","from","Route","exact","render","some","p","NoAccess","release","pathName","shift","initialState","loaded","SystemDetailStore","state","type","payload","hasThirdPartyRepo","attributes","third_party","activeApps","name","isLoading","AdvisoryDetailStore","action","newState","FETCH_ADVISORY_DETAILS","error","fetchPending","fetchRejected","CLEAR_ADVISORY_DETAILS","AdvisoryListStore","storeListDefaults","ActionTypes","fetchFulfilled","changeFilters","expandRows","selectRows","CvesListStore","PackageDetailStore","FETCH_PACKAGE_DETAILS","CLEAR_PACKAGE_DETAILS","initialStore","queryParams","packagesListDefaultFilters","PackagesListStore","selectedRows","page","perPage","SystemsStore","changeListParams","PackageSystemsStore","AdvisorySystemsStore","storage","JSON","parse","sessionStorage","getItem","registry","getRegistry","promiseMiddleware","notificationsMiddleware","store","next","endsWith","storeContent","getState","setItem","stringify","SystemAdvisoryListStore","SystemPackageListStore","notifications","notificationsReducer","getStore","newReducers"],"mappings":"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","file":"js/52.204035a0e65e622be68a.js","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\n\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { isEqual } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation, withRouter } from 'react-router-dom';\nimport './App.scss';\nimport { paths, Routes } from './Routes';\nimport { globalFilter } from './store/Actions/Actions';\nconst App = () => {\n    const dispatch = useDispatch();\n    const [config, setConfig] = useState({\n        selectedTags: [],\n        systemProfile: false\n    });\n    const location = useLocation();\n    const history = useHistory();\n\n    const listenNavigation = () => {\n        return  insights.chrome.on('APP_NAVIGATION', event => {\n            if (event.domEvent) {\n                history.push(`/${event.navId}`);\n            }\n        });\n    };\n\n    useEffect(() => {\n        history.listen((newLocation) => {\n            const { pathname } = newLocation;\n            const currentRoute = Object.values(paths).filter(element => pathname !== '/' && pathname.includes(element.to));\n\n            if (pathname === '/') {\n                insights.chrome.appNavClick({ id: 'advisories' }, false);\n            }\n            else if (currentRoute) {\n                const navId =  pathname.split('/').filter(element => element.length > 0)[0];\n                navId && insights.chrome.appNavClick({ id: navId });\n            }\n        });\n    }, [location.pathname]);\n\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp('patch');\n\n        if (insights.chrome?.globalFilterScope) {\n            insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const SID = insights.chrome?.mapGlobalFilter?.(data, false, true)[1];\n                const SAP = data?.Workloads?.SAP;\n                const selectedTags = insights.chrome?.mapGlobalFilter?.(data)\n                ?.filter(item => !item.includes('Workloads')).map(tag => (`tags=${encodeURIComponent(tag)}`));\n\n                const newconfig = { };\n                (SAP && SAP.isSelected)\n                    ? (newconfig.systemProfile = `filter[system_profile][sap_system]=${SAP.isSelected}&`)\n                    : newconfig.systemProfile = undefined;\n                selectedTags && (newconfig.selectedTags = selectedTags);\n                if (SID && SID?.length !== 0) {\n                    const SID_filter = SID.map(item=> `filter[system_profile][sap_sids][in]=${item}`).join('&') ;\n                    newconfig.systemProfile = newconfig.systemProfile?.concat(SID_filter) || SID_filter;\n                }\n\n                if (!isEqual(config, newconfig)) {\n                    dispatch(globalFilter(newconfig));\n                    setConfig(newconfig);\n                }\n\n            });\n        }\n\n        const unregister = listenNavigation();\n        return () => unregister();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <NotificationPortal />\n            <Routes childProps={{ location, history }} />\n        </React.Fragment>\n    );\n};\n\nexport default withRouter(App);\n","import {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderBreadcrumbs = ({ items, headerOUIA }) => {\n    return (\n        <Breadcrumb>\n            {items.filter(Boolean).map(item => (\n                <BreadcrumbItem key={item.title} isActive={item.isActive}>\n                    {(item.to && <Link to={item.to}\n                        data-ouia-component-type={`${headerOUIA}-breadcrumb`}\n                        data-ouia-component-id={`breadcrumb-to-${item.title}`}\n                    >{item.title}</Link>) ||\n                        item.title}\n                </BreadcrumbItem>\n            ))}\n        </Breadcrumb>\n    );\n};\n\nHeaderBreadcrumbs.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            isActive: PropTypes.bool,\n            to: PropTypes.string,\n            title: PropTypes.string\n        })\n    ),\n    headerOUIA: PropTypes.string\n};\n\nexport default HeaderBreadcrumbs;\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { paths } from '../../Routes';\nimport './Header.scss';\n\nconst HeaderTabs = ({ history, headerOUIA }) => {\n    const handleRedirect = (event, tabString) => {\n        history.push(tabString);\n    };\n\n    return (\n        <Tabs\n            onSelect={handleRedirect}\n            activeKey={history.location.pathname}\n            className={'patchman-tabs'}\n        >\n            <Tab\n                eventKey={paths.advisories.to}\n                title={paths.advisories.title}\n                data-ouia-component-type={`${headerOUIA}-tab`}\n                data-ouia-component-id={`${headerOUIA}-tab-${paths.advisories.title}`}\n            />\n            <Tab\n                eventKey={paths.systems.to}\n                title={paths.systems.title}\n                data-ouia-component-type={`${headerOUIA}-tab`}\n                data-ouia-component-id={`${headerOUIA}-tab-${paths.systems.title}`}\n            />\n        </Tabs>\n    );\n};\n\nHeaderTabs.propTypes = {\n    history: propTypes.object,\n    headerOUIA: propTypes.string\n};\n\nexport default withRouter(HeaderTabs);\n","import {\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport HeaderBreadcrumbs from './HeaderBreadcrumbs';\nimport HeaderTabs from './HeaderTabs';\n\nconst Header = ({ title, showTabs, breadcrumbs, children, headerOUIA }) => {\n    return (\n        <React.Fragment>\n            <PageHeader\n                data-ouia-component-type={`${headerOUIA}-page-header`}\n            >\n                {breadcrumbs && <HeaderBreadcrumbs items={breadcrumbs} headerOUIA={headerOUIA} />}\n                <PageHeaderTitle title={title} />\n                {children}\n            </PageHeader>\n            {showTabs && <HeaderTabs headerOUIA = {headerOUIA}/>}\n        </React.Fragment>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string,\n    showTabs: PropTypes.bool,\n    breadcrumbs: PropTypes.array,\n    children: PropTypes.any,\n    headerOUIA: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { LockIcon } from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon,\n    EmptyStateVariant, Page, Title, Button } from '@patternfly/react-core';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\nimport Header from '../../PresentationalComponents/Header/Header';\n\nconst NoAccessPage = () => {\n    return (\n        <Page>\n            <Header title={intl.formatMessage(messages.generalAppName)} headerOUIA={'systems'} />\n            <Main>\n                <Bullseye>\n                    <EmptyState variant={EmptyStateVariant.large}>\n                        <EmptyStateIcon icon={LockIcon} />\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                            {intl.formatMessage(messages.statesRequiresPatchPermissions)}\n                        </Title>\n                        <EmptyStateBody>\n                            {intl.formatMessage(messages.statesMinimumPatchPermissionsRequired)}\n                        </EmptyStateBody>\n\n                        { (document.referrer ?\n                            <Button variant=\"primary\" onClick={() => history.back()}>Go to previous page</Button> :\n                            <Button variant=\"primary\" component=\"a\" href=\".\">Go to landing page</Button>\n                        )}\n                    </EmptyState>\n                </Bullseye>\n            </Main>\n        </Page>\n    );\n};\n\nexport default withRouter(NoAccessPage);\n","import some from 'lodash/some';\nimport PropTypes from 'prop-types';\nimport React, { Fragment, lazy, Suspense, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { fetchSystems } from './Utilities/api';\nimport NoAccess from './PresentationalComponents/Snippets/NoAccess';\nimport { useHistory } from 'react-router-dom';\n\nconst Advisories = lazy(() =>\n    import(\n        /* webpackChunkName: \"Advisories\" */ './SmartComponents/Advisories/Advisories'\n    )\n);\n\nconst Systems = lazy(() =>\n    import(\n        /* webpackChunkName: \"Systems\" */ './SmartComponents/Systems/Systems'\n    )\n);\n\nconst InventoryDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"InventoryDetail\" */ './SmartComponents/SystemDetail/InventoryDetail'\n    )\n);\n\nconst AdvisoryPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"AdvisoryyPage\" */ './SmartComponents/AdvisoryDetail/AdvisoryDetail'\n    )\n);\n\nconst PackagsPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Packages\" */ './SmartComponents/Packages/Packages'\n    )\n);\n\nconst PackageDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"PackageDetail\" */ './SmartComponents/PackageDetail/PackageDetail'\n    )\n);\n\nconst RegisterPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Register\" */ './PresentationalComponents/RegisterPage/RegisterPage'\n    )\n);\nexport const paths = {\n    advisories: {\n        title: 'Applicable advisories',\n        to: '/advisories'\n    },\n    systems: {\n        title: 'Systems',\n        to: '/systems/'\n    },\n    inventoryDetail: {\n        title: 'Inventory detail',\n        to: '/systems/:inventoryId'\n    },\n    advisoryDetail: {\n        title: 'Advisory detail',\n        to: '/advisories/:advisoryId'\n    },\n    advisoryDetailSystem: {\n        title: '',\n        to: '/advisories/:advisoryId/:inventoryId'\n    },\n    register: {\n        title: '',\n        to: '/register'\n    },\n    packages: {\n        title: 'Packages',\n        to: '/packages'\n    },\n    packageDetail: {\n        title: 'Package detail',\n        to: '/packages/:packageName'\n    },\n    packageDetailSystem: {\n        title: '',\n        to: '/packages/:packageName/:inventoryId'\n    }\n};\n\nexport const Routes = (props) => {\n    const [hasPatchAccess, setPatchAccess] = useState(true);\n    const history = useHistory();\n\n    React.useEffect(() => {\n        const systems = fetchSystems({ limit: 1 });\n        systems.then((res) => {\n            if (!res.meta) {\n                history.replace(paths.register.to);\n            }\n\n        }).catch(err => err.status === 401 && setPatchAccess(false));\n    }, []);\n\n    const path = props.childProps.location.pathname;\n    return hasPatchAccess && (\n        // I recommend discussing with UX some nice loading placeholder\n        <Suspense fallback={Fragment}>\n            <Switch>\n                <Redirect\n                    from={paths.advisoryDetailSystem.to}\n                    to={paths.inventoryDetail.to}\n                />\n                <Redirect\n                    from={paths.packageDetailSystem.to}\n                    to={paths.inventoryDetail.to}\n                />\n                <Route\n                    path={paths.inventoryDetail.to}\n                    component={InventoryDetail}\n                />\n                <Route exact path={paths.systems.to} component={Systems} />\n                <Route\n                    exact\n                    path={paths.advisoryDetail.to}\n                    component={AdvisoryPage}\n                />\n                <Route\n                    exact\n                    path={paths.advisories.to}\n                    component={Advisories}\n                />\n                <Route\n                    exact\n                    path={paths.packages.to}\n                    component={PackagsPage}\n                />\n                <Route\n                    exact\n                    path={paths.register.to}\n                    component={RegisterPage}\n                />\n                <Route\n                    exact\n                    path={paths.packageDetail.to}\n                    component={PackageDetail}\n                />\n\n                <Route\n                    render={() =>\n                        some(paths, p => p.to === path) || (\n                            <Redirect to={paths.advisories.to} />\n                        )\n                    }\n                />\n            </Switch>\n        </Suspense>\n    ) || <NoAccess /> ;\n};\n\nRoutes.propTypes = {\n    childProps: PropTypes.shape({\n        location: PropTypes.shape({\n            pathname: PropTypes.string\n        }),\n        history: PropTypes.any\n    })\n};\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1] || ''}`;\n}\n\nexport default getBaseName;\n","import React from 'react';\nimport SystemDetail from '../../SmartComponents/SystemDetail/SystemDetail';\n\nlet initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const SystemDetailStore = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'FETCH_SYSTEM_DETAIL_FULFILLED':\n            state.hasThirdPartyRepo = payload.data?.attributes.third_party;\n            return state;\n        case 'LOAD_ENTITY_FULFILLED':\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Patch',\n                        name: 'patch',\n                        component: () => <SystemDetail />\n                    }\n                ]\n            };\n        case 'LOAD_ENTITY_REJECTED':\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Patch',\n                        name: 'patch',\n                        component: () => <SystemDetail />\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n","import { CLEAR_ADVISORY_DETAILS, FETCH_ADVISORY_DETAILS } from '../ActionTypes';\nimport {\n\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const AdvisoryDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_ADVISORY_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_ADVISORY_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_ADVISORY_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_ADVISORY_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    expandRows,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const AdvisoryListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_ADVISORY_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.EXPAND_ADVISORY_ROW:\n            return expandRows(newState, action);\n\n        case ActionTypes.SELECT_ADVISORY_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const CvesListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_CVES_INFO + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_CVES_INFO + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_CVES_INFO + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_CVES_STORE_PARAMS:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { CLEAR_PACKAGE_DETAILS, FETCH_PACKAGE_DETAILS } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const PackageDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_PACKAGE_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_PACKAGE_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_PACKAGE_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_PACKAGE_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults, packagesListDefaultFilters } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport { changeFilters, fetchFulfilled, fetchPending, fetchRejected } from './HelperReducers';\n\nconst initialStore = { ...storeListDefaults,  queryParams: packagesListDefaultFilters };\n\nexport const PackagesListStore = (state = initialStore, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_PACKAGES_LIST + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PACKAGES_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nconst initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n// Reducer\n\nexport const SystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            delete action.payload?.filter;\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n\nexport const PackageSystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_PACKAGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nconst initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n// Reducer\n\nexport const AdvisorySystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_AFFECTED_SYSTEMS_PARAMS:\n            delete action.payload?.filter;\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n\n","/* eslint new-cap: 0 */\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { AdvisoryDetailStore } from './Reducers/AdvisoryDetailStore';\nimport { AdvisoryListStore } from './Reducers/AdvisoryListStore';\nimport { CvesListStore } from './Reducers/CvesListStore';\nimport { PackageDetailStore } from './Reducers/PackageDetailStore';\nimport { PackagesListStore } from './Reducers/PackagesListStore';\nimport { SystemAdvisoryListStore } from './Reducers/SystemAdvisoryListStore';\nimport { SystemDetailStore } from './Reducers/SystemDetailStore';\nimport { SystemPackageListStore } from './Reducers/SystemPackageListStore';\nimport { SystemsStore } from './Reducers/SystemsStore';\nimport { PackageSystemsStore } from './Reducers/PackageSystemsStore';\nimport { AdvisorySystemsStore } from './Reducers/AdvisorySystemsStore';\n\nconst persistenceMiddleware = store => next => action => {\n    if (action.type === 'LOAD_ENTITIES_FULFILLED') {\n        action = { ...action, store };\n    }\n\n    next(action);\n    if (!action.type.endsWith('_REJECTED')) {\n        const storeContent = store.getState();\n        sessionStorage.setItem('PatchStore', JSON.stringify(storeContent));\n    }\n};\n\nconst storage = JSON.parse(sessionStorage.getItem('PatchStore')) || {};\n\nconst registry = getRegistry({}, [promiseMiddleware, notificationsMiddleware(), persistenceMiddleware]);\nregistry.register({\n    AdvisoryListStore: (state = storage.AdvisoryListStore, action) => AdvisoryListStore(state, action),\n    SystemDetailStore: (state = storage.SystemDetailStore, action) => SystemDetailStore(state, action),\n    SystemAdvisoryListStore: (state = storage.SystemAdvisoryListStore, action) => SystemAdvisoryListStore(state, action),\n    AdvisoryDetailStore: (state = storage.AdvisoryDetailStore, action) => AdvisoryDetailStore(state, action),\n    SystemPackageListStore: (state = storage.SystemPackageListStore, action) => SystemPackageListStore(state, action),\n    PackagesListStore: (state = storage.PackagesListStore, action) => PackagesListStore(state, action),\n    PackageDetailStore: (state = storage.PackageDetailStore, action) => PackageDetailStore(state, action),\n    CvesListStore: (state = storage.CvesListStore, action) => CvesListStore(state, action),\n    SystemsStore: (state = storage.SystemsStore, action) => SystemsStore(state, action),\n    PackageSystemsStore: (state = storage.PackageSystemsStore, action) => PackageSystemsStore(state, action),\n    AdvisorySystemsStore: (state = storage.AdvisorySystemsStore, action) => AdvisorySystemsStore(state, action),\n    notifications: notificationsReducer\n});\n\nexport const getStore = () => registry.getStore();\nexport const register = newReducers => {\n    registry.register(newReducers);\n};\n"],"sourceRoot":""}