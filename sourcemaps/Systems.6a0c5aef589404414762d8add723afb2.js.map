{"version":3,"file":"js/Systems.1641465859758.197b841ea47a668b2d78.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/Card.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardBody.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardTitle.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Skeleton/Skeleton.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/package-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Skeleton/skeleton.js","webpack:///./src/PresentationalComponents/Filters/OsVersionFilter.js","webpack:///./src/PresentationalComponents/Header/HeaderBreadcrumbs.js","webpack:///./src/PresentationalComponents/Header/HeaderTabs.js","webpack:///./src/PresentationalComponents/Header/Header.js","webpack:///./src/PresentationalComponents/Filters/SystemStaleFilter.js","webpack:///./src/PresentationalComponents/Filters/SystemsUpdatableFilter.js","webpack:///./src/PresentationalComponents/StatusReports/SystemsStatusReport.js","webpack:///./src/SmartComponents/Systems/Systems.js","webpack:///./src/store/Reducers/InventoryEntitiesReducer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Card = exports.CardContext = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.CardContext = React.createContext({\n    cardId: '',\n    isExpanded: false\n});\nconst Card = (_a) => {\n    var { children = null, id = '', className = '', component = 'article', isHoverable = false, isCompact = false, isSelectable = false, isSelected = false, isFlat = false, isExpanded = false, isRounded = false, isLarge = false, isFullHeight = false, isPlain = false, ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelected\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"isFullHeight\", \"isPlain\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = helpers_1.useOUIAProps(exports.Card.displayName, ouiaId, ouiaSafe);\n    if (isCompact && isLarge) {\n        // eslint-disable-next-line no-console\n        console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n        isLarge = false;\n    }\n    return (React.createElement(exports.CardContext.Provider, { value: {\n            cardId: id,\n            isExpanded\n        } },\n        React.createElement(Component, Object.assign({ id: id, className: react_styles_1.css(card_1.default.card, isHoverable && card_1.default.modifiers.hoverable, isCompact && card_1.default.modifiers.compact, isSelectable && card_1.default.modifiers.selectable, isSelected && isSelectable && card_1.default.modifiers.selected, isExpanded && card_1.default.modifiers.expanded, isFlat && card_1.default.modifiers.flat, isRounded && card_1.default.modifiers.rounded, isLarge && card_1.default.modifiers.displayLg, isFullHeight && card_1.default.modifiers.fullHeight, isPlain && card_1.default.modifiers.plain, className), tabIndex: isSelectable ? '0' : undefined }, props, ouiaProps), children)));\n};\nexports.Card = Card;\nexports.Card.displayName = 'Card';\n//# sourceMappingURL=Card.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardBody = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst CardBody = (_a) => {\n    var { children = null, className = '', component = 'div', isFilled = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\", \"isFilled\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardBody, !isFilled && card_1.default.modifiers.noFill, className) }, props), children));\n};\nexports.CardBody = CardBody;\nexports.CardBody.displayName = 'CardBody';\n//# sourceMappingURL=CardBody.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardTitle = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst CardTitle = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardTitle, className) }, props), children));\n};\nexports.CardTitle = CardTitle;\nexports.CardTitle.displayName = 'CardTitle';\n//# sourceMappingURL=CardTitle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Skeleton = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst skeleton_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Skeleton/skeleton\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst Skeleton = (_a) => {\n    var { className, width, height, fontSize, shape, screenreaderText } = _a, props = tslib_1.__rest(_a, [\"className\", \"width\", \"height\", \"fontSize\", \"shape\", \"screenreaderText\"]);\n    const fontHeightClassName = fontSize\n        ? Object.values(skeleton_1.default.modifiers).find(key => key === `pf-m-text-${fontSize}`)\n        : undefined;\n    return (React.createElement(\"div\", Object.assign({}, props, { className: react_styles_1.css(skeleton_1.default.skeleton, fontSize && fontHeightClassName, shape === 'circle' && skeleton_1.default.modifiers.circle, shape === 'square' && skeleton_1.default.modifiers.square, className) }, ((width || height) && {\n        style: Object.assign({ '--pf-c-skeleton--Width': width ? width : undefined, '--pf-c-skeleton--Height': height ? height : undefined }, props.style)\n    })),\n        React.createElement(\"span\", { className: \"pf-u-screen-reader\" }, screenreaderText)));\n};\nexports.Skeleton = Skeleton;\nexports.Skeleton.displayName = 'Skeleton';\n//# sourceMappingURL=Skeleton.js.map","\"use strict\"\nexports.__esModule = true;\nexports.PackageIconConfig = {\n  name: 'PackageIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M567.7,1010.49707 L951.5,818.498238 C994.7,796.698371 1024,752.39864 1024,703.998934 L1024,320.001265 C1024,271.601559 995.6,227.10183 952.2,205.501961 L568.6,13.5031267 C550.8,4.60318072 531.4,0.103208049 512,-0.00152855358 C492.3,-0.0967907365 472.5,4.40318194 454.4,13.5031267 L70.8,205.501961 C27.4,227.10183 0,271.50156 0,319.801267 L0.9,703.998934 C0.9,752.39864 28.3,796.79837 71.6,818.398239 L455.2,1010.39707 C464.3,1014.89705 488.1,1023.99699 511.9,1023.99699 C535.5,1023.99699 558.8,1014.99704 567.7,1010.49707 Z M512.5,630.899377 L672.5,550.899863 L672.5,645.29929 L736.5,613.299484 L736.5,518.900058 L896,438.900543 L896.5,712.698881 L512.5,904.697715 L512.5,630.899377 Z M145.1,304.101362 L294.9,228.60182 C295.3,228.801819 295.6,229.001818 296,229.201817 L661.9,412.300705 L512.5,487.600248 L145.1,304.101362 Z M512.5,118.902487 L881.3,301.701377 L733.1,376.400923 L366,192.702038 L512.5,118.902487 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PackageIcon = require('../createIcon').createIcon(exports.PackageIconConfig);\nexports[\"default\"] = exports.PackageIcon;","\"use strict\";\nexports.__esModule = true;\nrequire('./skeleton.css');\nexports.default = {\n  \"modifiers\": {\n    \"circle\": \"pf-m-circle\",\n    \"square\": \"pf-m-square\",\n    \"widthSm\": \"pf-m-width-sm\",\n    \"widthMd\": \"pf-m-width-md\",\n    \"widthLg\": \"pf-m-width-lg\",\n    \"width_25\": \"pf-m-width-25\",\n    \"width_33\": \"pf-m-width-33\",\n    \"width_50\": \"pf-m-width-50\",\n    \"width_66\": \"pf-m-width-66\",\n    \"width_75\": \"pf-m-width-75\",\n    \"heightSm\": \"pf-m-height-sm\",\n    \"heightMd\": \"pf-m-height-md\",\n    \"heightLg\": \"pf-m-height-lg\",\n    \"height_25\": \"pf-m-height-25\",\n    \"height_33\": \"pf-m-height-33\",\n    \"height_50\": \"pf-m-height-50\",\n    \"height_66\": \"pf-m-height-66\",\n    \"height_75\": \"pf-m-height-75\",\n    \"height_100\": \"pf-m-height-100\",\n    \"text_4xl\": \"pf-m-text-4xl\",\n    \"text_3xl\": \"pf-m-text-3xl\",\n    \"text_2xl\": \"pf-m-text-2xl\",\n    \"textXl\": \"pf-m-text-xl\",\n    \"textLg\": \"pf-m-text-lg\",\n    \"textMd\": \"pf-m-text-md\",\n    \"textSm\": \"pf-m-text-sm\"\n  },\n  \"skeleton\": \"pf-c-skeleton\"\n};","import React from 'react';\nimport { osFilterTypes } from '../../Utilities/constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst osVersionFilter = (currentFilter = {}, apply) => {\n\n    const [isOpen, setOpen] = React.useState(false);\n    const [numOptions, setNumOptions] = React.useState(10);\n    const versionFromNewestToOldest = osFilterTypes.slice().reverse();;\n\n    let { os: currentValue } = currentFilter;\n    const currentOsVersionsArray = typeof currentValue === 'string' && currentValue.split(',') || [];\n\n    const filterByOsType = (_, value) => {\n        if (currentValue && !currentValue.includes(value)) {\n            apply({ filter: { os: `${currentOsVersionsArray.join(',')},${value}` } });\n        }\n        else if (currentValue && currentValue.includes(value)) {\n            const remainingOs = currentOsVersionsArray.filter(os => os !== value);\n\n            apply({ filter: { os: remainingOs.length > 0 && `${remainingOs.join(',')}` || undefined } });\n        } else {\n            apply({ filter: { os: value !== '' && value || undefined  } });\n        }\n    };\n\n    const onToggle = (isOpen) => {\n        setOpen(isOpen);\n    };\n\n    const onViewMoreClick = () => {\n        setNumOptions(versionFromNewestToOldest.length);\n    };\n\n    return (\n        {\n            type: conditionalFilterType.custom,\n            label: intl.formatMessage(messages.labelsFiltersOsVersion),\n            value: 'custom',\n            filterValues: {\n                children: (\n                    <Select\n                        variant={SelectVariant.checkbox}\n                        typeAheadAriaLabel={intl.formatMessage(messages.labelsFiltersOsVersionPlaceholder)}\n                        onToggle={onToggle}\n                        onSelect={filterByOsType}\n                        selections={currentOsVersionsArray}\n                        isOpen={isOpen}\n                        aria-labelledby={'patch-os-version-filter'}\n                        placeholderText={intl.formatMessage(messages.labelsFiltersOsVersionPlaceholder)}\n                        {...(numOptions < versionFromNewestToOldest.length\n                            && { loadingVariant: { text: 'View more', onClick: onViewMoreClick } })}\n                        style={{ maxHeight: '400px', overflow: 'auto' }}\n                    >\n                        {versionFromNewestToOldest.slice(0, numOptions).map((option, index) => (\n                            <SelectOption\n                                key={index}\n                                value={option.value}\n                            />\n                        ))}\n                    </Select>\n                )\n            }\n        }\n    );\n};\n\nexport default osVersionFilter;\n","import {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderBreadcrumbs = ({ items, headerOUIA }) => {\n    return (\n        <Breadcrumb>\n            {items.filter(Boolean).map(item => (\n                <BreadcrumbItem key={item.title} isActive={item.isActive}>\n                    {(item.to && <Link to={item.to}\n                        data-ouia-component-type={`${headerOUIA}-breadcrumb`}\n                        data-ouia-component-id={`breadcrumb-to-${item.title}`}\n                    >{item.title}</Link>) ||\n                        item.title}\n                </BreadcrumbItem>\n            ))}\n        </Breadcrumb>\n    );\n};\n\nHeaderBreadcrumbs.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            isActive: PropTypes.bool,\n            to: PropTypes.string,\n            title: PropTypes.string\n        })\n    ),\n    headerOUIA: PropTypes.string\n};\n\nexport default HeaderBreadcrumbs;\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { paths } from '../../Routes';\nimport './Header.scss';\n\nconst HeaderTabs = ({ history, headerOUIA }) => {\n    const handleRedirect = (event, tabString) => {\n        history.push(tabString);\n    };\n\n    return (\n        <Tabs\n            onSelect={handleRedirect}\n            activeKey={history.location.pathname}\n            className={'patchman-tabs'}\n        >\n            <Tab\n                eventKey={paths.advisories.to}\n                title={paths.advisories.title}\n                data-ouia-component-type={`${headerOUIA}-tab`}\n                data-ouia-component-id={`${headerOUIA}-tab-${paths.advisories.title}`}\n            />\n            <Tab\n                eventKey={paths.systems.to}\n                title={paths.systems.title}\n                data-ouia-component-type={`${headerOUIA}-tab`}\n                data-ouia-component-id={`${headerOUIA}-tab-${paths.systems.title}`}\n            />\n        </Tabs>\n    );\n};\n\nHeaderTabs.propTypes = {\n    history: propTypes.object,\n    headerOUIA: propTypes.string\n};\n\nexport default withRouter(HeaderTabs);\n","import {\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport HeaderBreadcrumbs from './HeaderBreadcrumbs';\nimport HeaderTabs from './HeaderTabs';\n\nconst Header = ({ title, showTabs, breadcrumbs, children, headerOUIA }) => {\n    return (\n        <React.Fragment>\n            <PageHeader\n                data-ouia-component-type={`${headerOUIA}-page-header`}\n            >\n                {breadcrumbs && <HeaderBreadcrumbs items={breadcrumbs} headerOUIA={headerOUIA} />}\n                <PageHeaderTitle title={title} />\n                {children}\n            </PageHeader>\n            {showTabs && <HeaderTabs headerOUIA = {headerOUIA}/>}\n        </React.Fragment>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string,\n    showTabs: PropTypes.bool,\n    breadcrumbs: PropTypes.array,\n    children: PropTypes.any,\n    headerOUIA: PropTypes.string\n};\n\nexport default Header;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport React from 'react';\nimport { staleSystems } from '../../Utilities/constants';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst systemsStaleFilter = (apply, currentFilter = {}) => {\n\n    let { stale: currentValue } = currentFilter;\n\n    const staleMap = React.useMemo(\n        () =>\n            staleSystems.map(({ value, label }) => ({\n                label,\n                value: value.toString()\n            })),\n        []\n    );\n\n    const currentValueStringType = (\n        currentValue\n            && (\n                Array.isArray(currentValue)\n                    && currentValue.map(value => value.toString())\n                    || [currentValue.toString()]\n            )\n    );\n\n    const filterByStale = value => {\n        apply({ filter: { stale: value } });\n    };\n\n    return {\n        label: intl.formatMessage(messages.labelsFiltersStale),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStale(value);\n            },\n            items: staleMap,\n            value: currentValueStringType,\n            placeholder: intl.formatMessage(messages.labelsFiltersStalePlaceholder)\n        }\n    };\n};\n\nexport default systemsStaleFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { packagesListUpdatableTypes } from '../../Utilities/constants';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst systemsUpdatableFilter = (apply, currentFilter = {}) => {\n\n    let { packages_updatable: currentValue } = currentFilter;\n\n    const filterByUpdatableSystems = value => {\n        apply({ filter: { packages_updatable: value } });\n    };\n\n    return {\n        label: intl.formatMessage(messages.labelsFiltersUpdatable),\n        type: conditionalFilterType.radio,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByUpdatableSystems(value);\n            },\n            items: packagesListUpdatableTypes,\n            value: currentValue,\n            placeholder: intl.formatMessage(messages.labelsFiltersUpdatablePlaceholder)\n        }\n    };\n};\n\nexport default systemsUpdatableFilter;\n","import { CheckCircleIcon, PackageIcon, ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\nimport {\n    CardTitle, Button, Skeleton,\n    Card, Grid, GridItem, CardBody, Flex, FlexItem\n} from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\n\nconst StatusCard = ({ title, color, Icon, value, filter, apply }) => {\n    return (\n        <Card isCompact style={{ marginRight: 'var(--pf-global--spacer--sm)' }}>\n            <CardTitle style={{ marginTop: '0px' }}>{title}</CardTitle>\n            <CardBody className='fonst-size-sm'>\n                <Flex flex={{ default: 'inlineFlex' }} style={{ flexWrap: 'nowrap' }}>\n                    <FlexItem\n                        spacer={{ default: 'spacerMd' }}\n                        alignSelf={{ default: 'alignSelfCenter' }}\n                    >\n                        <Icon color={color} size='md'/>\n                    </FlexItem>\n                    <FlexItem isFilled spacer={{ default: 'spacerNone' }}>\n                        {\n                            typeof(value) === 'undefined'\n                            &&  <Skeleton width=\"24px\" />\n                                    ||  <Button\n                                        variant=\"link\"\n                                        onClick={() => apply(filter)}\n                                        className='patch-status-report-text'>\n                                        {value}\n                                    </Button>\n                        }\n                    </FlexItem>\n                </Flex>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst SystemsStatusreport = ({ metadata: { subtotals }, apply }) => (\n    <Main style={{ paddingBottom: 0 }}>\n\n        <Grid hasGutter span={3}>\n            <GridItem>\n                <StatusCard\n                    title={intl.formatMessage(messages.labelsStatusSystemsUpToDate)}\n                    Icon={CheckCircleIcon}\n                    color={'var(--pf-global--success-color--100)'}\n                    value={subtotals?.patched}\n                    apply={apply}\n                    filter={{ filter: { packages_updatable: 'eq:0' } }}\n                />\n            </GridItem>\n            <GridItem>\n                <StatusCard\n                    title={intl.formatMessage(messages.labelsStatusSystemsWithPatchesAvailable)}\n                    Icon={PackageIcon}\n                    color={'var(--pf-global--primary-color--100)'}\n                    value={subtotals?.unpatched}\n                    apply={apply}\n                    filter={{ filter: { packages_updatable: 'gt:0' } }}\n                />\n            </GridItem>\n            <GridItem>\n                <StatusCard\n                    title={intl.formatMessage(messages.labelsStatusStaleSystems)}\n                    Icon={ExclamationTriangleIcon}\n                    color={'var(--pf-global--warning-color--100)'}\n                    value={subtotals?.stale}\n                    apply={apply}\n                    filter={{ filter: { stale: true } }}\n                />\n            </GridItem>\n        </Grid>\n    </Main>\n);\n\nStatusCard.propTypes = {\n    title: propTypes.string,\n    Icon: propTypes.elementType,\n    value: propTypes.string,\n    color: propTypes.string,\n    apply: propTypes.func,\n    filter: propTypes.object\n};\n\nSystemsStatusreport.propTypes = {\n    metadata: propTypes.object,\n    apply: propTypes.func\n};\n\nexport default SystemsStatusreport;\n","import { TableVariant } from '@patternfly/react-table';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport React from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport messages from '../../Messages';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport staleFilter from '../../PresentationalComponents/Filters/SystemStaleFilter';\nimport osVersionFilter from '../../PresentationalComponents/Filters/OsVersionFilter';\nimport systemsUpdatableFilter from '../../PresentationalComponents/Filters/SystemsUpdatableFilter';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\nimport { register } from '../../store';\nimport { changeSystemsParams, clearInventoryReducer, changeSystemsMetadata } from '../../store/Actions/Actions';\nimport { inventoryEntitiesReducer, modifyInventory } from '../../store/Reducers/InventoryEntitiesReducer';\nimport {\n    exportSystemsCSV, exportSystemsJSON, fetchApplicableAdvisoriesApi,\n    fetchSystems, fetchViewAdvisoriesSystems\n} from '../../Utilities/api';\nimport { remediationIdentifiers, systemsListDefaultFilters } from '../../Utilities/constants';\nimport {\n    arrayFromObj, buildFilterChips,\n    decodeQueryparams, filterRemediatableSystems, persistantParams, remediationProviderWithPairs, removeUndefinedObjectKeys,\n    transformPairs, systemsColumnsMerger\n} from '../../Utilities/Helpers';\nimport {\n    setPageTitle, useBulkSelectConfig, useGetEntities, useOnExport,\n    useOnSelect, useRemoveFilter\n} from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport PatchRemediationButton from '../Remediation/PatchRemediationButton';\nimport RemediationModal from '../Remediation/RemediationModal';\nimport { systemsListColumns, systemsRowActions } from './SystemsListAssets';\nimport SystemsStatusReport from '../../PresentationalComponents/StatusReports/SystemsStatusReport';\n\nconst Systems = () => {\n    const pageTitle = intl.formatMessage(messages.titlesSystems);\n\n    setPageTitle(pageTitle);\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [isRemediationLoading, setRemediationLoading] = React.useState(false);\n    const [\n        RemediationModalCmp,\n        setRemediationModalCmp\n    ] = React.useState(() => () => null);\n\n    const decodedParams = decodeQueryparams(history.location.search);\n    const systems = useSelector(({ entities }) => entities?.rows || [], shallowEqual);\n    const totalItems = useSelector(\n        ({ entities }) => entities?.total || 0\n    );\n\n    const selectedRows = useSelector(\n        ({ entities }) => entities?.selectedRows || []\n    );\n    const status = useSelector(\n        ({ entities }) => entities?.status || {}\n    );\n    const queryParams = useSelector(\n        ({ SystemsStore }) => SystemsStore?.queryParams || {}\n    );\n    const metadata = useSelector(\n        ({ SystemsStore }) => SystemsStore?.metadata || {}\n    );\n\n    const { systemProfile, selectedTags,\n        filter, search, page, perPage, sort } = queryParams;\n\n    React.useEffect(() => {\n        apply(decodedParams);\n        return () => dispatch(clearInventoryReducer());\n    }, []);\n    async function showRemediationModal(data) {\n        setRemediationLoading(true);\n        const resolvedData = await data;\n        setRemediationModalCmp(() => () => <RemediationModal data={resolvedData} />);\n        setRemediationLoading(false);\n    }\n\n    function apply(queryParams) {\n        dispatch(changeSystemsParams(queryParams));\n    }\n\n    const applyMetadata = (metadata) => {\n        dispatch(changeSystemsMetadata(metadata));\n    };\n\n    const [deleteFilters] = useRemoveFilter({ search, ...filter }, apply, systemsListDefaultFilters);\n\n    const filterConfig = {\n        items: [\n            searchFilter(apply, search,\n                intl.formatMessage(messages.labelsFiltersSystemsSearchTitle),\n                intl.formatMessage(messages.labelsFiltersSystemsSearchPlaceholder)\n            ),\n            staleFilter(apply, filter),\n            systemsUpdatableFilter(apply, filter),\n            osVersionFilter(filter, apply)\n        ]\n    };\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(filter, search, intl.formatMessage(messages.labelsFiltersSystemsSearchTitle)),\n        onDelete: deleteFilters,\n        deleteTitle: intl.formatMessage(messages.labelsFiltersReset)\n    };\n\n    const fetchAllData = (queryParams) =>\n        fetchSystems({ ...queryParams, limit: -1 }).then(filterRemediatableSystems);\n\n    const selectRows = (toSelect) => {\n        dispatch(\n            { type: 'SELECT_ENTITY', payload: toSelect }\n        );\n    };\n\n    const onSelect = useOnSelect(systems, selectedRows, fetchAllData, selectRows);\n\n    const selectedCount = selectedRows && arrayFromObj(selectedRows).length;\n\n    const onExport = useOnExport('systems', queryParams, {\n        csv: exportSystemsCSV,\n        json: exportSystemsJSON\n    }, dispatch);\n\n    const areActionsDisabled = (rowData) => {\n        const { applicable_advisories: applicableAdvisories } = rowData;\n        return applicableAdvisories && applicableAdvisories.every(typeSum => typeSum === 0);\n    };\n\n    const prepareRemediationPairs = (systems) => {\n        return fetchApplicableAdvisoriesApi({ limit: -1 }).then(\n            ({ data }) => fetchViewAdvisoriesSystems(\n                {\n                    advisories: data.map(advisory => advisory.id),\n                    systems\n                }\n            ));\n    };\n\n    const getEntities = useGetEntities(fetchSystems, apply, {}, history, applyMetadata);\n\n    return (\n        <React.Fragment>\n            <Header title={intl.formatMessage(messages.titlesPatchSystems)} headerOUIA={'systems'} />\n            <RemediationModalCmp />\n            <SystemsStatusReport metadata={metadata} apply={apply}/>\n            <Main>\n                {status.hasError && <ErrorHandler code={status.code} /> ||\n                    (\n                        <InventoryTable\n\n                            isFullView\n                            autoRefresh\n                            initialLoading\n                            hideFilters={{ all: true, tags: false }}\n                            columns={systemsColumnsMerger}\n                            showTags\n                            customFilters={{\n                                patchParams: {\n                                    search,\n                                    filter,\n                                    systemProfile,\n                                    selectedTags\n                                }\n                            }}\n                            onLoad={({ mergeWithEntities }) => {\n                                register({\n                                    ...mergeWithEntities(\n                                        inventoryEntitiesReducer(systemsListColumns, modifyInventory),\n                                        persistantParams({ page, perPage, sort, search }, decodedParams)\n                                    )\n                                });\n                            }}\n                            getEntities={getEntities}\n                            actions={systemsRowActions(showRemediationModal)}\n                            tableProps={{\n                                areActionsDisabled,\n                                canSelectAll: false,\n                                variant: TableVariant.compact, className: 'patchCompactInventory', isStickyHeader: true\n                            }}\n                            bulkSelect={useBulkSelectConfig(selectedCount, onSelect, { total_items: totalItems }, systems)}\n                            exportConfig={{\n                                isDisabled: totalItems === 0,\n                                onSelect: onExport\n                            }}\n                            filterConfig={filterConfig}\n                            activeFiltersConfig={activeFiltersConfig}\n                            dedicatedAction={(\n                                <PatchRemediationButton\n                                    onClick={() =>\n                                        showRemediationModal(\n                                            remediationProviderWithPairs(\n                                                removeUndefinedObjectKeys(selectedRows),\n                                                prepareRemediationPairs,\n                                                transformPairs,\n                                                remediationIdentifiers.advisory)\n                                        )}\n                                    isDisabled={arrayFromObj(selectedRows).length === 0 || isRemediationLoading}\n                                    isLoading={isRemediationLoading}\n                                    ouia={'toolbar-remediation-button'}\n                                />\n                            )}\n                        />\n\n                    )\n                }\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default Systems;\n","import { createSystemsRows } from '../../Utilities/DataMappers';\nimport { createPackageSystemsRows } from '../../Utilities/DataMappers';\nimport { selectRows } from './HelperReducers';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nconst initialState = {\n    rows: [],\n    entities: [],\n    selectedRows: {},\n    status: {},\n    page: 1,\n    perPage: 20,\n    metadata: {\n        limit: 20,\n        offset: 0,\n        total_items: 0\n    }\n};\n// Reducer\n\nexport const modifyInventory = (columns, state) => {\n    if (state.loaded) {\n        return {\n            ...state,\n            status: { isLoading: false, hasError: false },\n            rows: createSystemsRows(state.rows, state.selectedRows)\n        };\n    }\n\n    return state;\n};\n\nexport const modifyPackageSystems = (columns, state) => {\n    if (state.loaded) {\n        return {\n            ...state,\n            columns,\n            rows: createPackageSystemsRows(state.rows, state.selectedRows)\n        };\n    }\n\n    return state;\n};\n\nexport const inventoryEntitiesReducer = (columns, inventoryModifier) => (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return inventoryModifier(columns, newState);\n\n        case 'LOAD_ENTITIES_PENDING':\n            newState.status = { isLoading: true, hasError: false };\n            return newState;\n\n        case 'LOAD_ENTITIES_REJECTED':\n            newState.status = { isLoading: true, hasError: true };\n            return newState;\n\n        case 'SELECT_ENTITY': {\n            const stateAfterSelection = selectRows(newState, action);\n            return inventoryModifier(columns, stateAfterSelection);\n        }\n\n        case ActionTypes.CLEAR_INVENTORY_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n"],"names":["exports","tslib_1","React","__importStar","card_1","__importDefault","react_styles_1","helpers_1","createContext","cardId","isExpanded","_a","children","id","className","component","isHoverable","isCompact","isSelectable","isSelected","isFlat","isRounded","isLarge","isFullHeight","isPlain","ouiaId","ouiaSafe","props","__rest","Component","ouiaProps","useOUIAProps","console","warn","createElement","value","Object","assign","css","default","card","modifiers","hoverable","compact","selectable","selected","expanded","flat","rounded","displayLg","fullHeight","plain","tabIndex","undefined","isFilled","cardBody","noFill","cardTitle","skeleton_1","width","height","fontSize","shape","screenreaderText","fontHeightClassName","values","find","key","skeleton","circle","square","style","name","svgPath","yOffset","xOffset","__esModule","currentFilter","apply","isOpen","setOpen","numOptions","setNumOptions","versionFromNewestToOldest","osFilterTypes","reverse","currentValue","os","currentOsVersionsArray","split","filterByOsType","_","includes","filter","join","remainingOs","length","onToggle","onViewMoreClick","type","conditionalFilterType","label","intl","messages","filterValues","variant","SelectVariant","typeAheadAriaLabel","onSelect","selections","placeholderText","loadingVariant","text","onClick","maxHeight","overflow","slice","map","option","index","SelectOption","HeaderBreadcrumbs","items","headerOUIA","Breadcrumb","Boolean","item","BreadcrumbItem","title","isActive","to","Link","propTypes","PropTypes","HeaderTabs","history","Tabs","event","tabString","push","activeKey","location","pathname","Tab","eventKey","paths","withRouter","Header","showTabs","breadcrumbs","PageHeader","PageHeaderTitle","stale","staleMap","staleSystems","toString","currentValueStringType","Array","isArray","filterByStale","onChange","placeholder","packages_updatable","filterByUpdatableSystems","packagesListUpdatableTypes","StatusCard","color","Icon","Card","marginRight","CardTitle","marginTop","CardBody","Flex","flex","flexWrap","FlexItem","spacer","alignSelf","size","Skeleton","Button","SystemsStatusreport","subtotals","metadata","Main","paddingBottom","Grid","hasGutter","span","GridItem","CheckCircleIcon","patched","PackageIcon","unpatched","ExclamationTriangleIcon","pageTitle","setPageTitle","useHistory","dispatch","useDispatch","isRemediationLoading","setRemediationLoading","RemediationModalCmp","setRemediationModalCmp","decodedParams","decodeQueryparams","search","systems","useSelector","entities","rows","shallowEqual","totalItems","total","selectedRows","status","queryParams","SystemsStore","systemProfile","selectedTags","page","perPage","sort","showRemediationModal","data","resolvedData","RemediationModal","changeSystemsParams","clearInventoryReducer","useRemoveFilter","systemsListDefaultFilters","deleteFilters","filterConfig","searchFilter","staleFilter","systemsUpdatableFilter","osVersionFilter","activeFiltersConfig","filters","buildFilterChips","onDelete","deleteTitle","useOnSelect","fetchSystems","limit","then","filterRemediatableSystems","toSelect","payload","selectedCount","arrayFromObj","onExport","useOnExport","csv","exportSystemsCSV","json","exportSystemsJSON","prepareRemediationPairs","fetchApplicableAdvisoriesApi","fetchViewAdvisoriesSystems","advisories","advisory","getEntities","useGetEntities","changeSystemsMetadata","SystemsStatusReport","hasError","ErrorHandler","code","InventoryTable","isFullView","autoRefresh","initialLoading","hideFilters","all","tags","columns","systemsColumnsMerger","showTags","customFilters","patchParams","onLoad","mergeWithEntities","register","inventoryEntitiesReducer","systemsListColumns","modifyInventory","persistantParams","actions","systemsRowActions","tableProps","areActionsDisabled","rowData","applicableAdvisories","applicable_advisories","every","typeSum","canSelectAll","TableVariant","isStickyHeader","bulkSelect","useBulkSelectConfig","total_items","exportConfig","isDisabled","dedicatedAction","PatchRemediationButton","remediationProviderWithPairs","removeUndefinedObjectKeys","transformPairs","remediationIdentifiers","isLoading","ouia","initialState","offset","state","loaded","createSystemsRows","modifyPackageSystems","createPackageSystemsRows","inventoryModifier","action","newState","stateAfterSelection","selectRows","ActionTypes"],"sourceRoot":""}