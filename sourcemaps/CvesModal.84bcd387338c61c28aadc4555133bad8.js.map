{"version":3,"file":"js/CvesModal.8483fae5d25362d41d6c.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Backdrop/backdrop.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/ModalBox/modal-box.mjs","webpack:///./node_modules/@patternfly/react-styles/css/utilities/Accessibility/accessibility.mjs","webpack:///./src/PresentationalComponents/TableView/TableFooter.js","webpack:///./src/PresentationalComponents/TableView/TableView.js","webpack:///./src/PresentationalComponents/TableView/TableViewAssets.js","webpack:///./src/SmartComponents/AdvisoryDetail/CvesModal.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","import './backdrop.css';\nexport default {\n  \"backdrop\": \"pf-c-backdrop\",\n  \"backdropOpen\": \"pf-c-backdrop__open\"\n};","import './modal-box.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"modalBox\": \"pf-c-modal-box\",\n  \"modalBoxBody\": \"pf-c-modal-box__body\",\n  \"modalBoxDescription\": \"pf-c-modal-box__description\",\n  \"modalBoxFooter\": \"pf-c-modal-box__footer\",\n  \"modalBoxHeader\": \"pf-c-modal-box__header\",\n  \"modalBoxHeaderMain\": \"pf-c-modal-box__header-main\",\n  \"modalBoxTitle\": \"pf-c-modal-box__title\",\n  \"modalBoxTitleIcon\": \"pf-c-modal-box__title-icon\",\n  \"modalBoxTitleText\": \"pf-c-modal-box__title-text\",\n  \"modifiers\": {\n    \"sm\": \"pf-m-sm\",\n    \"md\": \"pf-m-md\",\n    \"lg\": \"pf-m-lg\",\n    \"alignTop\": \"pf-m-align-top\",\n    \"danger\": \"pf-m-danger\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"default\": \"pf-m-default\",\n    \"info\": \"pf-m-info\",\n    \"help\": \"pf-m-help\",\n    \"icon\": \"pf-m-icon\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './accessibility.css';\nexport default {\n  \"hidden\": \"pf-u-hidden\",\n  \"hiddenOnLg\": \"pf-u-hidden-on-lg\",\n  \"hiddenOnMd\": \"pf-u-hidden-on-md\",\n  \"hiddenOnSm\": \"pf-u-hidden-on-sm\",\n  \"hiddenOnXl\": \"pf-u-hidden-on-xl\",\n  \"hiddenOn_2xl\": \"pf-u-hidden-on-2xl\",\n  \"screenReader\": \"pf-u-screen-reader\",\n  \"screenReaderOnLg\": \"pf-u-screen-reader-on-lg\",\n  \"screenReaderOnMd\": \"pf-u-screen-reader-on-md\",\n  \"screenReaderOnSm\": \"pf-u-screen-reader-on-sm\",\n  \"screenReaderOnXl\": \"pf-u-screen-reader-on-xl\",\n  \"screenReaderOn_2xl\": \"pf-u-screen-reader-on-2xl\",\n  \"visible\": \"pf-u-visible\",\n  \"visibleOnLg\": \"pf-u-visible-on-lg\",\n  \"visibleOnMd\": \"pf-u-visible-on-md\",\n  \"visibleOnSm\": \"pf-u-visible-on-sm\",\n  \"visibleOnXl\": \"pf-u-visible-on-xl\",\n  \"visibleOn_2xl\": \"pf-u-visible-on-2xl\"\n};","import { Pagination, PaginationVariant, Skeleton } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TableFooter = ({ isLoading, page, perPage, onSetPage, totalItems, onPerPageSelect, paginationOUIA }) => {\n    return (\n        <>\n            {isLoading ? (\n                <div className=\"pf-c-pagination pf-m-bottom\">\n                    <Skeleton fontSize=\"xl\" width=\"350px\" style={{ margin: 10 }} />\n                </div>\n            ) :\n                <Pagination\n                    itemCount={totalItems}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    onPerPageSelect={onPerPageSelect}\n                    widgetId={`pagination-options-menu-bottom`}\n                    variant={PaginationVariant.bottom}\n                    ouiaId={paginationOUIA}\n                    isDisabled={totalItems === 0}\n                />\n            }\n        </>\n    );\n};\n\nTableFooter.propTypes = {\n    isLoading: PropTypes.bool,\n    onSetPage: PropTypes.func,\n    onPerPageSelect: PropTypes.func,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    totalItems: PropTypes.number,\n    paginationOUIA: PropTypes.string\n};\n\nexport default TableFooter;\n","import { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport AsyncRemediationButton from '../../SmartComponents/Remediation/AsyncRemediationButton';\nimport { arrayFromObj, buildFilterChips, convertLimitOffset } from '../../Utilities/Helpers';\nimport { useRemoveFilter, useBulkSelectConfig } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport TableFooter from './TableFooter';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\nimport { Skeleton, ToolbarItem } from '@patternfly/react-core';\n\nconst TableView = ({\n    columns,\n    store: {\n        rows,\n        metadata,\n        status,\n        queryParams: { filter, search }\n    },\n    onCollapse,\n    onSelect,\n    onSetPage,\n    onPerPageSelect,\n    onSort,\n    onExport,\n    filterConfig,\n    sortBy,\n    remediationProvider,\n    selectedRows,\n    compact,\n    apply,\n    tableOUIA,\n    paginationOUIA,\n    errorState,\n    emptyState,\n    defaultFilters,\n    searchChipLabel,\n    ToolbarButton,\n    actionsConfig,\n    isRemediationLoading,\n    actionsToggle\n}) => {\n\n    const [page, perPage] = React.useMemo(\n        () => convertLimitOffset(metadata.limit, metadata.offset),\n        [metadata.limit, metadata.offset]\n    );\n\n    const [deleteFilters] = useRemoveFilter(filter, apply, defaultFilters);\n    const selectedCount = selectedRows && arrayFromObj(selectedRows).length;\n    const { code, hasError, isLoading } = status;\n    const bulkSelectConfig = useBulkSelectConfig(selectedCount, onSelect, metadata, rows, onCollapse);\n\n    return (\n        <React.Fragment>\n            {\n                (<React.Fragment>\n                    {(hasError || metadata.has_systems === false)\n                        ? <ErrorHandler code={code} ErrorState={errorState} EmptyState={emptyState} metadata={metadata} />\n                        : <React.Fragment>\n                            <PrimaryToolbar\n                                pagination={isLoading\n                                    ? <Skeleton fontSize=\"xl\" width=\"200px\" style={{ margin: 10 }} />\n                                    : {\n                                        itemCount: metadata.total_items,\n                                        page,\n                                        perPage,\n                                        isCompact: true,\n                                        onSetPage,\n                                        onPerPageSelect,\n                                        ouiaId: `top-${paginationOUIA}`,\n                                        isDisabled: metadata.total_items === 0\n                                    }}\n                                filterConfig={filterConfig}\n                                activeFiltersConfig={{\n                                    filters: buildFilterChips(filter, search, searchChipLabel),\n                                    onDelete: deleteFilters,\n                                    deleteTitle: intl.formatMessage(defaultFilters\n                                        && messages.labelsFiltersReset || messages.labelsFiltersClear)\n                                }}\n                                actionsConfig={{\n                                    actions: [remediationProvider && (\n                                        <AsyncRemediationButton\n                                            remediationProvider={remediationProvider}\n                                            isDisabled={\n                                                Object.values(selectedRows).filter(isSelected => isSelected).length === 0\n                                                || isRemediationLoading\n                                            }\n                                            isLoading={isRemediationLoading}\n                                        />\n                                    )]\n                                }}\n                                exportConfig={{\n                                    isDisabled: metadata.total_items === 0,\n                                    onSelect: onExport\n                                }}\n                                bulkSelect={onSelect && bulkSelectConfig}\n                            >\n                                {ToolbarButton && <ToolbarItem>\n                                    <ToolbarButton />\n                                </ToolbarItem>}\n                            </PrimaryToolbar>\n                            {isLoading\n                                ? <SkeletonTable\n                                    colSize={columns?.length ?? 5}\n                                    rowSize={20}\n                                    variant={compact && TableVariant.compact}\n                                />\n                                : <Table\n                                    aria-label=\"Patch table view\"\n                                    cells={columns}\n                                    onSelect={metadata.total_items && onSelect}\n                                    rows={rows}\n                                    onCollapse={metadata.total_items && onCollapse}\n                                    canSelectAll={false}\n                                    onSort={metadata.total_items && onSort}\n                                    ouiaId={tableOUIA}\n                                    sortBy={metadata.total_items && sortBy}\n                                    isStickyHeader\n                                    variant={compact && TableVariant.compact}\n                                    actions={actionsConfig}\n                                    actionsToggle={actionsToggle}\n                                >\n                                    <TableHeader />\n                                    <TableBody />\n                                </Table>\n                            }\n                            <TableFooter\n                                isLoading={isLoading}\n                                totalItems={metadata.total_items}\n                                perPage={perPage}\n                                page={page}\n                                onSetPage={onSetPage}\n                                onPerPageSelect={onPerPageSelect}\n                                paginationOUIA={`bottom-${paginationOUIA}`}\n                            />\n                        </React.Fragment>\n                    }\n                </React.Fragment>)\n            }\n        </React.Fragment>\n    );\n};\n\nTableView.propTypes = {\n    columns: PropTypes.array,\n    onCollapse: PropTypes.func,\n    onSelect: PropTypes.func,\n    onSetPage: PropTypes.func,\n    onPerPageSelect: PropTypes.func,\n    onSort: PropTypes.func,\n    onExport: PropTypes.func,\n    remediationProvider: PropTypes.func,\n    selectedRows: PropTypes.object,\n    apply: PropTypes.func,\n    sortBy: PropTypes.object,\n    filterConfig: PropTypes.object,\n    store: PropTypes.object,\n    compact: PropTypes.bool,\n    tableOUIA: PropTypes.string,\n    paginationOUIA: PropTypes.string,\n    errorState: PropTypes.element,\n    emptyState: PropTypes.element,\n    defaultFilters: PropTypes.object,\n    searchChipLabel: PropTypes.string,\n    ToolbarButton: PropTypes.node,\n    actionsConfig: PropTypes.array,\n    isRemediationLoading: PropTypes.bool,\n    actionsToggle: PropTypes.func\n};\n\nexport default TableView;\n","import { cellWidth, expandable, sortable } from '@patternfly/react-table/dist/js';\nimport messages from '../../Messages';\nimport { intl } from '../../Utilities/IntlProvider';\n\nexport const advisoriesColumns = [\n    {\n        title: intl.formatMessage(messages.labelsColumnsName),\n        cellFormatters: [expandable],\n        transforms: [sortable, cellWidth(15)],\n        key: 'id'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsSynopsis),\n        transforms: [sortable],\n        key: 'synopsis'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsType),\n        transforms: [sortable, cellWidth(10)],\n        key: 'advisory_type_name'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsApplicableSystems),\n        transforms: [sortable, cellWidth(15)],\n        key: 'applicable_systems'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsReboot),\n        transforms: [sortable],\n        key: 'reboot_required'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsPublishDate),\n        transforms: [sortable, cellWidth(15)],\n        key: 'public_date'\n    }\n];\n\nexport const systemAdvisoriesColumns = [\n    {\n        title: intl.formatMessage(messages.labelsColumnsName),\n        cellFormatters: [expandable],\n        transforms: [sortable, cellWidth(15)],\n        key: 'id'\n    },\n    {\n        title: 'Synopsis',\n        transforms: [sortable, cellWidth(35)],\n        key: 'synopsis'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsType),\n        transforms: [sortable, cellWidth(15)],\n        key: 'advisory_type_name'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsReboot),\n        transforms: [sortable, cellWidth(20)],\n        key: 'reboot_required'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsPublishDate),\n        transforms: [sortable, cellWidth(30)],\n        key: 'public_date'\n    }\n];\n\nexport const systemPackagesColumns = [\n    {\n        title: intl.formatMessage(messages.labelsColumnsName),\n        transforms: [sortable, cellWidth(20)],\n        key: 'name'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsInstalledVersion),\n        transforms: [sortable, cellWidth(15)],\n        key: 'evra'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsLatestVersion),\n        transforms: [cellWidth(15)],\n        key: 'latest_update'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsStatus),\n        transforms: [cellWidth(10)],\n        key: 'updatable'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsSummary),\n        transforms: [sortable, cellWidth(40)],\n        key: 'summary'\n    }\n];\n\nexport const packagesColumns = [\n    {\n        key: 'name',\n        title: intl.formatMessage(messages.labelsColumnsName),\n        transforms: [sortable, cellWidth(25)]\n    },\n    {\n        key: 'systems_installed',\n        title: intl.formatMessage(messages.labelsColumnsApplicableSystems),\n        transforms: [sortable, cellWidth(15)],\n        props: {\n            width: 10\n        }\n    },\n    {\n        key: 'systems_updatable',\n        title: intl.formatMessage(messages.labelsColumnsUpgradable),\n        transforms: [sortable, cellWidth(10)],\n        props: {\n            width: 10\n        }\n    },\n    {\n        key: 'summary',\n        title: intl.formatMessage(messages.labelsColumnsSummary),\n        transforms: [sortable, cellWidth(40)],\n        props: {\n            width: 30\n        }\n    }\n];\n\nexport const cvesTableColumns = [\n    {\n        title: intl.formatMessage(messages.labelsColumnsCveID),\n        transforms: [sortable, cellWidth(40)],\n        key: 'synopsis'\n    },\n    {\n        key: 'impact',\n        title: intl.formatMessage(messages.labelsColumnsSeverity),\n        transforms: [sortable, cellWidth(30)],\n        props: {\n            width: 30\n        }\n    },\n    {\n        key: 'cvss',\n        title: intl.formatMessage(messages.labelsColumnsCVSS),\n        transforms: [sortable, cellWidth(30)],\n        props: {\n            width: 30\n        }\n    }\n];\n","import React, { useState, useMemo } from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport messages from '../../Messages';\nimport { intl } from '../../Utilities/IntlProvider';\nimport TableView from '../../PresentationalComponents/TableView/TableView';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport { cvesTableColumns } from '../../PresentationalComponents/TableView/TableViewAssets';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCves } from '../../store/Actions/Actions';\nimport propTypes from 'prop-types';\nimport { createCvesRows } from '../../Utilities/DataMappers';\nimport { sortCves } from '..//../Utilities/Helpers';\nimport { SortByDirection } from '@patternfly/react-table';\n\nconst CvesModal = ({ cveIds }) =>{\n    const dispatch = useDispatch();\n    const [cves, setCves] = useState([]);\n    const [rows, setRows] = useState([]);\n    const [page, setPage] = useState(1);\n    const [perPage, setPerPage] = useState(10);\n    const [search, setSearch] = useState(undefined);\n    const [sortBy, setSortBy] = useState({\n        direction: SortByDirection.asc,\n        index: 0\n    });\n\n    const data = useSelector(({ CvesListStore }) => CvesListStore.rows);\n\n    const status = useSelector(\n        ({ CvesListStore }) => CvesListStore.status\n    );\n\n    React.useEffect(() => {\n        dispatch(fetchCves({ cveIds }));\n    }, []);\n\n    React.useMemo(() => {\n        setRows(cves.slice((page - 1) * perPage, page * perPage));\n    }, [cves, page, perPage, sortBy]);\n\n    useMemo(() => {\n        const sortedCves = (search !== undefined && search !== '')\n            && data.filter(\n                cve => {\n                    const { attributes: { synopsis } } = cve;\n                    return synopsis && search && (synopsis.toLowerCase().includes(search.toLowerCase()));\n                }\n            ) || data;\n\n        setCves(createCvesRows((sortedCves.length !== 0 || search) && sortedCves || data));\n    }, [search, data]);\n\n    const handleClose = () => {\n        setRows(undefined);\n    };\n\n    const handleFilter = ({ search }) =>{\n        setPage(page);\n        setSearch(search);\n    };\n\n    const handlePageChange = (_, page) => {\n        setPage(page);\n    };\n\n    const handlePerPageChange = (_, perPage) => {\n        setPage(1);\n        setPerPage(perPage);\n    };\n\n    const handleSort = (_, index, direction) => {\n        const { sortBy, sortedCves } = sortCves(cves, index, direction);\n\n        setSortBy(sortBy);\n        setCves(sortedCves);\n    };\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant='small'\n                title={intl.formatMessage(messages.labelsCves)}\n                isOpen={Boolean(rows)}\n                onClose={handleClose}\n            >\n                <TableView\n                    columns={cvesTableColumns}\n                    onSetPage={handlePageChange}\n                    onPerPageSelect={handlePerPageChange}\n                    apply={handleFilter}\n                    tableOUIA={'cves-table'}\n                    paginationOUIA={'cves-pagination'}\n                    onSort={handleSort}\n                    sortBy={sortBy}\n                    store={{\n                        rows,\n                        metadata: { limit: perPage, offset: (page - 1) * perPage, total_items: cves && cves.length },\n                        status, queryParams: { filter: {}, search }\n                    }}\n                    filterConfig={{\n                        items: [\n                            searchFilter(handleFilter, search, '',\n                                intl.formatMessage(messages.labelsFiltersCvesSearchPlaceHolder))\n                        ]\n                    }}\n                />\n            </Modal>\n        </React.Fragment>\n    );\n\n};\n\nCvesModal.propTypes = {\n    cveIds: propTypes.array\n};\n\nexport default CvesModal;\n"],"names":["exports","__esModule","ExclamationCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","ExclamationCircleIcon","ExclamationTriangleIconConfig","ExclamationTriangleIcon","TableFooter","isLoading","page","perPage","onSetPage","totalItems","onPerPageSelect","paginationOUIA","className","Skeleton","fontSize","style","margin","Pagination","itemCount","widgetId","variant","PaginationVariant","ouiaId","isDisabled","propTypes","PropTypes","TableView","columns","store","rows","metadata","status","queryParams","filter","search","onCollapse","onSelect","onSort","onExport","filterConfig","sortBy","remediationProvider","selectedRows","compact","apply","tableOUIA","errorState","emptyState","defaultFilters","searchChipLabel","ToolbarButton","actionsConfig","isRemediationLoading","actionsToggle","React","convertLimitOffset","limit","offset","useRemoveFilter","deleteFilters","selectedCount","arrayFromObj","length","code","hasError","bulkSelectConfig","useBulkSelectConfig","has_systems","ErrorHandler","ErrorState","EmptyState","PrimaryToolbar","pagination","total_items","isCompact","activeFiltersConfig","filters","buildFilterChips","onDelete","deleteTitle","intl","messages","actions","AsyncRemediationButton","Object","values","isSelected","exportConfig","bulkSelect","ToolbarItem","SkeletonTable","colSize","rowSize","TableVariant","Table","cells","canSelectAll","isStickyHeader","TableHeader","TableBody","advisoriesColumns","title","cellFormatters","expandable","transforms","sortable","cellWidth","key","systemAdvisoriesColumns","systemPackagesColumns","packagesColumns","props","cvesTableColumns","CvesModal","cveIds","dispatch","useDispatch","useState","cves","setCves","setRows","setPage","setPerPage","undefined","setSearch","direction","SortByDirection","index","setSortBy","data","useSelector","CvesListStore","fetchCves","slice","useMemo","sortedCves","cve","synopsis","attributes","toLowerCase","includes","createCvesRows","handleFilter","Modal","isOpen","Boolean","onClose","_","sortCves","items","searchFilter"],"sourceRoot":""}