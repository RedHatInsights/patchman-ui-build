{"version":3,"file":"js/8118.1669755880005.93c00d7916a9cc6dfea1.js","mappings":"qXAKMA,EAAiB,SAAC,GAA2C,IAAzCC,EAAyC,EAAzCA,SAAyC,IAA/BC,oBAAAA,OAA+B,MAAT,GAAS,EAC/D,GAAiCC,EAAAA,EAAAA,IAA0BD,GAAnDE,EAAR,EAAQA,UACR,OADA,EAAmBC,UAIR,GAFAD,EAAYH,EAAW,kBAACK,EAAA,EAAD,CAAeC,YAAY,SAIhE,EAEDP,EAAeQ,UAAY,CACvBP,SAAUO,IAAAA,KACVN,oBAAqBM,IAAAA,OAGzB,U,woBCVA,IAAMC,EAAmB,SAACC,GACtB,IACeC,EAKXD,EALAE,UACAC,EAIAH,EAJAG,QACAC,EAGAJ,EAHAI,KAHJ,EAMIJ,EAFAK,MAAAA,OAJJ,MAIY,CAAC,EAJb,EAKIb,EACAQ,EADAR,oBAEEc,EAAa,CACfH,QAAAA,EACAC,KAAAA,GAGEG,EAAiB,EAAH,KACbF,GADa,IAEhBL,MAAO,EAAF,GAAOA,KAGhB,OACI,kBAAC,EAAAQ,MAAUF,EACP,kBAAC,EAAD,CAAgBd,oBAAqBA,GACjC,kBAACS,EAAcM,IAI9B,EAEDR,EAAiBD,UAAY,CACzBI,UAAWO,IAAAA,KACXN,QAASM,IAAAA,KACTL,KAAMK,IAAAA,OACNJ,MAAOI,IAAAA,QAGX,IAAMC,GAAaC,EAAAA,EAAAA,OAAK,kBACpB,+BADoB,IAMlBC,GAAUD,EAAAA,EAAAA,OAAK,kBACjB,0GADiB,IAMfE,GAAkBF,EAAAA,EAAAA,OAAK,kBACzB,yGADyB,IAMvBG,GAAeH,EAAAA,EAAAA,OAAK,kBACtB,kEADsB,IAMpBI,GAAcJ,EAAAA,EAAAA,OAAK,kBACrB,+BADqB,IAMnBK,GAAgBL,EAAAA,EAAAA,OAAK,kBACvB,yGADuB,IAMrBM,GAAYN,EAAAA,EAAAA,OAAK,kBACnB,wGADmB,IAMjBO,GAAoBC,EAAAA,EAAAA,IAAeC,EAAAA,GAAAA,WAE5BC,EAAQ,CACjB,CACIjB,KAAM,uCACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWW,GAEf,CACIT,KAAM,0BACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWY,GAEf,CACIV,KAAM,cACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWQ,GAEf,CACIN,KAAM,wBACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWW,GAEf,CACIT,KAAM,WACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWU,GAEf,CACIR,KAAM,sCACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWW,GAEf,CACIT,KAAM,yBACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWc,GAEf,CACIZ,KAAM,YACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWa,IA/CD,eAiDVG,EAAoB,CAAC,CACrBd,KAAM,aACND,SAAS,EACTX,oBAAqB,CAAC,gBACtBU,UAAWe,IACV,KAIIK,EAAS,SAACjB,GACnB,IAAMD,EAAOC,EAAMkB,WAAWC,SAASC,SACvC,OACI,kBAAC,EAAAC,SAAD,CACIC,SACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAAA,QAAD,QAIR,kBAAC,EAAAC,OAAD,KACKT,EAAMU,IAAIhC,GACX,kBAAC,EAAAiC,SAAD,CACIC,KAAK,uCACLC,GAAG,0BAEP,kBAAC,EAAAF,SAAD,CACIC,KAAK,sCACLC,GAAG,0BAEP,kBAAC,EAAA1B,MAAD,CAAO2B,OAAQ,mBAELjB,IAAsBkB,IAAKf,GAAO,SAAAgB,GAAC,OAAIA,EAAEH,KAAO9B,CAAb,MACjC,kBAAC,EAAA4B,SAAD,CAAUE,GAAI,eAHX,KAW9B,EAEDZ,EAAOxB,UAAY,CACfyB,WAAYd,IAAAA,MAAgB,CACxBe,SAAUf,IAAAA,MAAgB,CACtBgB,SAAUhB,IAAAA,SAEd6B,QAAS7B,IAAAA,O,iCCtHjB,SAAe8B,EAAAA,EAAAA,aArDH,WACR,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,CACjCC,aAAc,GACdC,eAAe,IAFnB,eAAOC,EAAP,KAAeC,EAAf,KAIMtB,GAAWuB,EAAAA,EAAAA,eACXT,GAAUU,EAAAA,EAAAA,cAoChB,OA1BAC,EAAAA,EAAAA,YAAU,WAAM,MACZC,SAASC,OAAOC,OAChBF,SAASC,OAAOE,YAAY,SAE5B,UAAIH,SAASC,cAAb,OAAI,EAAiBG,mBACjBJ,SAASC,OAAOI,GAAG,wBAAwB,YAAc,cAAXC,EAAW,EAAXA,KACpCC,EAAI,UAAGP,SAASC,cAAZ,iBAAG,EAAiBO,uBAApB,aAAG,SAAmCF,GAAM,GAAO,GAAM,GAC7DG,EAAI,UAAGT,SAASC,cAAZ,iBAAG,EAAiBO,uBAApB,iBAAG,SAAmCF,UAAtC,aAAG,EACXI,QAAO,SAAAC,GAAI,OAAKA,EAAKC,SAAS,YAAnB,IAEPC,GAAqBC,EAAAA,EAAAA,IAAiBL,EAAMF,EAAMD,aAAb,EAAaA,EAAMS,WAEzD,IAAQpB,EAAQkB,KACjBvB,GAAS0B,EAAAA,EAAAA,IAAaH,IACtBjB,EAAUiB,GACVvB,GAAS2B,EAAAA,EAAAA,IAAiBJ,EAAmBpB,eAC7CH,GAAS4B,EAAAA,EAAAA,IAAcL,EAAmBnB,gBAGjD,IAGL,IAAMyB,EA7BEnB,SAASC,OAAOI,GAAG,kBAAkB,SAAAe,GACrCA,EAAMC,UACNjC,EAAQkC,KAAR,WAAiBF,EAAMG,OAE9B,IA0BD,OAAO,kBAAMJ,GAAN,CACV,GAAE,IAGC,kBAAC,aAAD,KACI,kBAACK,EAAA,GAAD,MACA,kBAACC,EAAA,EAAD,CAAcC,QAAQ,SAClB,kBAACtD,EAAD,CAAQC,WAAY,CAAEC,SAAAA,EAAUc,QAAAA,MAI/C,G,mCCjDD,QAdA,SAAqBb,GACjB,IAAIoD,EAAU,IACRC,EAAWrD,EAASsD,MAAM,KAShC,OAPAD,EAASE,QAEW,SAAhBF,EAAS,KACTA,EAASE,QACTH,EAAU,UAGP,GAAP,OAAUA,GAAV,OAAoBC,EAAS,GAA7B,YAAmCA,EAAS,IAAM,GACrD,C,qpBCTD,IAAIG,EAAe,CACfC,QAAQ,GAICC,EAAoB,WAA6C,QAA5CC,EAA4C,uDAApCH,EAAoC,yCAApBI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5D,OAAQD,GACJ,IAAK,gCAGD,OAFAD,EAAMG,kBAAN,UAA0BD,EAAQ9B,YAAlC,aAA0B,EAAcgC,WAAWC,YACnDL,EAAMM,aAAN,UAAqBJ,EAAQ9B,YAA7B,aAAqB,EAAcgC,WAAWG,cACvCP,EACX,IAAK,sBACD,OAAO,EAAP,KACOA,GADP,IAEIF,QAAQ,EACRU,WAAY,CACR,CACIC,MAAO,QACPC,KAAM,QACN5F,UAAW,kBAAM,kBAAC,IAAD,KAAN,MAI3B,IAAK,wBAYL,IAAK,uBACD,OAAO,EAAP,KACOkF,GADP,IAEIF,QAAQ,EACRU,WAAY,CACR,CACIC,MAAO,QACPC,KAAM,QACN5F,UAAW,kBAAM,kBAAC,IAAD,KAAN,MAI3B,QACI,OAAOkF,EAElB,C,6rBC9CM,IAAIH,EAAe,CACtBzB,KAAM,CAAEgC,WAAY,CAAC,GACrBO,OAAQ,CAAEpG,WAAW,I,0tDCNlB,IAAIsF,EAAe,CACtBzB,KAAM,CAAEgC,WAAY,CAAC,GACrBO,OAAQ,CAAEpG,WAAW,I,qkBCDzB,IAAMqG,EAAe,OAAKC,EAAAA,IAAR,IAA4BC,YAAaC,EAAAA,K,gnBCC3D,IAAMlB,EAAe,CACjBmB,aAAc,CAAC,EACfF,YAAa,CACTG,KAAM,EACNC,QAAS,GACT1C,OAAQ,CACJ2C,MAAO,EAAC,GAAM,M,qkBCNnB,IAAMtB,EAAe,CACxBmB,aAAc,CAAC,EACfF,YAAa,CACTG,KAAM,EACNC,QAAS,K,qkBCJV,IAAMrB,EAAe,CACxBmB,aAAc,CAAC,EACfF,YAAa,CACTG,KAAM,EACNC,QAAS,K,qkBCPjB,IAAMrB,EAAe,CACjBuB,mBAAoB,GACpB7D,aAAc,GACdC,mBAAe6D,G,qkBCIZ,IAAMxB,EAAe,CACxByB,KAAM,GACNN,aAAc,GACdF,YAAa,CACTG,KAAM,EACNC,QAAS,GACTK,OAAQ,EACR/C,OAAQ,CAAC,GAEbmC,OAAQ,CAAEpG,WAAW,GACrBiH,SAAU,CACNC,MAAO,GACPF,OAAQ,EACRG,YAAa,GAEjBC,MAAO,CAAC,G,qkBClBL,IAAM9B,EAAe,CACxB+B,SAAU,CACNnE,OAAQ,CAAC,GAEboE,gBAAiB,GACjBlB,OAAQ,CAAC,EACTgB,MAAO,CAAC,G,WCOCG,EAAkB,CAC3BC,kBCT6B,WAAuC,IAAtC/B,EAAsC,uDAA9Ba,EAAAA,GAAmBmB,EAAW,uCAChEC,EAAW,KAAKjC,GACpB,OAAQgC,EAAO/B,MACX,KAAKiC,EAAAA,GAA0C,aAC3C,OAAOC,EAAAA,EAAAA,IAAeF,EAAUD,GAEpC,KAAKE,EAAAA,GAA0C,WAC3C,OAAOE,EAAAA,EAAAA,IAAaH,GAExB,KAAKC,EAAAA,GAA0C,YAC3C,OAAOG,EAAAA,EAAAA,IAAcJ,EAAUD,GAEnC,KAAKE,EAAAA,GACD,OAAOI,EAAAA,EAAAA,IAAcL,EAAUD,GAEnC,KAAKE,EAAAA,GACD,OAAOK,EAAAA,EAAAA,IAAWN,EAAUD,GAEhC,KAAKE,EAAAA,GACD,OAAOM,EAAAA,EAAAA,IAAWP,EAAUD,GAEhC,KAAKE,EAAAA,GACD,OAAOI,EAAAA,EAAAA,IAAcL,EAAUD,GAEnC,KAAKE,EAAAA,GAED,OADAD,EAASQ,eAAiBT,EAAO9B,QAC1B+B,EAEX,QACI,OAAOjC,EAElB,EDrBGD,kBAAAA,EAAAA,EACA2C,wBAAAA,EAAAA,EACAC,oBTV+B,WAAkC,IAAjC3C,EAAiC,uDAAzBH,EAAcmC,EAAW,uCAC7DC,EAAW,EAAH,GAAQjC,GACpB,OAAQgC,EAAO/B,MACX,KAAK2C,EAAAA,GAAyB,aAC1B,OAAO,EAAP,KACO5C,GADP,IAEIW,OAAQ,CAAEpG,WAAW,GACrB6D,KAAM4D,EAAO9B,QAAQ9B,KACrBuD,MAAO,CAAC,IAGhB,KAAKiB,EAAAA,GAAyB,WAC1B,OAAOR,EAAAA,EAAAA,IAAaH,GAExB,KAAKW,EAAAA,GAAyB,YAC1B,OAAOP,EAAAA,EAAAA,IAAcJ,EAAUD,GAEnC,KAAKa,EAAAA,GACD,OAAOhD,EAEX,QACI,OAAOG,EAElB,ESZG8C,uBAAAA,EAAAA,EACAC,kBPnB6B,WAAkC,IAAjC/C,EAAiC,uDAAzBY,EAAcoB,EAAW,uCAC3DC,EAAW,KAAKjC,GACpB,OAAQgC,EAAO/B,MACX,KAAKiC,EAAAA,GAAkC,WACnC,OAAOE,EAAAA,EAAAA,IAAaH,GAExB,KAAKC,EAAAA,GAAkC,aACnC,OAAOC,EAAAA,EAAAA,IAAeF,EAAUD,GAEpC,KAAKE,EAAAA,GAAkC,YACnC,OAAOG,EAAAA,EAAAA,IAAcJ,EAAUD,GAEnC,KAAKE,EAAAA,GAGL,KAAKA,EAAAA,GACD,OAAOI,EAAAA,EAAAA,IAAcL,EAAUD,GAEnC,QACI,OAAOhC,EAElB,EODGgD,mBRjB8B,WAAkC,IAAjChD,EAAiC,uDAAzBH,EAAcmC,EAAW,uCAC5DC,EAAW,KAAKjC,GACpB,OAAQgC,EAAO/B,MACX,KAAKgD,EAAAA,GAAwB,aACzB,OAAO,OACAjD,GADP,IAEIW,OAAQ,CAAEpG,WAAW,GACrB6D,KAAM4D,EAAO9B,QAAQ9B,KACrBuD,MAAO,CAAC,IAGhB,KAAKsB,EAAAA,GAAwB,WACzB,OAAOb,EAAAA,EAAAA,IAAaH,GAExB,KAAKgB,EAAAA,GAAwB,YACzB,OAAOZ,EAAAA,EAAAA,IAAcJ,EAAUD,GAEnC,KAAKkB,EAAAA,GACD,OAAOrD,EAEX,QACI,OAAOG,EAElB,EQLGmD,cElByB,WAAuC,IAAtCnD,EAAsC,uDAA9Ba,EAAAA,GAAmBmB,EAAW,uCAC5DC,EAAW,KAAKjC,GACpB,OAAQgC,EAAO/B,MACX,KAAKiC,EAAAA,GAA8B,aAC/B,OAAOC,EAAAA,EAAAA,IAAeF,EAAUD,GAEpC,KAAKE,EAAAA,GAA8B,WAC/B,OAAOE,EAAAA,EAAAA,IAAaH,GAExB,KAAKC,EAAAA,GAA8B,YAC/B,OAAOG,EAAAA,EAAAA,IAAcJ,EAAUD,GAEnC,KAAKE,EAAAA,GACD,OAAOI,EAAAA,EAAAA,IAAcL,EAAUD,GAEnC,QACI,OAAOhC,EAElB,EFCGoD,aNXwB,WAAkC,IAAjCpD,EAAiC,uDAAzBH,EAAcmC,EAAW,uCACtDC,EAAW,KAAKjC,GACpB,OAAQgC,EAAO/B,MAEX,KAAKiC,EAAAA,GAED,OADAD,EAASnB,aAAcuC,EAAAA,EAAAA,IAAiBpB,EAASnB,YAAakB,EAAO9B,SAC9D+B,EAEX,KAAKC,EAAAA,GACD,OAAOI,EAAAA,EAAAA,IAAcL,EAAUD,GAEnC,KAAKE,EAAAA,GAED,OADAD,EAAST,SAAWQ,EAAO9B,QACpB+B,EAEX,KAAKC,EAAAA,GAED,OADAD,EAASQ,eAAiBT,EAAO9B,QAC1B+B,EAEX,QACI,OAAOjC,EAElB,EMVGsD,oBLhB+B,WAAkC,IAAjCtD,EAAiC,uDAAzBH,EAAcmC,EAAW,uCAC7DC,EAAW,KAAKjC,GACpB,OAAQgC,EAAO/B,MAEX,KAAKiC,EAAAA,GAED,OADAD,EAASnB,aAAcuC,EAAAA,EAAAA,IAAiBpB,EAASnB,YAAakB,EAAO9B,SAC9D+B,EAEX,KAAKC,EAAAA,GACD,OAAOI,EAAAA,EAAAA,IAAcL,EAAUD,GAEnC,KAAKE,EAAAA,GACD,OAAOrC,EAEX,QACI,OAAOG,EAElB,EKAGuD,qBJhBgC,WAAkC,IAAjCvD,EAAiC,uDAAzBH,EAAcmC,EAAW,uCAC9DC,EAAW,KAAKjC,GACpB,OAAQgC,EAAO/B,MAEX,KAAKiC,EAAAA,GAED,OADAD,EAASnB,aAAcuC,EAAAA,EAAAA,IAAiBpB,EAASnB,YAAakB,EAAO9B,SAC9D+B,EAEX,KAAKC,EAAAA,GACD,OAAOI,EAAAA,EAAAA,IAAcL,EAAUD,GAEnC,KAAKE,EAAAA,GACD,OAAOrC,EAEX,QACI,OAAOG,EAElB,EIAGwD,kBHvB6B,WAAkC,IAAjCxD,EAAiC,uDAAzBH,EAAcmC,EAAW,uCAC/D,OAAQA,EAAO/B,MACX,KAAKiC,EAAAA,GACD,OAAO,OACAlC,GADP,IAEIzC,aAAcyE,EAAO9B,UAG7B,KAAKgC,EAAAA,GACD,OAAO,OACAlC,GADP,IAEIoB,mBAAoBY,EAAO9B,UAGnC,KAAKgC,EAAAA,GACD,OAAO,OACAlC,GADP,IAEIxC,cAAewE,EAAO9B,UAG9B,QACI,OAAOF,EAElB,EGCGyD,eFL4B,WAAkC,MAAjCzD,EAAiC,uDAAzBH,EAAcmC,EAAW,uCAC9D,OAAQA,EAAO/B,MACX,KAAKiC,EAAAA,GAAmC,aACpC,OAAO,OACAlC,GADP,IAEIsB,KAAI,UAAEU,EAAO9B,QAAQ9B,YAAjB,aAAE,EAAqBzB,KAAI,SAAA+G,GAAG,cAAUA,EAAItD,YAAd,IAA0BuD,GAAID,EAAIC,IAAlC,IAClCnC,SAAUQ,EAAO9B,QAAQ0D,MAAQ,CAAC,EAClCjC,MAAO,CAAC,EACRhB,OAAQ,CAAEkD,KAAM7B,EAAO9B,QAAQS,OAAQpG,WAAW,EAAOuJ,UAAU,KAG3E,KAAK5B,EAAAA,GAAmC,WACpC,OAAOE,EAAAA,EAAAA,IAAapC,GAExB,KAAKkC,EAAAA,GAAmC,YACpC,OAAOG,EAAAA,EAAAA,IAAcrC,EAAOgC,GAEhC,KAAKE,EAAAA,GACD,OAAOI,EAAAA,EAAAA,IAActC,EAAOgC,GAEhC,KAAKE,EAAAA,GACD,OAAOM,EAAAA,EAAAA,IAAWxC,EAAOgC,GAE7B,KAAKE,EAAAA,GACD,OAAOrC,EAEX,QACI,OAAOG,EAElB,EEvBG+D,wBDlBmC,WAAkC,IAAjC/D,EAAiC,uDAAzBH,EAAcmC,EAAW,uCACrE,OAAQA,EAAO/B,MACX,KAAKiC,EAAAA,GAA8B,aAAc,MAC7C,GAA0D,UAAAF,EAAO9B,eAAP,eAAgB9B,OAAQ,CAAEX,OAAQ,CAAC,GAA7F,IAAQ2C,WAAc3C,EAAtB,EAAsBA,OAAQiD,EAA9B,EAA8BA,KAAMsD,EAApC,EAAoCA,YAAeL,EAAnD,EAAmDA,GAEnD,OAAO,OACA3D,GADP,IAEI4B,SAAU,CAAElB,KAAAA,EAAMsD,YAAAA,EAAavG,OAAQA,GAAU,CAAC,EAAGkG,GAAAA,GACrDhD,OAAQ,CAAEkD,KAAM7B,EAAO9B,QAAQS,OAAQpG,WAAW,EAAOuJ,UAAU,KAI3E,KAAK5B,EAAAA,GAA8B,WAC/B,OAAOE,EAAAA,EAAAA,IAAapC,GAExB,KAAKkC,EAAAA,GAA8B,YAC/B,OAAOG,EAAAA,EAAAA,IAAcrC,EAAOgC,GAEhC,KAAKE,EAAAA,GAAA,aAAoD,MAC/C+B,GAAU,UAAAjC,EAAO9B,eAAP,eAAgB9B,OAAQ,GAExC,OAAO,OACA4B,GADP,IAEI6B,gBAAiBoC,EAAQtH,KAAI,SAAAuH,GAAM,OAAIA,aAAJ,EAAIA,EAAQC,YAAZ,MAI3C,KAAKjC,EAAAA,GACD,OAAOrC,EAEX,QACI,OAAOG,EAElB,ECdGoE,cAAeC,EAAAA,IAGNC,GAAQC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAgB1C,IAAkB2C,EAAAA,EAAAA,IAAgBC,KAAmBC,EAAAA,EAAAA,O","sources":["webpack:///./src/PresentationalComponents/WithPermission/WithPermission.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Utilities/getBaseName.js","webpack:///./src/store/Reducers/SystemDetailStore.js","webpack:///./src/store/Reducers/AdvisoryDetailStore.js","webpack:///./src/store/Reducers/PackageDetailStore.js","webpack:///./src/store/Reducers/PackagesListStore.js","webpack:///./src/store/Reducers/SystemsStore.js","webpack:///./src/store/Reducers/PackageSystemsStore.js","webpack:///./src/store/Reducers/AdvisorySystemsStore.js","webpack:///./src/store/Reducers/GlobalFilterStore.js","webpack:///./src/store/Reducers/PatchSetsReducer.js","webpack:///./src/store/Reducers/SpecificPatchSetReducer.js","webpack:///./src/store/index.js","webpack:///./src/store/Reducers/AdvisoryListStore.js","webpack:///./src/store/Reducers/CvesListStore.js"],"sourcesContent":["import React  from 'react';\nimport propTypes from 'prop-types';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst WithPermission = ({ children, requiredPermissions = [] }) => {\n    const { hasAccess, isLoading } = usePermissionsWithContext(requiredPermissions);\n    if (!isLoading) {\n        return hasAccess ? children : <NotAuthorized serviceName=\"patch\" />;\n    } else {\n        return '';\n    }\n};\n\nWithPermission.propTypes = {\n    children: propTypes.node,\n    requiredPermissions: propTypes.array\n};\n\nexport default WithPermission;\n","import PropTypes from 'prop-types';\nimport React, { lazy, Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport WithPermission from './PresentationalComponents/WithPermission/WithPermission';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { useFeatureFlag } from './Utilities/Hooks';\nimport { featureFlags } from './Utilities/constants';\nimport some from 'lodash/some';\n\nconst PermissionRouter = (route) => {\n    const {\n        component: Component,\n        isExact,\n        path,\n        props = {},\n        requiredPermissions\n    } = route;\n    const routeProps = {\n        isExact,\n        path\n    };\n\n    const componentProps = {\n        ...props,\n        route: { ...route }\n    };\n\n    return (\n        <Route {...routeProps}>\n            <WithPermission requiredPermissions={requiredPermissions}>\n                <Component {...componentProps} />\n            </WithPermission>\n        </Route>\n    );\n};\n\nPermissionRouter.propTypes = {\n    component: PropTypes.node,\n    isExact: PropTypes.bool,\n    path: PropTypes.string,\n    props: PropTypes.object\n};\n\nconst Advisories = lazy(() =>\n    import(\n        /* webpackChunkName: \"Advisories\" */ './SmartComponents/Advisories/Advisories'\n    )\n);\n\nconst Systems = lazy(() =>\n    import(\n        /* webpackChunkName: \"Systems\" */ './SmartComponents/Systems/Systems'\n    )\n);\n\nconst InventoryDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"InventoryDetail\" */ './SmartComponents/SystemDetail/InventoryDetail'\n    )\n);\n\nconst AdvisoryPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"AdvisoryyPage\" */ './SmartComponents/AdvisoryDetail/AdvisoryDetail'\n    )\n);\n\nconst PackagsPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Packages\" */ './SmartComponents/Packages/Packages'\n    )\n);\n\nconst PackageDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"PackageDetail\" */ './SmartComponents/PackageDetail/PackageDetail'\n    )\n);\n\nconst Templates = lazy(() =>\n    import(\n        /* webpackChunkName: \"PackageDetail\" */ './SmartComponents/PatchSet/PatchSet'\n    )\n);\n\nconst isPatchSetEnabled = useFeatureFlag(featureFlags.patch_set);\n\nexport const paths = [\n    {\n        path: '/advisories/:advisoryId/:inventoryId',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: InventoryDetail\n    },\n    {\n        path: '/advisories/:advisoryId',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: AdvisoryPage\n    },\n    {\n        path: '/advisories',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: Advisories\n    },\n    {\n        path: '/systems/:inventoryId',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: InventoryDetail\n    },\n    {\n        path: '/systems',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: Systems\n    },\n    {\n        path: '/packages/:packageName/:inventoryId',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: InventoryDetail\n    },\n    {\n        path: '/packages/:packageName',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: PackageDetail\n    },\n    {\n        path: '/packages',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: PackagsPage\n    },\n    ...(isPatchSetEnabled ? [{\n        path: '/templates',\n        isExact: true,\n        requiredPermissions: ['patch:*:read'],\n        component: Templates\n    }] : [])\n\n];\n\nexport const Routes = (props) => {\n    const path = props.childProps.location.pathname;\n    return (\n        <Suspense\n            fallback={\n                <Bullseye>\n                    <Spinner />\n                </Bullseye>\n            }\n        >\n            <Switch>\n                {paths.map(PermissionRouter)}\n                <Redirect\n                    from='/advisories/:advisoryId/:inventoryId'\n                    to='/systems/:inventoryId'\n                />\n                <Redirect\n                    from='/packages/:packageName/:inventoryId'\n                    to='/systems/:inventoryId'\n                />\n                <Route render={() =>\n                    (\n                        (!isPatchSetEnabled || !some(paths, p => p.to === path)) && (\n                            <Redirect to={'/advisories'} />\n                        )\n                    )\n                }\n                />\n            </Switch>\n        </Suspense>\n    );\n};\n\nRoutes.propTypes = {\n    childProps: PropTypes.shape({\n        location: PropTypes.shape({\n            pathname: PropTypes.string\n        }),\n        history: PropTypes.any\n    })\n};\n\n","import NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { isEqual } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation, withRouter } from 'react-router-dom';\nimport './App.scss';\nimport { Routes } from './Routes';\nimport { changeGlobalTags, changeProfile, globalFilter } from './store/Actions/Actions';\nimport { mapGlobalFilters } from './Utilities/Helpers';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nconst App = () => {\n    const dispatch = useDispatch();\n    const [config, setConfig] = useState({\n        selectedTags: [],\n        systemProfile: false\n    });\n    const location = useLocation();\n    const history = useHistory();\n\n    const listenNavigation = () => {\n        return  insights.chrome.on('APP_NAVIGATION', event => {\n            if (event.domEvent) {\n                history.push(`/${event.navId}`);\n            }\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp('patch');\n\n        if (insights.chrome?.globalFilterScope) {\n            insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const SIDs = insights.chrome?.mapGlobalFilter?.(data, false, true)[1];\n                const TAGs = insights.chrome?.mapGlobalFilter?.(data)\n                ?.filter(item => !item.includes('Workloads'));\n\n                const globalFilterConfig = mapGlobalFilters(TAGs, SIDs, data?.Workloads);\n\n                if (!isEqual(config, globalFilterConfig)) {\n                    dispatch(globalFilter(globalFilterConfig));\n                    setConfig(globalFilterConfig);\n                    dispatch(changeGlobalTags(globalFilterConfig.selectedTags));\n                    dispatch(changeProfile(globalFilterConfig.systemProfile));\n                }\n\n            });\n        }\n\n        const unregister = listenNavigation();\n        return () => unregister();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <NotificationPortal />\n            <RBACProvider appName=\"patch\">\n                <Routes childProps={{ location, history }} />\n            </RBACProvider>\n        </React.Fragment>\n    );\n};\n\nexport default withRouter(App);\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1] || ''}`;\n}\n\nexport default getBaseName;\n","import React from 'react';\nimport SystemDetail from '../../SmartComponents/SystemDetail/SystemDetail';\n\nlet initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const SystemDetailStore = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'FETCH_SYSTEM_DETAIL_FULFILLED':\n            state.hasThirdPartyRepo = payload.data?.attributes.third_party;\n            state.patchSetName = payload.data?.attributes.baseline_name;\n            return state;\n        case 'LOAD_ENTITY_PENDING':\n            return {\n                ...state,\n                loaded: false,\n                activeApps: [\n                    {\n                        title: 'Patch',\n                        name: 'patch',\n                        component: () => <SystemDetail />\n                    }\n                ]\n            };\n        case 'LOAD_ENTITY_FULFILLED':\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Patch',\n                        name: 'patch',\n                        component: () => <SystemDetail />\n                    }\n                ]\n            };\n        case 'LOAD_ENTITY_REJECTED':\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Patch',\n                        name: 'patch',\n                        component: () => <SystemDetail />\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n","import { CLEAR_ADVISORY_DETAILS, FETCH_ADVISORY_DETAILS } from '../ActionTypes';\nimport {\n\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const AdvisoryDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_ADVISORY_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_ADVISORY_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_ADVISORY_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_ADVISORY_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { CLEAR_PACKAGE_DETAILS, FETCH_PACKAGE_DETAILS } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const PackageDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_PACKAGE_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_PACKAGE_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_PACKAGE_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_PACKAGE_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults, packagesListDefaultFilters } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport { changeFilters, fetchFulfilled, fetchPending, fetchRejected } from './HelperReducers';\n\nconst initialStore = { ...storeListDefaults,  queryParams: packagesListDefaultFilters };\n\nexport const PackagesListStore = (state = initialStore, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_PACKAGES_LIST + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PACKAGES_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nconst initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        filter: {\n            stale: [true, false]\n        }\n    }\n};\n\n// Reducer\nexport const SystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CHANGE_SYSTEMS_METADATA:\n            newState.metadata = action.payload;\n            return newState;\n\n        case ActionTypes.TOGGLE_ALL_SELECTED:\n            newState.areAllSelected = action.payload;\n            return newState;\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n\nexport const PackageSystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_PACKAGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CLEAR_PACKAGE_SYSTEMS_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n// Reducer\n\nexport const AdvisorySystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_AFFECTED_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CLEAR_ADVISORY_SYSTEMS_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\n\nconst initialState = {\n    selectedGlobalTags: [],\n    selectedTags: [],\n    systemProfile: undefined\n};\n\nexport const GlobalFilterStore = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.CHANGE_TAGS:\n            return {\n                ...state,\n                selectedTags: action.payload\n            };\n\n        case ActionTypes.CHANGE_GLOBAL_TAGS:\n            return {\n                ...state,\n                selectedGlobalTags: action.payload\n            };\n\n        case ActionTypes.CHANGE_PROFILE:\n            return {\n                ...state,\n                systemProfile: action.payload\n            };\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    rows: [],\n    selectedRows: [],\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        offset: 0,\n        filter: {}\n    },\n    status: { isLoading: true },\n    metadata: {\n        limit: 20,\n        offset: 0,\n        total_items: 0\n    },\n    error: {}\n};\n\nexport const PatchSetsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_FULFILLED':\n            return {\n                ...state,\n                rows: action.payload.data?.map(set => ({ ...set.attributes, id: set.id })),\n                metadata: action.payload.meta || {},\n                error: {},\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_PENDING':\n            return fetchPending(state);\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_REJECTED':\n            return fetchRejected(state, action);\n\n        case ActionTypes.CHANGE_PATCH_SET_PARAMS:\n            return changeFilters(state, action);\n\n        case ActionTypes.SELECT_PATCH_SET_ROW:\n            return selectRows(state, action);\n\n        case ActionTypes.CLEAR_PATCH_SETS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport {\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport const initialState = {\n    patchSet: {\n        config: {}\n    },\n    assignedSystems: [],\n    status: {},\n    error: {}\n};\n\nexport const SpecificPatchSetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.FETCH_PATCH_SET + '_FULFILLED': {\n            const { attributes: { config, name, description }, id } = action.payload?.data || { config: {} };\n\n            return {\n                ...state,\n                patchSet: { name, description, config: config || {}, id },\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n        }\n\n        case ActionTypes.FETCH_PATCH_SET + '_PENDING':\n            return fetchPending(state);\n\n        case ActionTypes.FETCH_PATCH_SET + '_REJECTED':\n            return fetchRejected(state, action);\n\n        case ActionTypes.FETCH_PATCH_SET_SYSTEMS + `_FULFILLED`: {\n            const systems = action.payload?.data || [];\n\n            return {\n                ...state,\n                assignedSystems: systems.map(system => system?.inventory_id)\n            };\n        }\n\n        case ActionTypes.CLEAR_PATCH_SET:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { AdvisoryDetailStore } from './Reducers/AdvisoryDetailStore';\nimport { AdvisoryListStore } from './Reducers/AdvisoryListStore';\nimport { CvesListStore } from './Reducers/CvesListStore';\nimport { PackageDetailStore } from './Reducers/PackageDetailStore';\nimport { PackagesListStore } from './Reducers/PackagesListStore';\nimport { SystemAdvisoryListStore } from './Reducers/SystemAdvisoryListStore';\nimport { SystemDetailStore } from './Reducers/SystemDetailStore';\nimport { SystemPackageListStore } from './Reducers/SystemPackageListStore';\nimport { SystemsStore } from './Reducers/SystemsStore';\nimport { PackageSystemsStore } from './Reducers/PackageSystemsStore';\nimport { AdvisorySystemsStore } from './Reducers/AdvisorySystemsStore';\nimport { GlobalFilterStore } from './Reducers/GlobalFilterStore';\nimport { PatchSetsReducer } from './Reducers/PatchSetsReducer';\nimport { SpecificPatchSetReducer } from './Reducers/SpecificPatchSetReducer';\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers } from 'redux';\n\nexport const defaultReducers = {\n    AdvisoryListStore,\n    SystemDetailStore,\n    SystemAdvisoryListStore,\n    AdvisoryDetailStore,\n    SystemPackageListStore,\n    PackagesListStore,\n    PackageDetailStore,\n    CvesListStore,\n    SystemsStore,\n    PackageSystemsStore,\n    AdvisorySystemsStore,\n    GlobalFilterStore,\n    PatchSetsStore: PatchSetsReducer,\n    SpecificPatchSetReducer,\n    notifications: notificationsReducer\n};\n\nexport const store = createStore(combineReducers(defaultReducers), applyMiddleware(promiseMiddleware, notificationsMiddleware()));\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    expandRows,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const AdvisoryListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_ADVISORY_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.EXPAND_ADVISORY_ROW:\n            return expandRows(newState, action);\n\n        case ActionTypes.SELECT_ADVISORY_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TOGGLE_ALL_SELECTED:\n            newState.areAllSelected = action.payload;\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const CvesListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_CVES_INFO + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_CVES_INFO + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_CVES_INFO + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_CVES_STORE_PARAMS:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n"],"names":["WithPermission","children","requiredPermissions","usePermissionsWithContext","hasAccess","isLoading","NotAuthorized","serviceName","propTypes","PermissionRouter","route","Component","component","isExact","path","props","routeProps","componentProps","Route","PropTypes","Advisories","lazy","Systems","InventoryDetail","AdvisoryPage","PackagsPage","PackageDetail","Templates","isPatchSetEnabled","useFeatureFlag","featureFlags","paths","Routes","childProps","location","pathname","Suspense","fallback","Bullseye","Spinner","Switch","map","Redirect","from","to","render","some","p","history","withRouter","dispatch","useDispatch","useState","selectedTags","systemProfile","config","setConfig","useLocation","useHistory","useEffect","insights","chrome","init","identifyApp","globalFilterScope","on","data","SIDs","mapGlobalFilter","TAGs","filter","item","includes","globalFilterConfig","mapGlobalFilters","Workloads","globalFilter","changeGlobalTags","changeProfile","unregister","event","domEvent","push","navId","NotificationPortal","RBACProvider","appName","release","pathName","split","shift","initialState","loaded","SystemDetailStore","state","type","payload","hasThirdPartyRepo","attributes","third_party","patchSetName","baseline_name","activeApps","title","name","status","initialStore","storeListDefaults","queryParams","packagesListDefaultFilters","selectedRows","page","perPage","stale","selectedGlobalTags","undefined","rows","offset","metadata","limit","total_items","error","patchSet","assignedSystems","defaultReducers","AdvisoryListStore","action","newState","ActionTypes","fetchFulfilled","fetchPending","fetchRejected","changeFilters","expandRows","selectRows","areAllSelected","SystemAdvisoryListStore","AdvisoryDetailStore","FETCH_ADVISORY_DETAILS","CLEAR_ADVISORY_DETAILS","SystemPackageListStore","PackagesListStore","PackageDetailStore","FETCH_PACKAGE_DETAILS","CLEAR_PACKAGE_DETAILS","CvesListStore","SystemsStore","changeListParams","PackageSystemsStore","AdvisorySystemsStore","GlobalFilterStore","PatchSetsStore","set","id","meta","code","hasError","SpecificPatchSetReducer","description","systems","system","inventory_id","notifications","notificationsReducer","store","createStore","combineReducers","applyMiddleware","promiseMiddleware","notificationsMiddleware"],"sourceRoot":""}