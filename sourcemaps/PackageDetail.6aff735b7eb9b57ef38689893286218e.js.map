{"version":3,"file":"js/PackageDetail.917938f96d8ba55d24cd.js","mappings":"uNAAO,MAKP,EAJU,iCCSV,MAAMA,UAAa,YACfC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,KAAO,cACZD,KAAKE,aAAe,KAAM,CACtB,CAAC,GAA2BF,KAAKF,MAAMK,eAE3CH,KAAKI,mBAAqB,KACtB,MAAMC,EAAKL,KAAKF,OAAO,MAAEQ,EAAK,SAAEC,EAAQ,UAAEC,EAAS,QAAEC,EAAO,OAAEC,EAAM,aAAEP,EAAY,MAAEQ,EAAK,UAAEC,EAAS,gBAEpGC,EAAe,eAEfC,EAAc,kBAEdC,EAAiB,WAEjBC,GAAeX,EAAIP,GAAQ,IAAAmB,QAAOZ,EAAI,CAAC,QAAS,WAAY,YAAa,UAAW,SAAU,eAAgB,QAAS,YAAa,kBAAmB,iBAAkB,oBAAqB,eACxLa,EAAYN,EAClB,OAAQ,gBAAoBM,EAAWC,OAAOC,OAAO,CAAEX,QAASA,GAAYN,GAAgBgB,OAAOC,OAAO,CAAET,MAAOX,KAAKE,gBAAkBS,GAAS,CAAEH,WAAW,IAAAa,KAAI,UAAOC,KAAM,UAAOC,UAAUC,SAAUhB,IAA6B,WAAdI,EAAyB,CAAEa,KAAM,UAAa,CAAC,GAAI,QAAa,oBAA2BC,IAAXhB,EAAuBA,EAASV,KAAK2B,MAAMC,aAAc9B,GAChW,gBAAoB,OAAQ,CAAEU,WAAW,IAAAa,KAAI,UAAOQ,cAChD,gBAAoB,OAAQ,CAAErB,WAAW,IAAAa,KAAI,UAAOS,WAAavB,GACjED,GAASA,GAAQ,EAE7BN,KAAK+B,WAAcC,IACf,MAAM,SAAEzB,EAAQ,gBAAEM,GAAoBb,KAAKF,MAC3C,OAAIE,KAAK2B,MAAMM,iBACH,gBAAoBC,EAAA,EAAS,CAAEC,SAAUtB,EAAiBuB,QAAS7B,GAAYP,KAAKqC,gBAAgBL,IAEzGhC,KAAKqC,gBAAgBL,EAAS,EAEzChC,KAAK2B,MAAQ,CACTM,kBAAkB,EAClBL,aAAa,QAAiBhC,EAAK0C,aAE3C,CACAC,oBACIvC,KAAKwC,SAAS,CACVP,iBAAkBQ,QAAQzC,KAAKC,KAAKyC,SAAW1C,KAAKC,KAAKyC,QAAQC,YAAc3C,KAAKC,KAAKyC,QAAQE,cAEzG,CACAC,mBAAmBC,EAAYC,GAC3B,MAAMC,EAAuBP,QAAQzC,KAAKC,KAAKyC,SAAW1C,KAAKC,KAAKyC,QAAQC,YAAc3C,KAAKC,KAAKyC,QAAQE,aACxGG,EAAUd,mBAAqBe,GAC/BhD,KAAKwC,SAAS,CACVP,iBAAkBe,GAG9B,CACAX,gBAAgBY,GACZ,MAAM5C,EAAKL,KAAKF,OAAO,MAAEQ,EAAK,SAAEC,EAAQ,UAAEC,EAAS,QAAEC,EAAO,kBAAEM,EAAiB,WAAEC,EAAU,eAE3FF,EAAc,gBAEdD,EAEAoC,GAAIC,EAAM,UAAEtC,EAAS,OAAEF,EAAM,aAAEP,GAAiBE,EAAIP,GAAQ,IAAAmB,QAAOZ,EAAI,CAAC,QAAS,WAAY,YAAa,UAAW,oBAAqB,aAAc,iBAAkB,kBAAmB,KAAM,YAAa,SAAU,iBACpNa,EAAYN,EAClB,OAAQ,gBAAoBM,EAAWC,OAAOC,OAAO,CAAC,EAAIjB,GAAgB,CACtEQ,MAAOX,KAAKE,gBACZ,CAAEM,WAAW,IAAAa,KAAI,UAAOC,KAAMd,IAAeR,KAAK2B,MAAMM,kBAAoB,CAAEkB,SAAU,IAAM,QAAavD,EAAK0C,iBAAwBZ,IAAXhB,EAAuBA,EAASV,KAAK2B,MAAMC,aAAc9B,GACtL,gBAAoB,OAAQ,CAAEU,WAAW,IAAAa,KAAI,UAAOQ,cAChD,gBAAoB,OAAQ,CAAEuB,IAAKpD,KAAKC,KAAMO,WAAW,IAAAa,KAAI,UAAOS,UAAWmB,GAAIA,GAAM1C,GACzFD,GAASA,IACZU,GAAe,gBAAoB,OAAQ,CAAER,WAAW,IAAAa,KAAI,UAAOgC,cAChE,gBAAoBC,EAAA,GAAQ,CAAE7C,QAASA,EAAS8C,QAAS,QAAS,aAAcxC,EAAmBkC,GAAI,UAAUA,IAAM,kBAAmB,UAAUA,KAAMA,IAAMvC,OAAQA,GAAUK,GAC9K,gBAAoB,KAAW,CAAE,cAAe,WAChE,CACAyC,SACI,MAAM,eAAE1C,GAAmBd,KAAKF,MAChC,OAAQ,gBAAoB2D,EAAA,EAAY,MAAOzB,GAAclB,EAAiBd,KAAKI,qBAAuBJ,KAAK+B,WAAW/B,KAAKF,MAAMmD,IAAMjB,IAC/I,EAEJpC,EAAK0C,YAAc,OACnB1C,EAAK8D,aAAe,CAChB3C,kBAAmB,QACnBP,UAAW,GACXM,gBAAgB,EAChBE,YAAY,EACZH,gBAAiB,MAEjBJ,QAAUkD,IAAgB,EAC1B/C,UAAW,M,gKChFf,MAAMgD,UAAkB,YACpB/D,YAAYC,GACRC,MAAMD,GACNE,KAAK6D,WAAa,cAClB7D,KAAK8D,eAAiB,KAClB9D,KAAKwC,UAAUO,IAAc,CACzBgB,QAAShB,EAAUgB,OACnB9B,iBAAkBQ,QAAQzC,KAAK6D,WAAWnB,SAAW1C,KAAK6D,WAAWnB,QAAQC,YAAc3C,KAAK6D,WAAWnB,QAAQE,gBACpH,EAEP5C,KAAK2B,MAAQ,CACToC,OAAQ/D,KAAKF,MAAMkE,cACnB/B,kBAAkB,EAE1B,CACAM,oBACIvC,KAAKwC,SAAS,CACVP,iBAAkBQ,QAAQzC,KAAK6D,WAAWnB,SAAW1C,KAAK6D,WAAWnB,QAAQC,YAAc3C,KAAK6D,WAAWnB,QAAQE,cAE3H,CACAqB,YAAYhB,GACR,MAAM,aAAEiB,EAAY,gBAAErD,GAAoBb,KAAKF,OACzC,iBAAEmC,GAAqBjC,KAAK2B,MAClC,OAAOM,EAAoB,gBAAoB,IAAS,CAAEE,SAAUtB,EAAiBuB,QAAS8B,GAC1F,gBAAoB,OAAQ,CAAEf,SAAU,EAAGC,IAAKpD,KAAK6D,WAAYrD,WAAW,IAAAa,KAAI,UAAO8C,iBACnF,gBAAoB,OAAQ,CAAElB,GAAIA,GAAMiB,KAAoB,gBAAoB,OAAQ,CAAEd,IAAKpD,KAAK6D,WAAYrD,WAAW,IAAAa,KAAI,UAAO8C,gBAAiBlB,GAAIA,GAAMiB,EAC7K,CACAV,SACI,MAAMnD,EAAKL,KAAKF,OAAO,aAAEoE,EAAY,SAAE3D,EAAQ,UAAEC,EAAS,WAAE4D,EAAU,kBAAErD,EAAmB,aAAcsD,EAAS,QAAE5D,EAAO,oBAAE6D,EAAmB,SAAEC,EAAQ,aAAEC,EAAY,cAAEC,EAAa,OAAE/D,EAAM,cAE/LsD,EAAa,gBAAEnD,GAAoBR,EAEnCqE,GAAO,IAAAzD,QAAOZ,EAAI,CAAC,eAAgB,WAAY,YAAa,aAAc,oBAAqB,aAAc,UAAW,sBAAuB,WAAY,eAAgB,gBAAiB,SAAU,gBAAiB,qBACjN,OAAE0D,GAAW/D,KAAK2B,MAClBgD,EAAc,WAAeC,MAAMrE,GACnCsE,GAAsB,QAAaJ,EAAe,CACpDK,UAAW,WAAeF,MAAMrE,GAAYgE,IAE1CQ,EAAmB9B,IACrB,MAAM+B,EAAajB,EAEb,WAAekB,QAAQ1E,GADvB,WAAe0E,QAAQ1E,GAAU2E,MAAM,EAAGX,GAEhD,OAAQ,gBAAoB,MAAOpD,OAAOC,OAAO,CAAEZ,WAAW,IAAAa,KAAI,UAAO8D,UAAW3E,EAAW0D,GAAgB,UAAO3C,UAAU6D,UAAWC,KAAM,SAAYnB,GAAgB,CAAE,kBAAmBjB,IAASiB,GAAgB,CAAE,aAAcG,IAAc,QAAaT,EAAUtB,YAAa5B,IACzR,gBAAoB,MAAO,CAAEF,WAAW,IAAAa,KAAI,UAAOiE,gBAC/CpB,GAAgBlE,KAAKiE,YAAYhB,GACjC,gBAAoB,KAAM9B,OAAOC,OAAO,CAAEZ,WAAW,IAAAa,KAAI,UAAOkE,gBAAmBrB,GAAgB,CAAE,kBAAmBjB,IAASiB,GAAgB,CAAE,aAAcG,GAAc,CAAEgB,KAAM,QAAUX,GAC7LM,EAAUQ,KAAI,CAACC,EAAOC,IAAO,gBAAoB,KAAM,CAAElF,WAAW,IAAAa,KAAI,UAAOsE,mBAAoBC,IAAKF,GAAKD,KAC7Gd,EAAcJ,GAAa,gBAAoB,KAAM,CAAE/D,WAAW,IAAAa,KAAI,UAAOsE,oBACzE,gBAAoB,IAAM,CAAE7E,gBAAgB,EAAML,QAAUoF,IACpD7F,KAAK8D,iBACLQ,EAAoBuB,EAAM,EAC3BjF,UAAW,UAAYmD,EAASS,EAAeK,MAClET,GAAe,gBAAoB,MAAO,CAAE5D,WAAW,IAAAa,KAAI,UAAOyE,iBAC9D,gBAAoB,KAAQ,CAAEvC,QAAS,QAAS,aAAcxC,EAAmBN,QAASA,EAASwC,GAAI,gBAAgBA,IAAM,kBAAmB,gBAAgBA,KAAMA,IAAMvC,OAAQA,GAAUK,GAC1L,gBAAoB,KAAiB,CAAE,cAAe,WAAc,EAEpF,OAAuB,IAAhB4D,EAAoB,KAAQ,gBAAoB,IAAY,MAAO3C,GAAa+C,EAAgB/E,KAAKF,MAAMmD,IAAMjB,IAC5H,EAEJ4B,EAAUtB,YAAc,YACxBsB,EAAUF,aAAe,CACrBc,aAAc,YACdC,cAAe,oBACfP,aAAc,GACdF,eAAe,EACfO,SAAU,EACVH,YAAY,EAEZ3D,QAAUkD,IAAgB,EAC1BW,oBAAsBX,IAAgB,EACtC5C,kBAAmB,mBACnBF,gBAAiB,MACjB,aAAc,sB,mEClFPkF,EAKAC,E,YAJX,SAAWD,GACPA,EAAwB,MAAI,QAC5BA,EAAuB,KAAI,MAC9B,CAHD,CAGGA,IAAqBA,EAAmB,CAAC,IAE5C,SAAWC,GACPA,EAAsB,GAAI,KAC1BA,EAAwB,KAAI,MAC/B,CAHD,CAGGA,IAAsBA,EAAoB,CAAC,IACvC,MAAMC,EAAkB,gBAAoB,CAE/CC,SAAWL,IAAmB,EAC9B5C,GAAI,GACJkD,qBAAsB,GACtBC,gBAAiB,GACjBC,gBAAiB,GACjBC,UAAW,GACXC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,cAAe,MACfC,aAAc,GACdC,kBAAmB,GACnBC,iBAAkB,UAClBC,cAAe,GACfC,eAAgB,GAChBC,cAAe,OAENC,EAAuB,gBAAoB,CACpDC,WAAY,KACZC,QAAS,M,qEC9BN,MAAMC,EAAwB,CACnCC,KAAM,kBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,0XACTC,QAAS,EACTC,QAAS,GAGEC,GAAkB,OAAWP,GAE1C,G,uGCuBA,QA9BqB,SAACQ,GAA8B,IAE3BC,GAFiBC,UAAAC,OAAA,QAAArG,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,GAEpCE,cAEAC,EAAoBC,IAAAA,SACtB,kBACIC,EAAAA,GAAe3C,KAAI,SAAA4C,GAAA,IAAGC,EAAKD,EAALC,MAAY,MAAQ,CACtCC,MAD8BF,EAALE,MAEzBD,MAAOA,EAAME,WAChB,GAAE,GACP,IAMJ,MAAO,CACHD,MAAOE,EAAAA,EAAKC,cAAcC,EAAAA,EAASC,qBACnClH,KAAMmH,EAAAA,GAAsBC,SAC5BC,aAAc,CACVC,SAAU,SAAClD,EAAOwC,IARL,SAAAA,GACjBT,EAAM,CAAEoB,OAAQ,CAAEhB,cAAeK,IACrC,CAOYY,CAAaZ,EACjB,EACAa,MAAOjB,EACPI,MAAOR,EACPsB,YAAaX,EAAAA,EAAKC,cAAcC,EAAAA,EAASU,iCAGrD,C,+PC3BMC,EAAgB,SAAHjB,GAAmD,IAA/BkB,EAAWlB,EAAzBmB,WAAcD,YAAeE,EAASpB,EAAToB,UAClDC,EAAoCvB,IAAAA,SAAe,KAAKwB,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAjDG,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAEhC,OAAOJ,GAAgBpB,IAAAA,cAAC4B,EAAAA,EAAI,CAACC,WAAS,EAACpJ,MAAO,CAAEqJ,UAAW,KACvD9B,IAAAA,cAAC+B,EAAAA,EAAQ,CAACC,GAAI,EAAGC,GAAI,IACjBjC,IAAAA,cAACkC,EAAAA,GAAU,CACPC,QAASb,EACTjG,QAAS+G,EAAAA,EAAmBC,QAC5BC,UAAQ,GAERtC,IAAAA,cAACuC,EAAAA,EAAK,CAACV,WAAS,GACZ7B,IAAAA,cAACwC,EAAAA,EAAS,MACVxC,IAAAA,cAACwC,EAAAA,EAAS,CAAC/J,MAAO,CAAEgK,WAAY,aAExBrB,IAAesB,EAAAA,EAAAA,IAAoBtB,EAAaM,EAAYC,SAMxE3B,IAAAA,cAAC2C,EAAAA,SAAQ,KACzB,EAEAxB,EAAcyB,UAAY,CACtBvB,WAAYuB,IAAAA,OACZtB,UAAWsB,IAAAA,MAGf,U,6HC+CA,QAxEsB,SAAClD,EAAOoB,EAAQ+B,GAElC,IAAAtB,EAA0BvB,IAAAA,UAAe,GAAMwB,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAxC1F,EAAM2F,EAAA,GAAEsB,EAAOtB,EAAA,GACtBuB,EAAoC/C,IAAAA,SAAe,IAAGgD,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAA/CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAQrC,GAAUA,EAAOsC,eACzBC,EAAgBF,IACiB,iBAA3BrC,EAAOsC,gBAAgCtC,EAAOsC,eAAeE,MAAM,MACxExC,EAAOsC,gBACRG,EAAcV,EAAgBW,MAAQX,EAAgBW,KAAKC,OAAOnG,KAAI,SAAAoG,GAAO,MAAK,CAAEvD,MAAOuD,EAAQC,KAAM,KACxG,CAAC,CAAExD,MAAOG,EAAAA,EAAKC,cAAcC,EAAAA,EAASoD,wBAAyBC,UAAU,IA0BhF,MACI,CACItK,KAAMmH,EAAAA,GAAsBoD,OAC5B1D,MAAOE,EAAAA,EAAKC,cAAcC,EAAAA,EAASuD,kCACnC5D,MAAO,SACPS,aAAc,CACVvI,SACI2H,IAAAA,cAACgE,EAAAA,GAAMC,EAAAA,EAAAA,GAAA,CACH5I,QAASkI,EAAY1D,OAAS,GAAKqE,EAAAA,GAAcvD,UAAYuD,EAAAA,GAAcC,eAC3EC,mBAAoB9D,EAAAA,EAAKC,cAAcC,EAAAA,EAAS6D,wCAChDC,SAAU,SAACC,EAAQ1I,GAAM,OAlC5B,SAACA,GACdiH,EAAQjH,EACZ,CAgCkDyI,CAASzI,EAAO,EAC9CmC,SA/BH,SAACwG,EAAGC,GACjB,IAAMC,EAAS,CAAE5D,OAAQ,CAAC,GAC1B,IAAKuC,GAAkBA,IAAkBA,EAAcsB,SAASF,GAAa,CACzE,IAAMG,EAAmBzB,GAAmC,KAA1BrC,EAAOsC,gBAAyBtC,EAAOsC,eAAeyB,OAAO,MAAQ,GAEvGH,EAAO5D,OAAS,CAAEsC,eAAgB,GAAFyB,OAAKD,GAAgBC,OAAGJ,GAC5D,KAAO,CACH,IAAMK,EAA4C,IAAzBzB,EAAcxD,QAChCwD,EAAcvC,QAAO,SAAA6C,GAAI,OAAKA,EAAKgB,SAASF,EAAU,IAAEM,KAAK,WAAQvL,EAE5EkL,EAAO5D,OAAS,CAAEsC,eAAgB0B,EACtC,CAEApF,EAAMgF,EACV,EAkBoBM,WAAY3B,EACZxH,OAAQA,EACR,kBAAiB,uBACjBoJ,gBAAiB3E,EAAAA,EAAKC,cAAcC,EAAAA,EAAS6D,yCACxCpB,EAAaM,EAAY2B,OACvB,CAAEC,eAAgB,CAAEC,KAAM,YAAa7M,QArB1C,WACpB2K,EAAcK,EAAY1D,OAC9B,IAmB8F,CAC1EpH,MAAO,CAAE4M,UAAW,QAAS/L,SAAU,UAEtCiK,EAAYvG,MAAM,EAAGiG,GAAY3F,KAAI,SAACgI,EAAQC,GAAK,OAChDvF,IAAAA,cAACwF,EAAAA,GAAYvB,EAAAA,EAAAA,GAAA,CACTwB,WAAYH,EAAOzB,SACnBnG,IAAK6H,EACLpF,MAAOmF,EAAOnF,OACTmF,EAAOlE,aAAe,CAAEA,YAAakE,EAAOlE,cACnD,MAQ9B,E,orBChDA,IAAMsE,EAAiB,SAAHxF,GAAwB,IAAlByF,EAAWzF,EAAXyF,YAChBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MACdxE,EAA8CvB,IAAAA,SAAe,IAAGwB,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAzDsB,EAAerB,EAAA,GAAEwE,EAAkBxE,EAAA,GAE1CyE,GAAwCC,EAAAA,EAAAA,mBAAiBC,GAAA1E,EAAAA,EAAAA,GAAAwE,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAgBC,EAAAA,EAAAA,IAAkB,IAAMH,EAAa/F,YACrDmG,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAA,IAAGC,EAAQD,EAARC,SAAQ,OAAOA,aAAQ,EAARA,EAAUC,OAAQ,EAAE,GAAEC,EAAAA,IAC9DC,GAASL,EAAAA,EAAAA,KACX,SAAAM,GAAA,IAAGJ,EAAQI,EAARJ,SAAQ,OAAOA,aAAQ,EAARA,EAAUG,SAAU,CAAC,CAAC,IAEtCE,GAAaP,EAAAA,EAAAA,KACf,SAAAQ,GAAA,IAAGN,EAAQM,EAARN,SAAQ,OAAOA,aAAQ,EAARA,EAAUO,QAAS,CAAC,IAEpCC,GAAeV,EAAAA,EAAAA,KACjB,SAAAW,GAAA,IAAGT,EAAQS,EAART,SAAQ,OAAOA,aAAQ,EAARA,EAAUQ,eAAgB,EAAE,IAE5CE,GAAcZ,EAAAA,EAAAA,KAChB,SAAAa,GAAA,IAAGC,EAAmBD,EAAnBC,oBAAmB,OAAOA,aAAmB,EAAnBA,EAAqBF,cAAe,CAAC,CAAC,IAG/DG,EACoCH,EADpCG,cAAeC,EACqBJ,EADrBI,aACnB3G,EAAwCuG,EAAxCvG,OAAQ4G,EAAgCL,EAAhCK,OAAQjE,EAAwB4D,EAAxB5D,KAAMkE,EAAkBN,EAAlBM,KAAMC,EAAYP,EAAZO,QAE1BlI,GAAQmI,EAAAA,EAAAA,cAAY,SAACC,GACvBlC,GAASmC,EAAAA,EAAAA,IAA2BD,GACxC,GAAG,KAEHE,EAAAA,EAAAA,YAAU,WACNtI,EAAM4G,IACN2B,EAAAA,EAAAA,IAAqB,CAAEC,aAAcvC,IAAewC,KAAKnC,EAC7D,GAAG,KAEHgC,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHpC,GAASwC,EAAAA,EAAAA,OACTxC,GAASyC,EAAAA,EAAAA,KACb,CACJ,GAAG,IAEH,IAAAC,GAAwBC,EAAAA,EAAAA,IAAeC,EAAAA,EAAC,CAAC,EAAI1H,GAAM,IAAE4G,OAAAA,IAAUhI,GAAxD+I,GAA8DhH,EAAAA,EAAAA,GAAA6G,EAAA,GAAjD,GAEdI,EAAe,CACjB1H,MAAO,EACH2H,EAAAA,EAAAA,GAAajJ,EAAOgI,EAChBpH,EAAAA,EAAKC,cAAcC,EAAAA,EAASoI,iCAC5BtI,EAAAA,EAAKC,cAAcC,EAAAA,EAASqI,yCAEhCC,EAAAA,EAAAA,GAAapJ,EAAOoB,GACpBiI,EAAcrJ,EAAOoB,EAAQ+B,KAI/BmG,GAAsBC,EAAAA,EAAAA,UAAQ,iBAAO,CACvCC,SAASC,EAAAA,EAAAA,IAAiBrI,EAAQ4G,EAAQpH,EAAAA,EAAKC,cAAcC,EAAAA,EAASoI,kCACtEQ,SAAUX,EACb,GAAG,CAAC3H,EAAQ4G,IAMP1J,IAAWqL,EAAAA,EAAAA,IACb7C,EACAW,EACA,CACImC,SAAUC,EAAAA,GAAiBC,eAAe7D,GAC1C0B,YAAAA,EACAoC,oBAAqBC,EAAAA,GACrBC,kBAXkB,SAACC,GACvB,MAAO,GAAP/E,OAAU+E,EAAOC,eACrB,EAUQC,uBAAwBC,EAAAA,GACxB/C,WAAAA,IAIFgD,GAAgB7C,IAAgB8C,EAAAA,EAAAA,IAAa9C,GAActH,OAE3DqK,IAAWC,EAAAA,EAAAA,IAAYxE,EAAa0B,EAAa,CACnD+C,IAAKC,EAAAA,GACLC,KAAMC,EAAAA,IACP3E,GAEG4E,IAA0B3C,EAAAA,EAAAA,cAAY,SAAC4C,GACzC,IAAMC,EAAQ,GAkBd,OAhBAD,EAAUE,SAAQ,SAAA5P,GACd,IAAM6P,EAAcjF,EAAc,IAAMwB,EAAapM,GAC/C8P,EAAU,iBAAHhG,OAAoB+F,GAC3BrF,EAAQmF,EAAMI,WAAU,SAAAC,GAAI,OAAIA,EAAKhQ,KAAO8P,CAAO,KAE1C,IAAXtF,EACAmF,EAAMnF,GAAOiB,QAAQwE,KAAKjQ,GACnB6P,GACPF,EAAMM,KAAK,CACPjQ,GAAI8P,EACJzJ,YAAawJ,EACbpE,QAAS,CAACzL,IAGtB,MAEO2P,EAAM7K,QAAS,CAAEoL,OAAQP,EACpC,GAAG,CAACvD,IAEE+D,IAAaC,EAAAA,EAAAA,GAAeC,EAAAA,GAAqB1L,EAAO,CAAEiG,YAAAA,GAAeU,GAQzEgF,IAAmBC,EAAAA,EAAAA,IAAoBtB,GAAehM,GAAU,CAAEuN,YAAavE,GAAcR,GAEnG,OACIxG,IAAAA,cAACA,IAAAA,SAAc,KACV8G,EAAO0E,UAAYxL,IAAAA,cAACyL,EAAAA,EAAY,CAACC,KAAM5E,EAAO4E,QAC3C1L,IAAAA,cAAC2L,EAAAA,EAAc,CACXC,sBAAuB,CAAC,iBAAkB,UAAW,UACrDC,YAAU,EACVC,aAAW,EACXC,gBAAc,EACdC,YAAa,CAAEC,KAAK,EAAMC,MAAM,EAAOC,iBAAiB,GACxDC,QAASC,EAAAA,GACTC,UAAQ,EACRC,YAAarB,GACbsB,cAAe,CACXC,YAAa,CACT/E,OAAAA,EACA5G,OAAAA,EACA0G,cAAAA,EACAC,aAAAA,IAGRiF,gBAAiB,CACbjH,WAA2B,IAAfuB,GAEhB2F,OAAQ,SAAAC,GAA2B,IAAxBC,EAAiBD,EAAjBC,kBACP/G,EAAMgH,gBAAeC,EAAAA,EAAAA,IAAevE,EAAAA,EAAC,CAAC,EAC/BwE,EAAAA,GACAH,GACCI,EAAAA,EAAAA,IAAyBZ,EAAAA,GAAuBa,EAAAA,KAChDC,EAAAA,EAAAA,IAAiB,CAAExF,KAAAA,EAAMC,QAAAA,EAASnE,KAAAA,EAAMiE,OAAAA,GAAUpB,MAI9D,EACA8G,WAAY,CACRC,cAAc,EACdhS,QAASiS,EAAAA,EAAaC,QAASjV,UAAW,wBAAyBkV,gBAAgB,GAEvF9E,aAAcA,EACdM,oBAAqBA,EACrByE,WAAYzP,IAAYqN,GACxBqC,aAAc,CACVjI,WAA2B,IAAfuB,EACZhJ,SAAUkM,IAEdyD,gBACI3N,IAAAA,cAAC4N,EAAAA,EAAsB,CACnBC,oBAtDQ,WAAH,OAASC,EAAAA,EAAAA,KAClCC,EAAAA,EAAAA,IAA0B5G,GAC1BqD,GACAwD,EAAAA,GAAsB,QACzB,EAmDuBvI,WAAkD,KAAtCwE,EAAAA,EAAAA,IAAa9C,GAActH,WAOnE,EAEA6F,EAAe9C,UAAY,CACvB+C,YAAa/C,IAAAA,QAGjB,U,+lBCtHA,SAvEsB,WAClB,IAAMgD,GAAWC,EAAAA,EAAAA,MACTF,GAAgBsI,EAAAA,EAAAA,aAAhBtI,YACFuI,GAASC,EAAAA,EAAAA,MAEfnG,EAAAA,EAAAA,YAAU,WACNrC,GAAeuI,EAAOE,oBAAoB,GAADvJ,OAAIc,EAAW,OAAAd,OAAMvE,EAAAA,EAAKC,cAAcC,EAAAA,EAAS6N,gBAAe,cAAAxJ,OACvGyJ,EAAAA,IACN,GAAG,CAACJ,EAAQvI,IAEZ,IAAM4I,GAAiB9H,EAAAA,EAAAA,KACnB,SAAAvG,GAAqB,OAAAA,EAAlBsO,kBAA2C,IAE5C1H,GAASL,EAAAA,EAAAA,KACX,SAAAC,GAAqB,OAAAA,EAAlB8H,mBAA4C1H,MAAM,IAGzD9G,IAAAA,WAAgB,WACZ4F,GAAS6I,EAAAA,EAAAA,IAAoB,CAAE9I,YAAAA,IACnC,GAAG,IAEH3F,IAAAA,WAAgB,WACZ,OAAO,WACH4F,GAAS8I,EAAAA,EAAAA,OACT9I,GAAS+I,EAAAA,EAAAA,MACb,CACJ,GAAG,IAEH,IAAQtN,EAAekN,EAAe/K,KAA9BnC,WAER,OACIrB,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAC4O,EAAAA,EAAM,CACHC,MAAOlJ,EACPmJ,WAAY,kBACZC,YAAa,CACT,CACIF,MAAOvO,EAAAA,EAAKC,cAAcC,EAAAA,EAASwO,qBACnCC,GAAI,YACJC,UAAU,GAEd,CACIL,MAAOlJ,EACPuJ,UAAU,KAGpBpI,EAAO0E,SAAWxL,IAAAA,cAACmP,EAAAA,EAAW,MACxBnP,IAAAA,cAACmB,EAAa,CACVE,WAAUmH,EAAAA,EAAA,GAAOnH,GAAU,IAAEtG,GAAI4K,IACjCrE,UAAWwF,EAAOxF,aAG9BtB,IAAAA,cAACoP,EAAAA,GAAI,KACDpP,IAAAA,cAACuC,EAAAA,EAAK,CAACV,WAAS,GACZ7B,IAAAA,cAACwC,EAAAA,EAAS,KACNxC,IAAAA,cAACqP,EAAAA,EAAW,KACRrP,IAAAA,cAACsP,EAAAA,EAAI,CAAC5W,UAAW6W,EAAAA,EAAaC,IAAKlP,EAAAA,EAAKC,cAAcC,EAAAA,EAASiP,0BAGvEzP,IAAAA,cAACwC,EAAAA,EAAS,KACLsE,EAAO0E,UACDxL,IAAAA,cAAEyL,EAAAA,EAAY,QACR3E,EAAOxF,WAAatB,IAAAA,cAAC0F,EAAc,CAACC,YAAaA,OAOtF,C","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_chip__text_MaxWidth.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Chip/Chip.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Chip/ChipGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/dropdownConstants.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/times-circle-icon.js","webpack:///./src/PresentationalComponents/Filters/StatusFilter.js","webpack:///./src/PresentationalComponents/PackageHeader/PackageHeader.js","webpack:///./src/PresentationalComponents/Filters/VersionFilter.js","webpack:///./src/SmartComponents/PackageSystems/PackageSystems.js","webpack:///./src/SmartComponents/PackageDetail/PackageDetail.js"],"sourcesContent":["export const c_chip__text_MaxWidth = {\n  \"name\": \"--pf-v5-c-chip__text--MaxWidth\",\n  \"value\": \"16ch\",\n  \"var\": \"var(--pf-v5-c-chip__text--MaxWidth)\"\n};\nexport default c_chip__text_MaxWidth;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip.mjs';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport cssChipTextMaxWidth from '@patternfly/react-tokens/dist/esm/c_chip__text_MaxWidth';\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n        this.span = React.createRef();\n        this.setChipStyle = () => ({\n            [cssChipTextMaxWidth.name]: this.props.textMaxWidth\n        });\n        this.renderOverflowChip = () => {\n            const _a = this.props, { badge, children, className, onClick, ouiaId, textMaxWidth, style, component, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            tooltipPosition, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            isOverflowChip, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            closeBtnAriaLabel, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            isReadOnly } = _a, props = __rest(_a, [\"badge\", \"children\", \"className\", \"onClick\", \"ouiaId\", \"textMaxWidth\", \"style\", \"component\", \"tooltipPosition\", \"isOverflowChip\", \"closeBtnAriaLabel\", \"isReadOnly\"]);\n            const Component = component;\n            return (React.createElement(Component, Object.assign({ onClick: onClick }, (textMaxWidth && Object.assign({ style: this.setChipStyle() }, style)), { className: css(styles.chip, styles.modifiers.overflow, className) }, (component === 'button' ? { type: 'button' } : {}), getOUIAProps('OverflowChip', ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props),\n                React.createElement(\"span\", { className: css(styles.chipContent) },\n                    React.createElement(\"span\", { className: css(styles.chipText) }, children),\n                    badge && badge)));\n        };\n        this.renderChip = (randomId) => {\n            const { children, tooltipPosition } = this.props;\n            if (this.state.isTooltipVisible) {\n                return (React.createElement(Tooltip, { position: tooltipPosition, content: children }, this.renderInnerChip(randomId)));\n            }\n            return this.renderInnerChip(randomId);\n        };\n        this.state = {\n            isTooltipVisible: false,\n            ouiaStateId: getDefaultOUIAId(Chip.displayName)\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            isTooltipVisible: Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)\n        });\n    }\n    componentDidUpdate(_prevProps, prevState) {\n        const nextIsTooltipVisible = Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth);\n        if (prevState.isTooltipVisible !== nextIsTooltipVisible) {\n            this.setState({\n                isTooltipVisible: nextIsTooltipVisible\n            });\n        }\n    }\n    renderInnerChip(id) {\n        const _a = this.props, { badge, children, className, onClick, closeBtnAriaLabel, isReadOnly, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isOverflowChip, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        tooltipPosition, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        id: idProp, component, ouiaId, textMaxWidth } = _a, props = __rest(_a, [\"badge\", \"children\", \"className\", \"onClick\", \"closeBtnAriaLabel\", \"isReadOnly\", \"isOverflowChip\", \"tooltipPosition\", \"id\", \"component\", \"ouiaId\", \"textMaxWidth\"]);\n        const Component = component;\n        return (React.createElement(Component, Object.assign({}, (textMaxWidth && {\n            style: this.setChipStyle()\n        }), { className: css(styles.chip, className) }, (this.state.isTooltipVisible && { tabIndex: 0 }), getOUIAProps(Chip.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props),\n            React.createElement(\"span\", { className: css(styles.chipContent) },\n                React.createElement(\"span\", { ref: this.span, className: css(styles.chipText), id: id }, children),\n                badge && badge),\n            !isReadOnly && (React.createElement(\"span\", { className: css(styles.chipActions) },\n                React.createElement(Button, { onClick: onClick, variant: \"plain\", \"aria-label\": closeBtnAriaLabel, id: `remove_${id}`, \"aria-labelledby\": `remove_${id} ${id}`, ouiaId: ouiaId || closeBtnAriaLabel },\n                    React.createElement(TimesIcon, { \"aria-hidden\": \"true\" }))))));\n    }\n    render() {\n        const { isOverflowChip } = this.props;\n        return (React.createElement(GenerateId, null, (randomId) => (isOverflowChip ? this.renderOverflowChip() : this.renderChip(this.props.id || randomId))));\n    }\n}\nChip.displayName = 'Chip';\nChip.defaultProps = {\n    closeBtnAriaLabel: 'close',\n    className: '',\n    isOverflowChip: false,\n    isReadOnly: false,\n    tooltipPosition: 'top',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (_e) => undefined,\n    component: 'div'\n};\nexport { Chip };\n//# sourceMappingURL=Chip.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip-group.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Chip } from './Chip';\nimport { Tooltip } from '../Tooltip';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport { fillTemplate } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { getOUIAProps } from '../../helpers';\nclass ChipGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.headingRef = React.createRef();\n        this.toggleCollapse = () => {\n            this.setState((prevState) => ({\n                isOpen: !prevState.isOpen,\n                isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)\n            }));\n        };\n        this.state = {\n            isOpen: this.props.defaultIsOpen,\n            isTooltipVisible: false\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)\n        });\n    }\n    renderLabel(id) {\n        const { categoryName, tooltipPosition } = this.props;\n        const { isTooltipVisible } = this.state;\n        return isTooltipVisible ? (React.createElement(Tooltip, { position: tooltipPosition, content: categoryName },\n            React.createElement(\"span\", { tabIndex: 0, ref: this.headingRef, className: css(styles.chipGroupLabel) },\n                React.createElement(\"span\", { id: id }, categoryName)))) : (React.createElement(\"span\", { ref: this.headingRef, className: css(styles.chipGroupLabel), id: id }, categoryName));\n    }\n    render() {\n        const _a = this.props, { categoryName, children, className, isClosable, closeBtnAriaLabel, 'aria-label': ariaLabel, onClick, onOverflowChipClick, numChips, expandedText, collapsedText, ouiaId, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        defaultIsOpen, tooltipPosition } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        rest = __rest(_a, [\"categoryName\", \"children\", \"className\", \"isClosable\", \"closeBtnAriaLabel\", 'aria-label', \"onClick\", \"onOverflowChipClick\", \"numChips\", \"expandedText\", \"collapsedText\", \"ouiaId\", \"defaultIsOpen\", \"tooltipPosition\"]);\n        const { isOpen } = this.state;\n        const numChildren = React.Children.count(children);\n        const collapsedTextResult = fillTemplate(collapsedText, {\n            remaining: React.Children.count(children) - numChips\n        });\n        const renderChipGroup = (id) => {\n            const chipArray = !isOpen\n                ? React.Children.toArray(children).slice(0, numChips)\n                : React.Children.toArray(children);\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.chipGroup, className, categoryName && styles.modifiers.category), role: \"group\" }, (categoryName && { 'aria-labelledby': id }), (!categoryName && { 'aria-label': ariaLabel }), getOUIAProps(ChipGroup.displayName, ouiaId)),\n                React.createElement(\"div\", { className: css(styles.chipGroupMain) },\n                    categoryName && this.renderLabel(id),\n                    React.createElement(\"ul\", Object.assign({ className: css(styles.chipGroupList) }, (categoryName && { 'aria-labelledby': id }), (!categoryName && { 'aria-label': ariaLabel }), { role: \"list\" }, rest),\n                        chipArray.map((child, i) => (React.createElement(\"li\", { className: css(styles.chipGroupListItem), key: i }, child))),\n                        numChildren > numChips && (React.createElement(\"li\", { className: css(styles.chipGroupListItem) },\n                            React.createElement(Chip, { isOverflowChip: true, onClick: (event) => {\n                                    this.toggleCollapse();\n                                    onOverflowChipClick(event);\n                                }, component: \"button\" }, isOpen ? expandedText : collapsedTextResult))))),\n                isClosable && (React.createElement(\"div\", { className: css(styles.chipGroupClose) },\n                    React.createElement(Button, { variant: \"plain\", \"aria-label\": closeBtnAriaLabel, onClick: onClick, id: `remove_group_${id}`, \"aria-labelledby\": `remove_group_${id} ${id}`, ouiaId: ouiaId || closeBtnAriaLabel },\n                        React.createElement(TimesCircleIcon, { \"aria-hidden\": \"true\" }))))));\n        };\n        return numChildren === 0 ? null : (React.createElement(GenerateId, null, (randomId) => renderChipGroup(this.props.id || randomId)));\n    }\n}\nChipGroup.displayName = 'ChipGroup';\nChipGroup.defaultProps = {\n    expandedText: 'Show Less',\n    collapsedText: '${remaining} more',\n    categoryName: '',\n    defaultIsOpen: false,\n    numChips: 3,\n    isClosable: false,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (_e) => undefined,\n    onOverflowChipClick: (_e) => undefined,\n    closeBtnAriaLabel: 'Close chip group',\n    tooltipPosition: 'top',\n    'aria-label': 'Chip group category'\n};\nexport { ChipGroup };\n//# sourceMappingURL=ChipGroup.js.map","import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import { createIcon } from '../createIcon';\n\nexport const TimesCircleIconConfig = {\n  name: 'TimesCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const TimesCircleIcon = createIcon(TimesCircleIconConfig);\n\nexport default TimesCircleIcon;","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport React from 'react';\nimport { updatableTypes } from '../../Utilities/constants';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { update_status: currentValue } = currentFilter;\n\n    const updatableTypesMap = React.useMemo(\n        () =>\n            updatableTypes.map(({ value, label }) => ({\n                label,\n                value: value.toString()\n            })),\n        []\n    );\n    const filterByType = value => {\n        apply({ filter: { update_status: value } });\n    };\n\n    return {\n        label: intl.formatMessage(messages.labelsFiltersStatus),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByType(value);\n            },\n            items: updatableTypesMap,\n            value: currentValue,\n            placeholder: intl.formatMessage(messages.labelsColumnsStatusPlaceholder)\n        }\n    };\n};\n\nexport default statusFilter;\n","import { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { Fragment } from 'react';\nimport { truncateDescription } from '../../Utilities/Helpers';\nimport WithLoader, { WithLoaderVariants } from '../WithLoader/WithLoader';\n\nconst PackageHeader = ({ attributes: { description }, isLoading }) => {\n    const [wordLength, setWordLength] = React.useState(1000);\n\n    return description && (<Grid hasGutter style={{ minHeight: 50 }}>\n        <GridItem md={8} sm={12}>\n            <WithLoader\n                loading={isLoading}\n                variant={WithLoaderVariants.spinner}\n                centered\n            >\n                <Stack hasGutter>\n                    <StackItem />\n                    <StackItem style={{ whiteSpace: 'pre-line' }}>\n                        {\n                            description && truncateDescription(description, wordLength, setWordLength)\n                        }\n                    </StackItem>\n                </Stack>\n            </WithLoader>\n        </GridItem>\n    </Grid>) || <Fragment/>;\n};\n\nPackageHeader.propTypes = {\n    attributes: propTypes.object,\n    isLoading: propTypes.bool\n};\n\nexport default PackageHeader;\n","import React from 'react';\nimport {\n    Select,\n    SelectOption,\n    SelectVariant\n} from '@patternfly/react-core/deprecated';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst VersionFilter = (apply, filter, packageVersions) => {\n\n    const [isOpen, setOpen] = React.useState(false);\n    const [numOptions, setNumOptions] = React.useState(10);\n\n    const isSet = filter && filter.installed_evra;\n    const installedEvra = isSet &&\n        (typeof(filter.installed_evra) === 'string' && filter.installed_evra.split(',')\n        || filter.installed_evra);\n    const versionList = packageVersions.data && packageVersions.data.sort().map(version => ({ value: version.evra }))\n        || [{ value: intl.formatMessage(messages.textNoVersionAvailable), disabled: true }];\n\n    const onToggle = (isOpen) => {\n        setOpen(isOpen);\n    };\n\n    const onSelect = (_, selection) => {\n        const config = { filter: {} };\n        if (!installedEvra || (installedEvra && !installedEvra.includes(selection))) {\n            const existingVersions = isSet && filter.installed_evra !== '' && filter.installed_evra.concat(',') || '';\n\n            config.filter = { installed_evra: `${existingVersions}${selection}` };\n        } else {\n            const filteredOutEvras = installedEvra.length !== 1\n                && installedEvra.filter(evra => !evra.includes(selection)).join(',') || undefined;\n\n            config.filter = { installed_evra: filteredOutEvras };\n        }\n\n        apply(config);\n    };\n\n    const onViewMoreClick = () => {\n        setNumOptions(versionList.length);\n    };\n\n    return (\n        {\n            type: conditionalFilterType.custom,\n            label: intl.formatMessage(messages.labelsFiltersPackageVersionTitle),\n            value: 'custom',\n            filterValues: {\n                children: (\n                    <Select\n                        variant={versionList.length > 0 && SelectVariant.checkbox || SelectVariant.typeaheadMulti}\n                        typeAheadAriaLabel={intl.formatMessage(messages.labelsFiltersPackageVersionPlaceholder)}\n                        onToggle={(_event, isOpen) => onToggle(isOpen)}\n                        onSelect={onSelect}\n                        selections={installedEvra}\n                        isOpen={isOpen}\n                        aria-labelledby={'patch-version-filter'}\n                        placeholderText={intl.formatMessage(messages.labelsFiltersPackageVersionPlaceholder)}\n                        {...(numOptions < versionList.lengt\n                            && { loadingVariant: { text: 'View more', onClick: onViewMoreClick } })}\n                        style={{ maxHeight: '400px', overflow: 'auto' }}\n                    >\n                        {versionList.slice(0, numOptions).map((option, index) => (\n                            <SelectOption\n                                isDisabled={option.disabled}\n                                key={index}\n                                value={option.value}\n                                {...(option.description && { description: option.description })}\n                            />\n                        ))}\n                    </Select>\n                )\n            }\n        }\n    );\n\n};\n\nexport default VersionFilter;\n","import { TableVariant } from '@patternfly/react-table';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport propTypes from 'prop-types';\nimport React, { useCallback, useMemo, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector, useStore } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport messages from '../../Messages';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/StatusFilter';\nimport versionFilter from '../../PresentationalComponents/Filters/VersionFilter';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\nimport { defaultReducers } from '../../store';\nimport { changePackageSystemsParams, clearInventoryReducer,\n    clearPackageSystemsReducer, systemSelectAction } from '../../store/Actions/Actions';\nimport { inventoryEntitiesReducer, modifyPackageSystems } from '../../store/Reducers/InventoryEntitiesReducer';\nimport {\n    exportPackageSystemsCSV,\n    exportPackageSystemsJSON, fetchPackageSystems,\n    fetchPackageVersions\n} from '../../Utilities/api';\nimport { remediationIdentifiers } from '../../Utilities/constants';\nimport {\n    arrayFromObj, buildFilterChips, decodeQueryparams, filterRemediatablePackageSystems,\n    persistantParams, remediationProviderWithPairs, removeUndefinedObjectKeys\n} from '../../Utilities/Helpers';\nimport { useBulkSelectConfig, useGetEntities, useOnExport, useRemoveFilter,\n    useOnSelect, ID_API_ENDPOINTS } from '../../Utilities/hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport AsyncRemediationButton from '../Remediation/AsyncRemediationButton';\nimport { packageSystemsColumns } from '../Systems/SystemsListAssets';\nimport { combineReducers } from 'redux';\n\nconst PackageSystems = ({ packageName }) => {\n    const dispatch = useDispatch();\n    const store = useStore();\n    const [packageVersions, setPackageVersions] = React.useState([]);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const decodedParams = decodeQueryparams('?' + searchParams.toString());\n    const systems = useSelector(({ entities }) => entities?.rows || [], shallowEqual);\n    const status = useSelector(\n        ({ entities }) => entities?.status || {}\n    );\n    const totalItems = useSelector(\n        ({ entities }) => entities?.total || 0\n    );\n    const selectedRows = useSelector(\n        ({ entities }) => entities?.selectedRows || []\n    );\n    const queryParams = useSelector(\n        ({ PackageSystemsStore }) => PackageSystemsStore?.queryParams || {}\n    );\n\n    const { systemProfile, selectedTags,\n        filter, search, sort, page, perPage } = queryParams;\n\n    const apply = useCallback((params) => {\n        dispatch(changePackageSystemsParams(params));\n    }, []);\n\n    useEffect(() => {\n        apply(decodedParams);\n        fetchPackageVersions({ package_name: packageName }).then(setPackageVersions);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearInventoryReducer());\n            dispatch(clearPackageSystemsReducer());\n        };\n    }, []);\n\n    const [deleteFilters] = useRemoveFilter({ ...filter, search }, apply);\n\n    const filterConfig = {\n        items: [\n            searchFilter(apply, search,\n                intl.formatMessage(messages.labelsFiltersSystemsSearchTitle),\n                intl.formatMessage(messages.labelsFiltersSystemsSearchPlaceholder)\n            ),\n            statusFilter(apply, filter),\n            versionFilter(apply, filter, packageVersions)\n        ]\n    };\n\n    const activeFiltersConfig = useMemo(() => ({\n        filters: buildFilterChips(filter, search, intl.formatMessage(messages.labelsFiltersSystemsSearchTitle)),\n        onDelete: deleteFilters\n    }), [filter, search]);\n\n    const constructFilename = (system) => {\n        return `${system.available_evra}`;\n    };\n\n    const onSelect = useOnSelect(\n        systems,\n        selectedRows,\n        {\n            endpoint: ID_API_ENDPOINTS.packageSystems(packageName),\n            queryParams,\n            selectionDispatcher: systemSelectAction,\n            constructFilename,\n            apiResponseTransformer: filterRemediatablePackageSystems,\n            totalItems\n        }\n    );\n\n    const selectedCount = selectedRows && arrayFromObj(selectedRows).length;\n\n    const onExport = useOnExport(packageName, queryParams, {\n        csv: exportPackageSystemsCSV,\n        json: exportPackageSystemsJSON\n    }, dispatch);\n\n    const prepareRemediationPairs = useCallback((systemIDs) => {\n        const pairs = [];\n\n        systemIDs.forEach(id => {\n            const packageEvra = packageName + '-' + selectedRows[id];\n            const issueID = `patch-package:${packageEvra}`;\n            const index = pairs.findIndex(pair => pair.id === issueID);\n\n            if (index !== -1) {\n                pairs[index].systems.push(id);\n            } else if (packageEvra) {\n                pairs.push({\n                    id: issueID,\n                    description: packageEvra,\n                    systems: [id]\n                });\n            }\n        });\n\n        return pairs.length ? { issues: pairs } : false;\n    }, [selectedRows]);\n\n    const getEntites = useGetEntities(fetchPackageSystems, apply, { packageName }, setSearchParams);\n\n    const remediationDataProvider = () => remediationProviderWithPairs(\n        removeUndefinedObjectKeys(selectedRows),\n        prepareRemediationPairs,\n        remediationIdentifiers.package\n    );\n\n    const bulkSelectConfig = useBulkSelectConfig(selectedCount, onSelect, { total_items: totalItems }, systems);\n\n    return (\n        <React.Fragment>\n            {status.hasError && <ErrorHandler code={status.code} /> || (\n                <InventoryTable\n                    disableDefaultColumns={['system_profile', 'updated', 'groups']}\n                    isFullView\n                    autoRefresh\n                    initialLoading\n                    hideFilters={{ all: true, tags: false, operatingSystem: false }}\n                    columns={packageSystemsColumns}\n                    showTags\n                    getEntities={getEntites}\n                    customFilters={{\n                        patchParams: {\n                            search,\n                            filter,\n                            systemProfile,\n                            selectedTags\n                        }\n                    }}\n                    paginationProps={{\n                        isDisabled: totalItems === 0\n                    }}\n                    onLoad={({ mergeWithEntities }) => {\n                        store.replaceReducer(combineReducers({\n                            ...defaultReducers,\n                            ...mergeWithEntities(\n                                inventoryEntitiesReducer(packageSystemsColumns, modifyPackageSystems),\n                                persistantParams({ page, perPage, sort, search }, decodedParams)\n                            )\n                        }));\n\n                    }}\n                    tableProps={{\n                        canSelectAll: false,\n                        variant: TableVariant.compact, className: 'patchCompactInventory', isStickyHeader: true\n                    }}\n                    filterConfig={filterConfig}\n                    activeFiltersConfig={activeFiltersConfig}\n                    bulkSelect={onSelect && bulkSelectConfig}\n                    exportConfig={{\n                        isDisabled: totalItems === 0,\n                        onSelect: onExport\n                    }}\n                    dedicatedAction={(\n                        <AsyncRemediationButton\n                            remediationProvider={remediationDataProvider}\n                            isDisabled={arrayFromObj(selectedRows).length === 0}\n                        />\n                    )}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nPackageSystems.propTypes = {\n    packageName: propTypes.string\n};\n\nexport default PackageSystems;\n","import { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport messages from '../../Messages';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport PackageHeader from '../../PresentationalComponents/PackageHeader/PackageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport PackageSystems from '../../SmartComponents/PackageSystems/PackageSystems';\nimport { clearPackageDetailStore, fetchPackageDetails } from '../../store/Actions/Actions';\nimport { intl } from '../../Utilities/IntlProvider';\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { DEFAULT_PATCH_TITLE } from '../../Utilities/constants';\n\nconst PackageDetail = () => {\n    const dispatch = useDispatch();\n    const { packageName } = useParams();\n    const chrome = useChrome();\n\n    useEffect(()=>{\n        packageName && chrome.updateDocumentTitle(`${packageName} - ${intl.formatMessage(messages.titlesPackages)}\n        ${DEFAULT_PATCH_TITLE}`);\n    }, [chrome, packageName]);\n\n    const packageDetails = useSelector(\n        ({ PackageDetailStore }) => PackageDetailStore\n    );\n    const status = useSelector(\n        ({ PackageDetailStore }) => PackageDetailStore.status\n    );\n\n    React.useEffect(() => {\n        dispatch(fetchPackageDetails({ packageName }));\n    }, []);\n\n    React.useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n            dispatch(clearPackageDetailStore());\n        };\n    }, []);\n\n    const { attributes } = packageDetails.data;\n\n    return (\n        <React.Fragment>\n            <Header\n                title={packageName}\n                headerOUIA={'package-details'}\n                breadcrumbs={[\n                    {\n                        title: intl.formatMessage(messages.titlesPatchPackages),\n                        to: '/packages',\n                        isActive: false\n                    },\n                    {\n                        title: packageName,\n                        isActive: true\n                    }\n                ]}\n            >{status.hasError ? <Unavailable/> :\n                    <PackageHeader\n                        attributes={{ ...attributes, id: packageName }}\n                        isLoading={status.isLoading}\n                    />}\n            </Header>\n            <Main>\n                <Stack hasGutter>\n                    <StackItem>\n                        <TextContent>\n                            <Text component={TextVariants.h2}>{intl.formatMessage(messages.titlesAffectedSystems)}</Text>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem>\n                        {status.hasError\n                            && < ErrorHandler />\n                                || (!status.isLoading && <PackageSystems packageName={packageName}></PackageSystems>)\n                        }\n                    </StackItem>\n                </Stack>\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default PackageDetail;\n"],"names":["Chip","constructor","props","super","this","span","setChipStyle","textMaxWidth","renderOverflowChip","_a","badge","children","className","onClick","ouiaId","style","component","tooltipPosition","isOverflowChip","closeBtnAriaLabel","isReadOnly","__rest","Component","Object","assign","css","chip","modifiers","overflow","type","undefined","state","ouiaStateId","chipContent","chipText","renderChip","randomId","isTooltipVisible","Tooltip","position","content","renderInnerChip","displayName","componentDidMount","setState","Boolean","current","offsetWidth","scrollWidth","componentDidUpdate","_prevProps","prevState","nextIsTooltipVisible","id","idProp","tabIndex","ref","chipActions","Button","variant","render","GenerateId","defaultProps","_e","ChipGroup","headingRef","toggleCollapse","isOpen","defaultIsOpen","renderLabel","categoryName","chipGroupLabel","isClosable","ariaLabel","onOverflowChipClick","numChips","expandedText","collapsedText","rest","numChildren","count","collapsedTextResult","remaining","renderChipGroup","chipArray","toArray","slice","chipGroup","category","role","chipGroupMain","chipGroupList","map","child","i","chipGroupListItem","key","event","chipGroupClose","DropdownPosition","DropdownDirection","DropdownContext","onSelect","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","menuComponent","DropdownArrowContext","keyHandler","sendRef","TimesCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","TimesCircleIcon","apply","currentValue","arguments","length","update_status","updatableTypesMap","React","updatableTypes","_ref","value","label","toString","intl","formatMessage","messages","labelsFiltersStatus","conditionalFilterType","checkbox","filterValues","onChange","filter","filterByType","items","placeholder","labelsColumnsStatusPlaceholder","PackageHeader","description","attributes","isLoading","_React$useState","_React$useState2","_slicedToArray","wordLength","setWordLength","Grid","hasGutter","minHeight","GridItem","md","sm","WithLoader","loading","WithLoaderVariants","spinner","centered","Stack","StackItem","whiteSpace","truncateDescription","Fragment","propTypes","packageVersions","setOpen","_React$useState3","_React$useState4","numOptions","setNumOptions","isSet","installed_evra","installedEvra","split","versionList","data","sort","version","evra","textNoVersionAvailable","disabled","custom","labelsFiltersPackageVersionTitle","Select","_extends","SelectVariant","typeaheadMulti","typeAheadAriaLabel","labelsFiltersPackageVersionPlaceholder","onToggle","_event","_","selection","config","includes","existingVersions","concat","filteredOutEvras","join","selections","placeholderText","lengt","loadingVariant","text","maxHeight","option","index","SelectOption","isDisabled","PackageSystems","packageName","dispatch","useDispatch","store","useStore","setPackageVersions","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","decodedParams","decodeQueryparams","systems","useSelector","_ref2","entities","rows","shallowEqual","status","_ref3","totalItems","_ref4","total","selectedRows","_ref5","queryParams","_ref6","PackageSystemsStore","systemProfile","selectedTags","search","page","perPage","useCallback","params","changePackageSystemsParams","useEffect","fetchPackageVersions","package_name","then","clearInventoryReducer","clearPackageSystemsReducer","_useRemoveFilter","useRemoveFilter","_objectSpread","deleteFilters","filterConfig","searchFilter","labelsFiltersSystemsSearchTitle","labelsFiltersSystemsSearchPlaceholder","statusFilter","versionFilter","activeFiltersConfig","useMemo","filters","buildFilterChips","onDelete","useOnSelect","endpoint","ID_API_ENDPOINTS","packageSystems","selectionDispatcher","systemSelectAction","constructFilename","system","available_evra","apiResponseTransformer","filterRemediatablePackageSystems","selectedCount","arrayFromObj","onExport","useOnExport","csv","exportPackageSystemsCSV","json","exportPackageSystemsJSON","prepareRemediationPairs","systemIDs","pairs","forEach","packageEvra","issueID","findIndex","pair","push","issues","getEntites","useGetEntities","fetchPackageSystems","bulkSelectConfig","useBulkSelectConfig","total_items","hasError","ErrorHandler","code","InventoryTable","disableDefaultColumns","isFullView","autoRefresh","initialLoading","hideFilters","all","tags","operatingSystem","columns","packageSystemsColumns","showTags","getEntities","customFilters","patchParams","paginationProps","onLoad","_ref7","mergeWithEntities","replaceReducer","combineReducers","defaultReducers","inventoryEntitiesReducer","modifyPackageSystems","persistantParams","tableProps","canSelectAll","TableVariant","compact","isStickyHeader","bulkSelect","exportConfig","dedicatedAction","AsyncRemediationButton","remediationProvider","remediationProviderWithPairs","removeUndefinedObjectKeys","remediationIdentifiers","useParams","chrome","useChrome","updateDocumentTitle","titlesPackages","DEFAULT_PATCH_TITLE","packageDetails","PackageDetailStore","fetchPackageDetails","clearNotifications","clearPackageDetailStore","Header","title","headerOUIA","breadcrumbs","titlesPatchPackages","to","isActive","Unavailable","Main","TextContent","Text","TextVariants","h2","titlesAffectedSystems"],"sourceRoot":""}