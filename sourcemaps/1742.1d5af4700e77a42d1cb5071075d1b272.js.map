{"version":3,"file":"js/1742.6828ec02738cca490cec.js","mappings":"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","sources":["webpack:///./src/Utilities/NavigateToSystem.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/store/Reducers/SystemDetailStore.js","webpack:///./src/store/Reducers/AdvisoryDetailStore.js","webpack:///./src/store/Reducers/PackageDetailStore.js","webpack:///./src/store/Reducers/PackagesListStore.js","webpack:///./src/store/Reducers/SystemsStore.js","webpack:///./src/store/Reducers/PackageSystemsStore.js","webpack:///./src/store/Reducers/AdvisorySystemsStore.js","webpack:///./src/store/Reducers/GlobalFilterStore.js","webpack:///./src/store/Reducers/PatchSetsReducer.js","webpack:///./src/store/Reducers/PatchSetDetailStore.js","webpack:///./src/store/Reducers/PatchSetDetailSystemsStore.js","webpack:///./src/store/Reducers/SpecificPatchSetReducer.js","webpack:///./src/store/index.js","webpack:///./src/store/Reducers/AdvisoryListStore.js","webpack:///./src/store/Reducers/CvesListStore.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\n\nexport const NavigateToSystem = () => {\n    const { inventoryId } = useParams();\n\n    return (\n        <Navigate to={`../systems/${inventoryId}`} />\n    );\n};\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport { Navigate, Outlet, Route, Routes } from 'react-router-dom';\nimport { NavigateToSystem } from './Utilities/NavigateToSystem';\n\nconst PermissionRoute = ({ requiredPermissions = [] }) => {\n    const { hasAccess, isLoading } = usePermissionsWithContext(requiredPermissions);\n    if (!isLoading) {\n        return hasAccess ? <Outlet /> : <NotAuthorized serviceName=\"patch\" />;\n    } else {\n        return '';\n    }\n};\n\nPermissionRoute.propTypes = {\n    requiredPermissions: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.string\n    ])\n};\n\nconst Advisories = lazy(() =>\n    import(\n        /* webpackChunkName: \"Advisories\" */ './SmartComponents/Advisories/Advisories'\n    )\n);\n\nconst Systems = lazy(() =>\n    import(\n        /* webpackChunkName: \"Systems\" */ './SmartComponents/Systems/Systems'\n    )\n);\n\nconst InventoryDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"InventoryDetail\" */ './SmartComponents/SystemDetail/InventoryDetail'\n    )\n);\n\nconst AdvisoryPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"AdvisoryPage\" */ './SmartComponents/AdvisoryDetail/AdvisoryDetail'\n    )\n);\n\nconst PackagesPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Packages\" */ './SmartComponents/Packages/Packages'\n    )\n);\n\nconst PackageDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"PackageDetail\" */ './SmartComponents/PackageDetail/PackageDetail'\n    )\n);\n\nconst Templates = lazy(() =>\n    import(\n        /* webpackChunkName: \"Templates\" */ './SmartComponents/PatchSet/PatchSet'\n    )\n);\n\nconst TemplateDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"TemplateDetail\" */ './SmartComponents/PatchSetDetail/PatchSetDetail'\n    )\n);\n\nconst PatchRoutes = () => {\n    const generalPermissions = ['patch:*:*', 'patch:*:read'];\n    const [hasSystems, setHasSystems] = useState(true);\n    const INVENTORY_TOTAL_FETCH_URL = '/api/inventory/v1/hosts';\n\n    useEffect(() => {\n        try {\n            axios\n            .get(`${INVENTORY_TOTAL_FETCH_URL}?page=1&per_page=1`)\n            .then(({ data }) => {\n                setHasSystems(data.total > 0);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }, [hasSystems]);\n\n    return (\n        <Suspense\n            fallback={\n                <Bullseye>\n                    <Spinner />\n                </Bullseye>\n            }\n        >\n            <Routes>\n                {!hasSystems ? (\n                    <Route path='*' element={\n                        <AsyncComponent\n                            appId=\"content_management_zero_state\"\n                            appName=\"dashboard\"\n                            module=\"./AppZeroState\"\n                            scope=\"dashboard\"\n                            ErrorComponent={<div>Error state</div>}\n                            app=\"Content_management\"\n                        />\n                    } />\n                )\n                    : (\n                        <Route element={<PermissionRoute requiredPermissions={generalPermissions} />}>\n                            <Route path='/advisories' element={<Advisories />} />\n                            <Route path='/advisories/:advisoryId/:inventoryId'\n                                element={<NavigateToSystem />} />\n                            <Route path='/advisories/:advisoryId' element={<AdvisoryPage />} />\n                            <Route path='/systems' element={<Systems />} />\n                            <Route path='/systems/:inventoryId' element={<InventoryDetail />} />\n                            <Route path='/packages' element={<PackagesPage />} />\n                            <Route path='/packages/:packageName' element={<PackageDetail />} />\n                            <Route path='/packages/:packageName/:inventoryId'\n                                element={<NavigateToSystem />} />\n                            <Route path='/templates' element={<Templates />} />\n                            <Route path='/templates/:templateName' element={<TemplateDetail />} />\n                            <Route path='*' element={<Navigate to=\"advisories\" />} />\n                        </Route>\n\n                    )\n                }\n            </Routes>\n        </Suspense>\n    );\n};\n\nexport default PatchRoutes;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\nimport { changeGlobalTags, changeProfile, globalFilter } from './store/Actions/Actions';\nimport { mapGlobalFilters } from './Utilities/Helpers';\nimport './App.scss';\nimport Routes from './Routes';\n\nconst App = () => {\n    const dispatch = useDispatch();\n    const chrome = useChrome();\n    const [config, setConfig] = useState({\n        selectedTags: [],\n        systemProfile: false\n    });\n\n    useEffect(() => {\n        chrome?.globalFilterScope?.('insights');\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n            chrome?.enablePackagesDebug();\n        }\n\n        if (chrome?.globalFilterScope) {\n            chrome?.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const SIDs = chrome?.mapGlobalFilter?.(data, false, true)[1];\n                const TAGs = chrome?.mapGlobalFilter?.(data)\n                ?.filter(item => !item.includes('Workloads'));\n\n                const globalFilterConfig = mapGlobalFilters(TAGs, SIDs, data?.Workloads);\n\n                if (JSON.stringify(config) !== JSON.stringify(globalFilterConfig)) {\n                    dispatch(globalFilter(globalFilterConfig));\n                    setConfig(globalFilterConfig);\n                    dispatch(changeGlobalTags(globalFilterConfig.selectedTags));\n                    dispatch(changeProfile(globalFilterConfig.systemProfile));\n                }\n\n            });\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <NotificationPortal />\n            <RBACProvider appName=\"patch\">\n                <Routes />\n            </RBACProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","let initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const SystemDetailStore = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'FETCH_SYSTEM_DETAIL_FULFILLED':\n            return {\n                ...state,\n                hasThirdPartyRepo: payload.data?.attributes.third_party,\n                patchSetName: payload.data?.attributes.baseline_name,\n                patchSetId: payload.data?.attributes.baseline_id\n            };\n        case 'LOAD_ENTITY_PENDING':\n            return {\n                ...state,\n                loaded: false\n            };\n        case 'LOAD_ENTITY_FULFILLED':\n            return {\n                ...state,\n                loaded: true\n            };\n        case 'LOAD_ENTITY_REJECTED':\n            return {\n                ...state,\n                loaded: true\n            };\n        default:\n            return state;\n    }\n};\n","import { CLEAR_ADVISORY_DETAILS, FETCH_ADVISORY_DETAILS } from '../ActionTypes';\nimport {\n\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const AdvisoryDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_ADVISORY_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_ADVISORY_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_ADVISORY_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_ADVISORY_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { CLEAR_PACKAGE_DETAILS, FETCH_PACKAGE_DETAILS } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const PackageDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_PACKAGE_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_PACKAGE_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_PACKAGE_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_PACKAGE_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults, packagesListDefaultFilters } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport { changeFilters, fetchFulfilled, fetchPending, fetchRejected } from './HelperReducers';\n\nconst initialStore = { ...storeListDefaults,  queryParams: packagesListDefaultFilters };\n\nexport const PackagesListStore = (state = initialStore, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_PACKAGES_LIST + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PACKAGES_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nconst initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        filter: {\n            stale: [true, false]\n        }\n    }\n};\n\n// Reducer\nexport const SystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CHANGE_SYSTEMS_METADATA:\n            newState.metadata = action.payload;\n            return newState;\n\n        case ActionTypes.TOGGLE_ALL_SELECTED:\n            newState.areAllSelected = action.payload;\n            return newState;\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n\nexport const PackageSystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_PACKAGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CLEAR_PACKAGE_SYSTEMS_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n// Reducer\n\nexport const AdvisorySystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_AFFECTED_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CLEAR_ADVISORY_SYSTEMS_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\n\nconst initialState = {\n    selectedGlobalTags: [],\n    selectedTags: [],\n    systemProfile: undefined\n};\n\nexport const GlobalFilterStore = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.CHANGE_TAGS:\n            return {\n                ...state,\n                selectedTags: action.payload\n            };\n\n        case ActionTypes.CHANGE_GLOBAL_TAGS:\n            return {\n                ...state,\n                selectedGlobalTags: action.payload\n            };\n\n        case ActionTypes.CHANGE_PROFILE:\n            return {\n                ...state,\n                systemProfile: action.payload\n            };\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    rows: [],\n    selectedRows: [],\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        offset: 0,\n        filter: {}\n    },\n    status: { isLoading: true },\n    metadata: {\n        limit: 20,\n        offset: 0,\n        total_items: 0\n    },\n    error: {}\n};\n\nexport const PatchSetsReducer = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_FULFILLED':\n            return {\n                ...newState,\n                rows: action.payload.data?.map(set => ({ ...set.attributes, id: set.id })),\n                metadata: action.payload.meta || {},\n                error: {},\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PATCH_SET_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.SELECT_PATCH_SET_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.CLEAR_PATCH_SETS:\n            return initialState;\n\n        default:\n            return newState;\n    }\n};\n","import { FETCH_TEMPLATE_DETAIL, CLEAR_TEMPLATE_DETAIL } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\nexport const PatchSetDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case FETCH_TEMPLATE_DETAIL + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_TEMPLATE_DETAIL + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_TEMPLATE_DETAIL + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_TEMPLATE_DETAIL:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { changeListParams } from '../../Utilities/Helpers';\nimport {\n    CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS,\n    TRIGGER_GLOBAL_FILTER,\n    CHANGE_PATCH_SET_DETAIL_SYSTEMS_METADATA,\n    FETCH_PATCH_SET_SYSTEMS_NO_FILTERS\n} from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\n\nconst initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    },\n    templateHasSystemsLoading: true,\n    templateHasSystems: null\n};\n\nexport const PatchSetDetailSystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case CHANGE_PATCH_SET_DETAIL_SYSTEMS_METADATA:\n            newState.metadata = action.payload;\n            return newState;\n\n        case FETCH_PATCH_SET_SYSTEMS_NO_FILTERS + '_PENDING':\n            return {\n                ...state,\n                templateHasSystemsLoading: true,\n                templateHasSystems: null\n            };\n\n        case FETCH_PATCH_SET_SYSTEMS_NO_FILTERS + '_FULFILLED':\n            return {\n                ...state,\n                templateHasSystemsLoading: false,\n                templateHasSystems: action.payload.data.length > 0\n            };\n\n        case FETCH_PATCH_SET_SYSTEMS_NO_FILTERS + '_REJECTED':\n            return {\n                ...state,\n                templateHasSystemsLoading: false,\n                // if we set this to true, Inventory table is shown, which has better error handling\n                templateHasSystems: true\n            };\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\nimport {\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport const initialState = {\n    patchSet: {\n        config: {}\n    },\n    assignedSystems: [],\n    status: {},\n    error: {},\n    takenBaselineNames: [],\n    takenBaselineNamesLoading: true\n};\n\nexport const SpecificPatchSetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.FETCH_PATCH_SET + '_FULFILLED': {\n            const { attributes: { config, name, description }, id } = action.payload?.data || { config: {} };\n\n            return {\n                ...state,\n                patchSet: { name, description, config: config || {}, id },\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n        }\n\n        case ActionTypes.FETCH_PATCH_SET + '_PENDING':\n            return fetchPending(state);\n\n        case ActionTypes.FETCH_PATCH_SET + '_REJECTED':\n            return fetchRejected(state, action);\n\n        case ActionTypes.FETCH_PATCH_SET_SYSTEMS + `_FULFILLED`: {\n            const systems = action.payload?.data || [];\n\n            return {\n                ...state,\n                assignedSystems: systems.map(system => system?.inventory_id)\n            };\n        }\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS_NAMES + '_PENDING': {\n            return {\n                ...state,\n                takenBaselineNamesLoading: true\n            };\n        }\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS_NAMES + '_FULFILLED': {\n            return {\n                ...state,\n                takenBaselineNames: action.payload,\n                takenBaselineNamesLoading: false\n            };\n        }\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS_NAMES + '_REJECTED': {\n            return {\n                ...state,\n                takenBaselineNames: [],\n                takenBaselineNamesLoading: false\n            };\n        }\n\n        case ActionTypes.CLEAR_PATCH_SET:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { AdvisoryDetailStore } from './Reducers/AdvisoryDetailStore';\nimport { AdvisoryListStore } from './Reducers/AdvisoryListStore';\nimport { CvesListStore } from './Reducers/CvesListStore';\nimport { PackageDetailStore } from './Reducers/PackageDetailStore';\nimport { PackagesListStore } from './Reducers/PackagesListStore';\nimport { SystemAdvisoryListStore } from './Reducers/SystemAdvisoryListStore';\nimport { SystemDetailStore } from './Reducers/SystemDetailStore';\nimport { SystemPackageListStore } from './Reducers/SystemPackageListStore';\nimport { SystemsStore } from './Reducers/SystemsStore';\nimport { PackageSystemsStore } from './Reducers/PackageSystemsStore';\nimport { AdvisorySystemsStore } from './Reducers/AdvisorySystemsStore';\nimport { GlobalFilterStore } from './Reducers/GlobalFilterStore';\nimport { PatchSetsReducer } from './Reducers/PatchSetsReducer';\nimport { PatchSetDetailStore } from './Reducers/PatchSetDetailStore';\nimport { PatchSetDetailSystemsStore } from './Reducers/PatchSetDetailSystemsStore';\nimport { SpecificPatchSetReducer } from './Reducers/SpecificPatchSetReducer';\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers, compose } from 'redux';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const defaultReducers = {\n    AdvisoryListStore,\n    SystemDetailStore,\n    SystemAdvisoryListStore,\n    AdvisoryDetailStore,\n    SystemPackageListStore,\n    PackagesListStore,\n    PackageDetailStore,\n    CvesListStore,\n    SystemsStore,\n    PackageSystemsStore,\n    AdvisorySystemsStore,\n    GlobalFilterStore,\n    PatchSetsStore: PatchSetsReducer,\n    PatchSetDetailStore,\n    PatchSetDetailSystemsStore,\n    SpecificPatchSetReducer,\n    notifications: notificationsReducer\n};\n\nexport const store = createStore(\n    combineReducers(defaultReducers),\n    composeEnhancers(applyMiddleware(promiseMiddleware, notificationsMiddleware()))\n);\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    expandRows,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const AdvisoryListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_ADVISORY_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.EXPAND_ADVISORY_ROW:\n            return expandRows(newState, action);\n\n        case ActionTypes.SELECT_ADVISORY_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TOGGLE_ALL_SELECTED:\n            newState.areAllSelected = action.payload;\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const CvesListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_CVES_INFO + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_CVES_INFO + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_CVES_INFO + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_CVES_STORE_PARAMS:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n"],"names":["NavigateToSystem","inventoryId","useParams","React","Navigate","to","concat","PermissionRoute","_ref","_ref$requiredPermissi","requiredPermissions","_usePermissionsWithCo","usePermissionsWithContext","hasAccess","isLoading","Outlet","NotAuthorized","serviceName","propTypes","PropTypes","Advisories","lazy","Systems","InventoryDetail","AdvisoryPage","PackagesPage","PackageDetail","Templates","TemplateDetail","_useState","useState","_useState2","_slicedToArray","hasSystems","setHasSystems","useEffect","axios","then","_ref2","data","total","e","console","log","Suspense","fallback","Bullseye","Spinner","Routes","Route","element","path","AsyncComponent","appId","appName","module","scope","ErrorComponent","app","dispatch","useDispatch","chrome","useChrome","selectedTags","systemProfile","config","setConfig","_chrome$globalFilterS","globalFilterScope","call","on","_chrome$mapGlobalFilt","_chrome$mapGlobalFilt2","_chrome$mapGlobalFilt3","SIDs","mapGlobalFilter","TAGs","filter","item","includes","globalFilterConfig","mapGlobalFilters","Workloads","JSON","stringify","globalFilter","changeGlobalTags","changeProfile","NotificationPortal","RBACProvider","initialState","loaded","SystemDetailStore","_payload$data","_payload$data2","_payload$data3","state","arguments","length","undefined","type","payload","_objectSpread","hasThirdPartyRepo","attributes","third_party","patchSetName","baseline_name","patchSetId","baseline_id","status","initialStore","storeListDefaults","queryParams","packagesListDefaultFilters","selectedRows","page","perPage","stale","selectedGlobalTags","rows","offset","metadata","limit","total_items","error","templateHasSystemsLoading","templateHasSystems","patchSet","assignedSystems","takenBaselineNames","takenBaselineNamesLoading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","defaultReducers","AdvisoryListStore","action","newState","ActionTypes","fetchFulfilled","fetchPending","fetchRejected","changeFilters","expandRows","selectRows","areAllSelected","SystemAdvisoryListStore","AdvisoryDetailStore","FETCH_ADVISORY_DETAILS","CLEAR_ADVISORY_DETAILS","SystemPackageListStore","PackagesListStore","PackageDetailStore","FETCH_PACKAGE_DETAILS","CLEAR_PACKAGE_DETAILS","CvesListStore","SystemsStore","changeListParams","PackageSystemsStore","AdvisorySystemsStore","GlobalFilterStore","PatchSetsStore","_action$payload$data","map","set","id","meta","code","hasError","PatchSetDetailStore","FETCH_TEMPLATE_DETAIL","CLEAR_TEMPLATE_DETAIL","PatchSetDetailSystemsStore","CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS","TRIGGER_GLOBAL_FILTER","CHANGE_PATCH_SET_DETAIL_SYSTEMS_METADATA","FETCH_PATCH_SET_SYSTEMS_NO_FILTERS","SpecificPatchSetReducer","_action$payload","_ref$attributes","name","description","_action$payload2","systems","system","inventory_id","notifications","notificationsReducer","store","createStore","combineReducers","applyMiddleware","promiseMiddleware","notificationsMiddleware"],"sourceRoot":""}