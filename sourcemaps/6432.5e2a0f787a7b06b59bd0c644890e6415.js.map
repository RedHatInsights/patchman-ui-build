{"version":3,"file":"js/6432.8e5935eb848c598efcae.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/WithPermission/WithPermission.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/store/Reducers/SystemDetailStore.js","webpack:///./src/store/Reducers/AdvisoryDetailStore.js","webpack:///./src/store/Reducers/PackageDetailStore.js","webpack:///./src/store/Reducers/PackagesListStore.js","webpack:///./src/store/Reducers/SystemsStore.js","webpack:///./src/store/Reducers/PackageSystemsStore.js","webpack:///./src/store/Reducers/AdvisorySystemsStore.js","webpack:///./src/store/Reducers/GlobalFilterStore.js","webpack:///./src/store/Reducers/PatchSetsReducer.js","webpack:///./src/store/Reducers/PatchSetDetailStore.js","webpack:///./src/store/Reducers/PatchSetDetailSystemsStore.js","webpack:///./src/store/Reducers/SpecificPatchSetReducer.js","webpack:///./src/store/index.js","webpack:///./src/store/Reducers/AdvisoryListStore.js","webpack:///./src/store/Reducers/CvesListStore.js"],"sourcesContent":["import React  from 'react';\nimport propTypes from 'prop-types';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst WithPermission = ({ children, requiredPermissions = [] }) => {\n    const { hasAccess, isLoading } = usePermissionsWithContext(requiredPermissions);\n    if (!isLoading) {\n        return hasAccess ? children : <NotAuthorized serviceName=\"patch\" />;\n    } else {\n        return '';\n    }\n};\n\nWithPermission.propTypes = {\n    children: propTypes.node,\n    requiredPermissions: propTypes.array\n};\n\nexport default WithPermission;\n","import PropTypes from 'prop-types';\nimport React, { lazy, Suspense, useCallback, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport WithPermission from './PresentationalComponents/WithPermission/WithPermission';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport some from 'lodash/some';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport axios from 'axios';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst PermissionRouter = (route, index) => {\n    const {\n        component: Component,\n        isExact,\n        path,\n        props = {},\n        requiredPermissions\n    } = route;\n    const routeProps = {\n        isExact,\n        path\n    };\n\n    const componentProps = {\n        ...props,\n        route: { ...route }\n    };\n\n    return (\n        <Route {...routeProps} key={index}>\n            <WithPermission requiredPermissions={requiredPermissions}>\n                <Component {...componentProps} />\n            </WithPermission>\n        </Route>\n    );\n};\n\nPermissionRouter.propTypes = {\n    component: PropTypes.node,\n    isExact: PropTypes.bool,\n    path: PropTypes.string,\n    props: PropTypes.object\n};\n\nconst Advisories = lazy(() =>\n    import(\n        /* webpackChunkName: \"Advisories\" */ './SmartComponents/Advisories/Advisories'\n    )\n);\n\nconst Systems = lazy(() =>\n    import(\n        /* webpackChunkName: \"Systems\" */ './SmartComponents/Systems/Systems'\n    )\n);\n\nconst InventoryDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"InventoryDetail\" */ './SmartComponents/SystemDetail/InventoryDetail'\n    )\n);\n\nconst AdvisoryPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"AdvisoryPage\" */ './SmartComponents/AdvisoryDetail/AdvisoryDetail'\n    )\n);\n\nconst PackagesPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Packages\" */ './SmartComponents/Packages/Packages'\n    )\n);\n\nconst PackageDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"PackageDetail\" */ './SmartComponents/PackageDetail/PackageDetail'\n    )\n);\n\nconst Templates = lazy(() =>\n    import(\n        /* webpackChunkName: \"Templates\" */ './SmartComponents/PatchSet/PatchSet'\n    )\n);\n\nconst TemplateDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"TemplateDetail\" */ './SmartComponents/PatchSetDetail/PatchSetDetail'\n    )\n);\n\nexport const Routes = () => {\n    const history = useHistory();\n    const chrome = useChrome();\n\n    const generalPermissions = ['patch:*:*', 'patch:*:read'];\n    const [hasSystems, setHasSystems] = useState(true);\n    const INVENTORY_TOTAL_FETCH_URL = '/api/inventory/v1/hosts';\n\n    const paths = [\n        {\n            path: '/advisories/:advisoryId/:inventoryId',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: InventoryDetail\n        },\n        {\n            path: '/advisories/:advisoryId',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: AdvisoryPage\n        },\n        {\n            path: '/advisories',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: Advisories\n        },\n        {\n            path: '/systems/:inventoryId',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: InventoryDetail\n        },\n        {\n            path: '/systems',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: Systems\n        },\n        {\n            path: '/packages/:packageName/:inventoryId',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: InventoryDetail\n        },\n        {\n            path: '/packages/:packageName',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: PackageDetail\n        },\n        {\n            path: '/packages',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: PackagesPage\n        },\n        {\n            path: '/templates/:templateName',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: TemplateDetail\n        },\n        {\n            path: '/templates',\n            isExact: true,\n            requiredPermissions: generalPermissions,\n            component: Templates\n        }\n    ];\n\n    const listenNavigation = useCallback(() => {\n        if (chrome) {\n            return chrome.on('APP_NAVIGATION', event => {\n                if (event.domEvent) {\n                    history.push(`/${event.navId}`);\n                }\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        const unregister = listenNavigation();\n        return () => unregister();\n    }, []);\n\n    useEffect(() => {\n        try {\n            axios\n            .get(`${INVENTORY_TOTAL_FETCH_URL}?page=1&per_page=1`)\n            .then(({ data }) => {\n                setHasSystems(data.total > 0);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }, [hasSystems]);\n\n    return (\n        <Suspense\n            fallback={\n                <Bullseye>\n                    <Spinner />\n                </Bullseye>\n            }\n        >\n            {!hasSystems ? (\n                <AsyncComponent\n                    appId=\"content_management_zero_state\"\n                    appName=\"dashboard\"\n                    module=\"./AppZeroState\"\n                    scope=\"dashboard\"\n                    ErrorComponent={<div>Error state</div>}\n                    app=\"Content_management\"\n                />)\n                :\n                <Switch>\n                    {paths.map(PermissionRouter)}\n                    <Redirect\n                        from='/advisories/:advisoryId/:inventoryId'\n                        to='/systems/:inventoryId'\n                    />\n                    <Redirect\n                        from='/packages/:packageName/:inventoryId'\n                        to='/systems/:inventoryId'\n                    />\n                    <Route render={() =>\n                        (\n                            (!some(paths, p => p.to === history.location.pathname)) && (\n                                <Redirect to={'/advisories'} />\n                            )\n                        )\n                    }\n                    />\n                </Switch>\n            }\n        </Suspense>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\nimport { changeGlobalTags, changeProfile, globalFilter } from './store/Actions/Actions';\nimport { mapGlobalFilters } from './Utilities/Helpers';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport './App.scss';\nimport { Routes } from './Routes';\n\nconst App = () => {\n    const dispatch = useDispatch();\n    const chrome = useChrome();\n    const [config, setConfig] = useState({\n        selectedTags: [],\n        systemProfile: false\n    });\n\n    useEffect(() => {\n        chrome?.globalFilterScope?.('insights');\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n            chrome?.enablePackagesDebug();\n        }\n\n        if (chrome?.globalFilterScope) {\n            chrome?.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const SIDs = chrome?.mapGlobalFilter?.(data, false, true)[1];\n                const TAGs = chrome?.mapGlobalFilter?.(data)\n                ?.filter(item => !item.includes('Workloads'));\n\n                const globalFilterConfig = mapGlobalFilters(TAGs, SIDs, data?.Workloads);\n\n                if (JSON.stringify(config) !== JSON.stringify(globalFilterConfig)) {\n                    dispatch(globalFilter(globalFilterConfig));\n                    setConfig(globalFilterConfig);\n                    dispatch(changeGlobalTags(globalFilterConfig.selectedTags));\n                    dispatch(changeProfile(globalFilterConfig.systemProfile));\n                }\n\n            });\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <NotificationPortal />\n            <RBACProvider appName=\"patch\">\n                <Router basename={getBaseName(window.location.pathname)}>\n                    <Routes />\n                </Router>\n            </RBACProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","let initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const SystemDetailStore = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'FETCH_SYSTEM_DETAIL_FULFILLED':\n            return {\n                ...state,\n                hasThirdPartyRepo: payload.data?.attributes.third_party,\n                patchSetName: payload.data?.attributes.baseline_name,\n                patchSetId: payload.data?.attributes.baseline_id\n            };\n        case 'LOAD_ENTITY_PENDING':\n            return {\n                ...state,\n                loaded: false\n            };\n        case 'LOAD_ENTITY_FULFILLED':\n            return {\n                ...state,\n                loaded: true\n            };\n        case 'LOAD_ENTITY_REJECTED':\n            return {\n                ...state,\n                loaded: true\n            };\n        default:\n            return state;\n    }\n};\n","import { CLEAR_ADVISORY_DETAILS, FETCH_ADVISORY_DETAILS } from '../ActionTypes';\nimport {\n\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const AdvisoryDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_ADVISORY_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_ADVISORY_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_ADVISORY_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_ADVISORY_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { CLEAR_PACKAGE_DETAILS, FETCH_PACKAGE_DETAILS } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\n// Reducer\nexport const PackageDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_PACKAGE_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_PACKAGE_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_PACKAGE_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_PACKAGE_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults, packagesListDefaultFilters } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport { changeFilters, fetchFulfilled, fetchPending, fetchRejected } from './HelperReducers';\n\nconst initialStore = { ...storeListDefaults,  queryParams: packagesListDefaultFilters };\n\nexport const PackagesListStore = (state = initialStore, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_PACKAGES_LIST + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PACKAGES_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nconst initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        filter: {\n            stale: [true, false]\n        }\n    }\n};\n\n// Reducer\nexport const SystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CHANGE_SYSTEMS_METADATA:\n            newState.metadata = action.payload;\n            return newState;\n\n        case ActionTypes.TOGGLE_ALL_SELECTED:\n            newState.areAllSelected = action.payload;\n            return newState;\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n\nexport const PackageSystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_PACKAGE_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CLEAR_PACKAGE_SYSTEMS_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\nimport { changeListParams } from '../../Utilities/Helpers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    }\n};\n// Reducer\n\nexport const AdvisorySystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n\n        case ActionTypes.CHANGE_AFFECTED_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.CLEAR_ADVISORY_SYSTEMS_REDUCER:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\n\nconst initialState = {\n    selectedGlobalTags: [],\n    selectedTags: [],\n    systemProfile: undefined\n};\n\nexport const GlobalFilterStore = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.CHANGE_TAGS:\n            return {\n                ...state,\n                selectedTags: action.payload\n            };\n\n        case ActionTypes.CHANGE_GLOBAL_TAGS:\n            return {\n                ...state,\n                selectedGlobalTags: action.payload\n            };\n\n        case ActionTypes.CHANGE_PROFILE:\n            return {\n                ...state,\n                systemProfile: action.payload\n            };\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\n// Initial State. It should not include page and perPage to persist them dynamically\nexport const initialState = {\n    rows: [],\n    selectedRows: [],\n    queryParams: {\n        page: 1,\n        perPage: 20,\n        offset: 0,\n        filter: {}\n    },\n    status: { isLoading: true },\n    metadata: {\n        limit: 20,\n        offset: 0,\n        total_items: 0\n    },\n    error: {}\n};\n\nexport const PatchSetsReducer = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_FULFILLED':\n            return {\n                ...newState,\n                rows: action.payload.data?.map(set => ({ ...set.attributes, id: set.id })),\n                metadata: action.payload.meta || {},\n                error: {},\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PATCH_SET_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.SELECT_PATCH_SET_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.CLEAR_PATCH_SETS:\n            return initialState;\n\n        default:\n            return newState;\n    }\n};\n","import { FETCH_TEMPLATE_DETAIL, CLEAR_TEMPLATE_DETAIL } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: { isLoading: true }\n};\n\nexport const PatchSetDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case FETCH_TEMPLATE_DETAIL + '_FULFILLED':\n            return {\n                ...state,\n                status: { isLoading: false },\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_TEMPLATE_DETAIL + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_TEMPLATE_DETAIL + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_TEMPLATE_DETAIL:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { changeListParams } from '../../Utilities/Helpers';\nimport {\n    CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS,\n    TRIGGER_GLOBAL_FILTER,\n    CHANGE_PATCH_SET_DETAIL_SYSTEMS_METADATA,\n    FETCH_PATCH_SET_SYSTEMS_NO_FILTERS\n} from '../ActionTypes';\nimport { changeFilters } from './HelperReducers';\n\nconst initialState = {\n    selectedRows: {},\n    queryParams: {\n        page: 1,\n        perPage: 20\n    },\n    templateHasSystemsLoading: true,\n    templateHasSystems: null\n};\n\nexport const PatchSetDetailSystemsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS:\n            newState.queryParams = changeListParams(newState.queryParams, action.payload);\n            return newState;\n\n        case TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case CHANGE_PATCH_SET_DETAIL_SYSTEMS_METADATA:\n            newState.metadata = action.payload;\n            return newState;\n\n        case FETCH_PATCH_SET_SYSTEMS_NO_FILTERS + '_PENDING':\n            return {\n                ...state,\n                templateHasSystemsLoading: true,\n                templateHasSystems: null\n            };\n\n        case FETCH_PATCH_SET_SYSTEMS_NO_FILTERS + '_FULFILLED':\n            return {\n                ...state,\n                templateHasSystemsLoading: false,\n                templateHasSystems: action.payload.data.length > 0\n            };\n\n        case FETCH_PATCH_SET_SYSTEMS_NO_FILTERS + '_REJECTED':\n            return {\n                ...state,\n                templateHasSystemsLoading: false,\n                // if we set this to true, Inventory table is shown, which has better error handling\n                templateHasSystems: true\n            };\n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from '../ActionTypes';\nimport {\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport const initialState = {\n    patchSet: {\n        config: {}\n    },\n    assignedSystems: [],\n    status: {},\n    error: {},\n    takenBaselineNames: [],\n    takenBaselineNamesLoading: true\n};\n\nexport const SpecificPatchSetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.FETCH_PATCH_SET + '_FULFILLED': {\n            const { attributes: { config, name, description }, id } = action.payload?.data || { config: {} };\n\n            return {\n                ...state,\n                patchSet: { name, description, config: config || {}, id },\n                status: { code: action.payload.status, isLoading: false, hasError: false }\n            };\n        }\n\n        case ActionTypes.FETCH_PATCH_SET + '_PENDING':\n            return fetchPending(state);\n\n        case ActionTypes.FETCH_PATCH_SET + '_REJECTED':\n            return fetchRejected(state, action);\n\n        case ActionTypes.FETCH_PATCH_SET_SYSTEMS + `_FULFILLED`: {\n            const systems = action.payload?.data || [];\n\n            return {\n                ...state,\n                assignedSystems: systems.map(system => system?.inventory_id)\n            };\n        }\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS_NAMES + '_PENDING': {\n            return {\n                ...state,\n                takenBaselineNamesLoading: true\n            };\n        }\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS_NAMES + '_FULFILLED': {\n            return {\n                ...state,\n                takenBaselineNames: action.payload,\n                takenBaselineNamesLoading: false\n            };\n        }\n\n        case ActionTypes.FETCH_ALL_PATCH_SETS_NAMES + '_REJECTED': {\n            return {\n                ...state,\n                takenBaselineNames: [],\n                takenBaselineNamesLoading: false\n            };\n        }\n\n        case ActionTypes.CLEAR_PATCH_SET:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { AdvisoryDetailStore } from './Reducers/AdvisoryDetailStore';\nimport { AdvisoryListStore } from './Reducers/AdvisoryListStore';\nimport { CvesListStore } from './Reducers/CvesListStore';\nimport { PackageDetailStore } from './Reducers/PackageDetailStore';\nimport { PackagesListStore } from './Reducers/PackagesListStore';\nimport { SystemAdvisoryListStore } from './Reducers/SystemAdvisoryListStore';\nimport { SystemDetailStore } from './Reducers/SystemDetailStore';\nimport { SystemPackageListStore } from './Reducers/SystemPackageListStore';\nimport { SystemsStore } from './Reducers/SystemsStore';\nimport { PackageSystemsStore } from './Reducers/PackageSystemsStore';\nimport { AdvisorySystemsStore } from './Reducers/AdvisorySystemsStore';\nimport { GlobalFilterStore } from './Reducers/GlobalFilterStore';\nimport { PatchSetsReducer } from './Reducers/PatchSetsReducer';\nimport { PatchSetDetailStore } from './Reducers/PatchSetDetailStore';\nimport { PatchSetDetailSystemsStore } from './Reducers/PatchSetDetailSystemsStore';\nimport { SpecificPatchSetReducer } from './Reducers/SpecificPatchSetReducer';\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers, compose } from 'redux';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const defaultReducers = {\n    AdvisoryListStore,\n    SystemDetailStore,\n    SystemAdvisoryListStore,\n    AdvisoryDetailStore,\n    SystemPackageListStore,\n    PackagesListStore,\n    PackageDetailStore,\n    CvesListStore,\n    SystemsStore,\n    PackageSystemsStore,\n    AdvisorySystemsStore,\n    GlobalFilterStore,\n    PatchSetsStore: PatchSetsReducer,\n    PatchSetDetailStore,\n    PatchSetDetailSystemsStore,\n    SpecificPatchSetReducer,\n    notifications: notificationsReducer\n};\n\nexport const store = createStore(\n    combineReducers(defaultReducers),\n    composeEnhancers(applyMiddleware(promiseMiddleware, notificationsMiddleware()))\n);\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    expandRows,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const AdvisoryListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_ADVISORY_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.EXPAND_ADVISORY_ROW:\n            return expandRows(newState, action);\n\n        case ActionTypes.SELECT_ADVISORY_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TOGGLE_ALL_SELECTED:\n            newState.areAllSelected = action.payload;\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const CvesListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_CVES_INFO + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_CVES_INFO + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_CVES_INFO + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_CVES_STORE_PARAMS:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n"],"names":["WithPermission","_ref","children","_ref$requiredPermissi","requiredPermissions","_usePermissionsWithCo","usePermissionsWithContext","hasAccess","isLoading","React","NotAuthorized","serviceName","propTypes","PermissionRouter","route","index","Component","component","isExact","path","_route$props","props","routeProps","componentProps","_objectSpread","Route","_extends","key","PropTypes","Advisories","lazy","Systems","InventoryDetail","AdvisoryPage","PackagesPage","PackageDetail","Templates","TemplateDetail","Routes","history","useHistory","chrome","useChrome","generalPermissions","_useState","useState","_useState2","_slicedToArray","hasSystems","setHasSystems","paths","listenNavigation","useCallback","on","event","domEvent","push","concat","navId","useEffect","unregister","axios","then","data","total","e","console","log","Suspense","fallback","Bullseye","Spinner","Switch","map","Redirect","from","to","render","some","p","location","pathname","AsyncComponent","appId","appName","module","scope","ErrorComponent","app","dispatch","useDispatch","selectedTags","systemProfile","config","setConfig","_chrome$globalFilterS","globalFilterScope","call","_chrome$mapGlobalFilt","_chrome$mapGlobalFilt2","_chrome$mapGlobalFilt3","SIDs","mapGlobalFilter","TAGs","filter","item","includes","globalFilterConfig","mapGlobalFilters","Workloads","JSON","stringify","globalFilter","changeGlobalTags","changeProfile","NotificationPortal","RBACProvider","Router","basename","getBaseName","window","initialState","loaded","SystemDetailStore","_payload$data","_payload$data2","_payload$data3","state","arguments","length","undefined","type","payload","hasThirdPartyRepo","attributes","third_party","patchSetName","baseline_name","patchSetId","baseline_id","status","initialStore","storeListDefaults","queryParams","packagesListDefaultFilters","selectedRows","page","perPage","stale","selectedGlobalTags","rows","offset","metadata","limit","total_items","error","templateHasSystemsLoading","templateHasSystems","patchSet","assignedSystems","takenBaselineNames","takenBaselineNamesLoading","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","defaultReducers","AdvisoryListStore","action","newState","ActionTypes","fetchFulfilled","fetchPending","fetchRejected","changeFilters","expandRows","selectRows","areAllSelected","SystemAdvisoryListStore","AdvisoryDetailStore","FETCH_ADVISORY_DETAILS","CLEAR_ADVISORY_DETAILS","SystemPackageListStore","PackagesListStore","PackageDetailStore","FETCH_PACKAGE_DETAILS","CLEAR_PACKAGE_DETAILS","CvesListStore","SystemsStore","changeListParams","PackageSystemsStore","AdvisorySystemsStore","GlobalFilterStore","PatchSetsStore","_action$payload$data","set","id","meta","code","hasError","PatchSetDetailStore","FETCH_TEMPLATE_DETAIL","CLEAR_TEMPLATE_DETAIL","PatchSetDetailSystemsStore","CHANGE_PATCH_SET_DETAIL_SYSTEMS_PARAMS","TRIGGER_GLOBAL_FILTER","CHANGE_PATCH_SET_DETAIL_SYSTEMS_METADATA","FETCH_PATCH_SET_SYSTEMS_NO_FILTERS","SpecificPatchSetReducer","_action$payload","_ref$attributes","name","description","_action$payload2","systems","system","inventory_id","notifications","notificationsReducer","store","createStore","combineReducers","applyMiddleware","promiseMiddleware","notificationsMiddleware"],"sourceRoot":""}