{"version":3,"file":"js/PackageDetail.3105ef4bdf945cfa0232.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Divider/Divider.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownSeparator.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/InternalDropdownItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/caret-down-icon.js","webpack:///./src/PresentationalComponents/Filters/StatusFilter.js","webpack:///./src/PresentationalComponents/PackageHeader/PackageHeader.js","webpack:///./src/PresentationalComponents/Filters/VersionFilter.js","webpack:///./src/SmartComponents/PackageSystems/PackageSystems.js","webpack:///./src/SmartComponents/PackageDetail/PackageDetail.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Divider/divider';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport var DividerVariant;\n(function (DividerVariant) {\n    DividerVariant[\"hr\"] = \"hr\";\n    DividerVariant[\"li\"] = \"li\";\n    DividerVariant[\"div\"] = \"div\";\n})(DividerVariant || (DividerVariant = {}));\nexport const Divider = (_a) => {\n    var { className, component = DividerVariant.hr, isVertical = false, inset, orientation } = _a, props = __rest(_a, [\"className\", \"component\", \"isVertical\", \"inset\", \"orientation\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.divider, isVertical && styles.modifiers.vertical, formatBreakpointMods(inset, styles), formatBreakpointMods(orientation, styles), className) }, (component !== 'hr' && { role: 'separator' }), props)));\n};\nDivider.displayName = 'Divider';\n//# sourceMappingURL=Divider.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { InternalDropdownItem } from './InternalDropdownItem';\nimport { Divider, DividerVariant } from '../Divider';\nimport { useOUIAProps } from '../../helpers';\nexport const DropdownSeparator = (_a) => {\n    var { className = '', \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n    ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"className\", \"ref\", \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = useOUIAProps(DropdownSeparator.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(DropdownArrowContext.Consumer, null, context => (React.createElement(InternalDropdownItem, Object.assign({}, props, { context: context, component: React.createElement(Divider, { component: DividerVariant.div }), className: className, role: \"separator\" }, ouiaProps)))));\n};\nDropdownSeparator.displayName = 'DropdownSeparator';\n//# sourceMappingURL=DropdownSeparator.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEYHANDLER_DIRECTION } from '../../helpers/constants';\nimport { preventedEvents } from '../../helpers/util';\nimport { Tooltip } from '../Tooltip';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nexport class InternalDropdownItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.ref = React.createRef();\n        this.additionalRef = React.createRef();\n        this.getInnerNode = (node) => (node && node.childNodes && node.childNodes.length ? node.childNodes[0] : node);\n        this.onKeyDown = (event) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n            // Detected key press on this item, notify the menu parent so that the appropriate item can be focused\n            const innerIndex = event.target === this.ref.current ? 0 : 1;\n            if (!this.props.customChild) {\n                event.preventDefault();\n            }\n            if (event.key === 'ArrowUp') {\n                (_b = (_a = this.props.context) === null || _a === void 0 ? void 0 : _a.keyHandler) === null || _b === void 0 ? void 0 : _b.call(_a, this.props.index, innerIndex, KEYHANDLER_DIRECTION.UP);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowDown') {\n                (_d = (_c = this.props.context) === null || _c === void 0 ? void 0 : _c.keyHandler) === null || _d === void 0 ? void 0 : _d.call(_c, this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowRight') {\n                (_f = (_e = this.props.context) === null || _e === void 0 ? void 0 : _e.keyHandler) === null || _f === void 0 ? void 0 : _f.call(_e, this.props.index, innerIndex, KEYHANDLER_DIRECTION.RIGHT);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowLeft') {\n                (_h = (_g = this.props.context) === null || _g === void 0 ? void 0 : _g.keyHandler) === null || _h === void 0 ? void 0 : _h.call(_g, this.props.index, innerIndex, KEYHANDLER_DIRECTION.LEFT);\n                event.stopPropagation();\n            }\n            else if (event.key === 'Enter' || event.key === ' ') {\n                event.target.click();\n                this.props.enterTriggersArrowDown &&\n                    ((_k = (_j = this.props.context) === null || _j === void 0 ? void 0 : _j.keyHandler) === null || _k === void 0 ? void 0 : _k.call(_j, this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN));\n            }\n        };\n        this.componentRef = (element) => {\n            this.ref.current = element;\n            const { component } = this.props;\n            const ref = component.ref;\n            if (ref) {\n                if (typeof ref === 'function') {\n                    ref(element);\n                }\n                else {\n                    ref.current = element;\n                }\n            }\n        };\n    }\n    componentDidMount() {\n        var _a;\n        const { context, index, isDisabled, role, customChild, autoFocus } = this.props;\n        const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n        (_a = context === null || context === void 0 ? void 0 : context.sendRef) === null || _a === void 0 ? void 0 : _a.call(context, index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n        autoFocus && setTimeout(() => customRef.focus());\n    }\n    componentDidUpdate() {\n        var _a;\n        const { context, index, isDisabled, role, customChild } = this.props;\n        const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n        (_a = context === null || context === void 0 ? void 0 : context.sendRef) === null || _a === void 0 ? void 0 : _a.call(context, index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n    }\n    extendAdditionalChildRef() {\n        const { additionalChild } = this.props;\n        return React.cloneElement(additionalChild, {\n            ref: this.additionalRef\n        });\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const _a = this.props, { className, children, context, onClick, component, role, isDisabled, isAriaDisabled, isPlainText, index, href, tooltip, tooltipProps, id, componentID, listItemClassName, additionalChild, customChild, enterTriggersArrowDown, icon, autoFocus, styleChildren, description, inoperableEvents } = _a, additionalProps = __rest(_a, [\"className\", \"children\", \"context\", \"onClick\", \"component\", \"role\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"index\", \"href\", \"tooltip\", \"tooltipProps\", \"id\", \"componentID\", \"listItemClassName\", \"additionalChild\", \"customChild\", \"enterTriggersArrowDown\", \"icon\", \"autoFocus\", \"styleChildren\", \"description\", \"inoperableEvents\"]);\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        let classes = css(icon && styles.modifiers.icon, isAriaDisabled && styles.modifiers.ariaDisabled, className);\n        if (component === 'a') {\n            additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n        }\n        else if (component === 'button') {\n            additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n            additionalProps.type = additionalProps.type || 'button';\n        }\n        const renderWithTooltip = (childNode) => tooltip ? (React.createElement(Tooltip, Object.assign({ content: tooltip }, tooltipProps), childNode)) : (childNode);\n        const renderClonedComponent = (element) => React.cloneElement(element, Object.assign(Object.assign({}, (styleChildren && {\n            className: css(element.props.className, classes)\n        })), (this.props.role !== 'separator' && { role, ref: this.componentRef })));\n        const renderDefaultComponent = (tag) => {\n            const Component = tag;\n            const componentContent = description ? (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: styles.dropdownMenuItemMain },\n                    icon && React.createElement(\"span\", { className: css(styles.dropdownMenuItemIcon) }, icon),\n                    children),\n                React.createElement(\"div\", { className: styles.dropdownMenuItemDescription }, description))) : (React.createElement(React.Fragment, null,\n                icon && React.createElement(\"span\", { className: css(styles.dropdownMenuItemIcon) }, icon),\n                children));\n            return (React.createElement(Component, Object.assign({}, additionalProps, (isDisabled || isAriaDisabled ? preventedEvents(inoperableEvents) : null), { href: href, ref: this.ref, className: classes, id: componentID, role: role }), componentContent));\n        };\n        return (React.createElement(DropdownContext.Consumer, null, ({ onSelect, itemClass, disabledClass, plainTextClass }) => {\n            if (this.props.role !== 'separator') {\n                classes = css(classes, isDisabled && disabledClass, isPlainText && plainTextClass, itemClass, description && styles.modifiers.description);\n            }\n            if (customChild) {\n                return React.cloneElement(customChild, {\n                    ref: this.ref,\n                    onKeyDown: this.onKeyDown\n                });\n            }\n            return (React.createElement(\"li\", Object.assign({}, (listItemClassName && { className: listItemClassName }), { role: \"none\", onKeyDown: this.onKeyDown, onClick: (event) => {\n                    if (!isDisabled && !isAriaDisabled) {\n                        onClick === null || onClick === void 0 ? void 0 : onClick(event);\n                        onSelect === null || onSelect === void 0 ? void 0 : onSelect(event);\n                    }\n                }, id: id }),\n                renderWithTooltip(React.isValidElement(component)\n                    ? renderClonedComponent(component)\n                    : renderDefaultComponent(component)),\n                additionalChild && this.extendAdditionalChildRef()));\n        }));\n    }\n}\nInternalDropdownItem.displayName = 'InternalDropdownItem';\nInternalDropdownItem.defaultProps = {\n    className: '',\n    component: 'a',\n    role: 'none',\n    isDisabled: false,\n    isPlainText: false,\n    tooltipProps: {},\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (event) => undefined,\n    index: -1,\n    context: {\n        keyHandler: () => { },\n        sendRef: () => { }\n    },\n    enterTriggersArrowDown: false,\n    icon: null,\n    styleChildren: true,\n    description: null,\n    inoperableEvents: ['onClick', 'onKeyPress']\n};\n//# sourceMappingURL=InternalDropdownItem.js.map","import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import { createIcon } from '../createIcon';\n\nexport const CaretDownIconConfig = {\n  name: 'CaretDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CaretDownIcon = createIcon(CaretDownIconConfig);\n\nexport default CaretDownIcon;","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport React from 'react';\nimport { updatableTypes } from '../../Utilities/constants';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { update_status: currentValue } = currentFilter;\n\n    const updatableTypesMap = React.useMemo(\n        () =>\n            updatableTypes.map(({ value, label }) => ({\n                label,\n                value: value.toString()\n            })),\n        []\n    );\n    const filterByType = value => {\n        apply({ filter: { update_status: value } });\n    };\n\n    return {\n        label: intl.formatMessage(messages.labelsFiltersStatus),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByType(value);\n            },\n            items: updatableTypesMap,\n            value: currentValue,\n            placeholder: intl.formatMessage(messages.labelsColumnsStatusPlaceholder)\n        }\n    };\n};\n\nexport default statusFilter;\n","import { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { Fragment } from 'react';\nimport { truncateDescription } from '../../Utilities/Helpers';\nimport WithLoader, { WithLoaderVariants } from '../WithLoader/WithLoader';\n\nconst PackageHeader = ({ attributes: { description }, isLoading }) => {\n    const [wordLength, setWordLength] = React.useState(1000);\n\n    return description && (<Grid hasGutter style={{ minHeight: 50 }}>\n        <GridItem md={8} sm={12}>\n            <WithLoader\n                loading={isLoading}\n                variant={WithLoaderVariants.spinner}\n                centered\n            >\n                <Stack hasGutter>\n                    <StackItem />\n                    <StackItem style={{ whiteSpace: 'pre-line' }}>\n                        {\n                            description && truncateDescription(description, wordLength, setWordLength)\n                        }\n                    </StackItem>\n                </Stack>\n            </WithLoader>\n        </GridItem>\n    </Grid>) || <Fragment/>;\n};\n\nPackageHeader.propTypes = {\n    attributes: propTypes.object,\n    isLoading: propTypes.bool\n};\n\nexport default PackageHeader;\n","import React from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst VersionFilter = (apply, filter, packageVersions) => {\n\n    const [isOpen, setOpen] = React.useState(false);\n    const [numOptions, setNumOptions] = React.useState(10);\n\n    const isSet = filter && filter.installed_evra;\n    const installedEvra = isSet &&\n        (typeof(filter.installed_evra) === 'string' && filter.installed_evra.split(',')\n        || filter.installed_evra);\n    const versionList = packageVersions.data && packageVersions.data.sort().map(version => ({ value: version.evra }))\n        || [{ value: intl.formatMessage(messages.textNoVersionAvailable), disabled: true }];\n\n    const onToggle = (isOpen) => {\n        setOpen(isOpen);\n    };\n\n    const onSelect = (_, selection) => {\n        const config = { filter: {} };\n        if (!installedEvra || (installedEvra && !installedEvra.includes(selection))) {\n            const existingVersions = isSet && filter.installed_evra !== '' && filter.installed_evra.concat(',') || '';\n\n            config.filter = { installed_evra: `${existingVersions}${selection}` };\n        } else {\n            const filteredOutEvras = installedEvra.length !== 1\n                && installedEvra.filter(evra => !evra.includes(selection)).join(',') || undefined;\n\n            config.filter = { installed_evra: filteredOutEvras };\n        }\n\n        apply(config);\n    };\n\n    const onViewMoreClick = () => {\n        setNumOptions(versionList.length);\n    };\n\n    return (\n        {\n            type: conditionalFilterType.custom,\n            label: intl.formatMessage(messages.labelsFiltersPackageVersionTitle),\n            value: 'custom',\n            filterValues: {\n                children: (\n                    <Select\n                        variant={versionList.length > 0 && SelectVariant.checkbox || SelectVariant.typeaheadMulti}\n                        typeAheadAriaLabel={intl.formatMessage(messages.labelsFiltersPackageVersionPlaceholder)}\n                        onToggle={onToggle}\n                        onSelect={onSelect}\n                        selections={installedEvra}\n                        isOpen={isOpen}\n                        aria-labelledby={'patch-version-filter'}\n                        placeholderText={intl.formatMessage(messages.labelsFiltersPackageVersionPlaceholder)}\n                        {...(numOptions < versionList.lengt\n                            && { loadingVariant: { text: 'View more', onClick: onViewMoreClick } })}\n                        style={{ maxHeight: '400px', overflow: 'auto' }}\n                    >\n                        {versionList.slice(0, numOptions).map((option, index) => (\n                            <SelectOption\n                                isDisabled={option.disabled}\n                                key={index}\n                                value={option.value}\n                                {...(option.description && { description: option.description })}\n                            />\n                        ))}\n                    </Select>\n                )\n            }\n        }\n    );\n\n};\n\nexport default VersionFilter;\n","import { TableVariant } from '@patternfly/react-table';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport propTypes from 'prop-types';\nimport React, { useCallback, useMemo, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector, useStore } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport messages from '../../Messages';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/StatusFilter';\nimport versionFilter from '../../PresentationalComponents/Filters/VersionFilter';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\nimport { defaultReducers } from '../../store';\nimport { changePackageSystemsParams, clearInventoryReducer,\n    clearPackageSystemsReducer, systemSelectAction } from '../../store/Actions/Actions';\nimport { inventoryEntitiesReducer, modifyPackageSystems } from '../../store/Reducers/InventoryEntitiesReducer';\nimport {\n    exportPackageSystemsCSV,\n    exportPackageSystemsJSON, fetchPackageSystems,\n    fetchPackageVersions\n} from '../../Utilities/api';\nimport { remediationIdentifiers } from '../../Utilities/constants';\nimport {\n    arrayFromObj, buildFilterChips, decodeQueryparams, filterRemediatablePackageSystems,\n    persistantParams, remediationProviderWithPairs, removeUndefinedObjectKeys\n} from '../../Utilities/Helpers';\nimport { useBulkSelectConfig, useGetEntities, useOnExport, useRemoveFilter } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport AsyncRemediationButton from '../Remediation/AsyncRemediationButton';\nimport { packageSystemsColumns } from '../Systems/SystemsListAssets';\nimport { useOnSelect, ID_API_ENDPOINTS } from '../../Utilities/useOnSelect';\nimport { combineReducers } from 'redux';\n\nconst PackageSystems = ({ packageName }) => {\n    const dispatch = useDispatch();\n    const store = useStore();\n    const [packageVersions, setPackageVersions] = React.useState([]);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const decodedParams = decodeQueryparams('?' + searchParams.toString());\n    const systems = useSelector(({ entities }) => entities?.rows || [], shallowEqual);\n    const status = useSelector(\n        ({ entities }) => entities?.status || {}\n    );\n    const totalItems = useSelector(\n        ({ entities }) => entities?.total || 0\n    );\n    const selectedRows = useSelector(\n        ({ entities }) => entities?.selectedRows || []\n    );\n    const queryParams = useSelector(\n        ({ PackageSystemsStore }) => PackageSystemsStore?.queryParams || {}\n    );\n\n    const { systemProfile, selectedTags,\n        filter, search, sort, page, perPage } = queryParams;\n\n    const apply = useCallback((params) => {\n        dispatch(changePackageSystemsParams(params));\n    }, []);\n\n    useEffect(() => {\n        apply(decodedParams);\n        fetchPackageVersions({ package_name: packageName }).then(setPackageVersions);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearInventoryReducer());\n            dispatch(clearPackageSystemsReducer());\n        };\n    }, []);\n\n    const [deleteFilters] = useRemoveFilter({ ...filter, search }, apply);\n\n    const filterConfig = {\n        items: [\n            searchFilter(apply, search,\n                intl.formatMessage(messages.labelsFiltersSystemsSearchTitle),\n                intl.formatMessage(messages.labelsFiltersSystemsSearchPlaceholder)\n            ),\n            statusFilter(apply, filter),\n            versionFilter(apply, filter, packageVersions)\n        ]\n    };\n\n    const activeFiltersConfig = useMemo(() => ({\n        filters: buildFilterChips(filter, search, intl.formatMessage(messages.labelsFiltersSystemsSearchTitle)),\n        onDelete: deleteFilters\n    }), [filter, search]);\n\n    const constructFilename = (system) => {\n        return `${system.available_evra}`;\n    };\n\n    const onSelect = useOnSelect(\n        systems,\n        selectedRows,\n        {\n            endpoint: ID_API_ENDPOINTS.packageSystems(packageName),\n            queryParams,\n            selectionDispatcher: systemSelectAction,\n            constructFilename,\n            apiResponseTransformer: filterRemediatablePackageSystems\n        }\n    );\n\n    const selectedCount = selectedRows && arrayFromObj(selectedRows).length;\n\n    const onExport = useOnExport(packageName, queryParams, {\n        csv: exportPackageSystemsCSV,\n        json: exportPackageSystemsJSON\n    }, dispatch);\n\n    const prepareRemediationPairs = useCallback((systemIDs) => {\n        const pairs = [];\n\n        systemIDs.forEach(id => {\n            const packageEvra = packageName + '-' + selectedRows[id];\n            const issueID = `patch-package:${packageEvra}`;\n            const index = pairs.findIndex(pair => pair.id === issueID);\n\n            if (index !== -1) {\n                pairs[index].systems.push(id);\n            } else if (packageEvra) {\n                pairs.push({\n                    id: issueID,\n                    description: packageEvra,\n                    systems: [id]\n                });\n            }\n        });\n\n        return pairs.length ? { issues: pairs } : false;\n    }, [selectedRows]);\n\n    const getEntites = useGetEntities(fetchPackageSystems, apply, { packageName }, setSearchParams);\n\n    const remediationDataProvider = () => remediationProviderWithPairs(\n        removeUndefinedObjectKeys(selectedRows),\n        prepareRemediationPairs,\n        remediationIdentifiers.package\n    );\n\n    const bulkSelectConfig = useBulkSelectConfig(selectedCount, onSelect, { total_items: totalItems }, systems);\n\n    return (\n        <React.Fragment>\n            {status.hasError && <ErrorHandler code={status.code} /> || (\n                <InventoryTable\n                    disableDefaultColumns={['system_profile', 'updated', 'groups']}\n                    isFullView\n                    autoRefresh\n                    initialLoading\n                    hideFilters={{ all: true, tags: false, operatingSystem: false }}\n                    columns={packageSystemsColumns}\n                    showTags\n                    getEntities={getEntites}\n                    customFilters={{\n                        patchParams: {\n                            search,\n                            filter,\n                            systemProfile,\n                            selectedTags\n                        }\n                    }}\n                    paginationProps={{\n                        isDisabled: totalItems === 0\n                    }}\n                    onLoad={({ mergeWithEntities }) => {\n                        store.replaceReducer(combineReducers({\n                            ...defaultReducers,\n                            ...mergeWithEntities(\n                                inventoryEntitiesReducer(packageSystemsColumns, modifyPackageSystems),\n                                persistantParams({ page, perPage, sort, search }, decodedParams)\n                            )\n                        }));\n\n                    }}\n                    tableProps={{\n                        canSelectAll: false,\n                        variant: TableVariant.compact, className: 'patchCompactInventory', isStickyHeader: true\n                    }}\n                    filterConfig={filterConfig}\n                    activeFiltersConfig={activeFiltersConfig}\n                    bulkSelect={onSelect && bulkSelectConfig}\n                    exportConfig={{\n                        isDisabled: totalItems === 0,\n                        onSelect: onExport\n                    }}\n                    dedicatedAction={(\n                        <AsyncRemediationButton\n                            remediationProvider={remediationDataProvider}\n                            isDisabled={arrayFromObj(selectedRows).length === 0}\n                        />\n                    )}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nPackageSystems.propTypes = {\n    packageName: propTypes.string\n};\n\nexport default PackageSystems;\n","import { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport messages from '../../Messages';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport PackageHeader from '../../PresentationalComponents/PackageHeader/PackageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport PackageSystems from '../../SmartComponents/PackageSystems/PackageSystems';\nimport { clearPackageDetailStore, fetchPackageDetails } from '../../store/Actions/Actions';\nimport { intl } from '../../Utilities/IntlProvider';\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ErrorHandler from '../../PresentationalComponents/Snippets/ErrorHandler';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { DEFAULT_PATCH_TITLE } from '../../Utilities/constants';\n\nconst PackageDetail = () => {\n    const dispatch = useDispatch();\n    const { packageName } = useParams();\n    const chrome = useChrome();\n\n    useEffect(()=>{\n        packageName && chrome.updateDocumentTitle(`${packageName} - ${intl.formatMessage(messages.titlesPackages)}\n        ${DEFAULT_PATCH_TITLE}`);\n    }, [chrome, packageName]);\n\n    const packageDetails = useSelector(\n        ({ PackageDetailStore }) => PackageDetailStore\n    );\n    const status = useSelector(\n        ({ PackageDetailStore }) => PackageDetailStore.status\n    );\n\n    React.useEffect(() => {\n        dispatch(fetchPackageDetails({ packageName }));\n    }, []);\n\n    React.useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n            dispatch(clearPackageDetailStore());\n        };\n    }, []);\n\n    const { attributes } = packageDetails.data;\n\n    return (\n        <React.Fragment>\n            <Header\n                title={packageName}\n                headerOUIA={'package-details'}\n                breadcrumbs={[\n                    {\n                        title: intl.formatMessage(messages.titlesPatchPackages),\n                        to: '/packages',\n                        isActive: false\n                    },\n                    {\n                        title: packageName,\n                        isActive: true\n                    }\n                ]}\n            >{status.hasError ? <Unavailable/> :\n                    <PackageHeader\n                        attributes={{ ...attributes, id: packageName }}\n                        isLoading={status.isLoading}\n                    />}\n            </Header>\n            <Main>\n                <Stack hasGutter>\n                    <StackItem>\n                        <TextContent>\n                            <Text component={TextVariants.h2}>{intl.formatMessage(messages.titlesAffectedSystems)}</Text>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem>\n                        {status.hasError\n                            && < ErrorHandler />\n                                || (!status.isLoading && <PackageSystems packageName={packageName}></PackageSystems>)\n                        }\n                    </StackItem>\n                </Stack>\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default PackageDetail;\n"],"names":["DividerVariant","Divider","_a","className","component","hr","isVertical","inset","orientation","props","__rest","Component","Object","assign","css","divider","modifiers","vertical","role","displayName","DropdownSeparator","ref","ouiaId","ouiaSafe","ouiaProps","Consumer","context","div","InternalDropdownItem","constructor","super","arguments","this","additionalRef","getInnerNode","node","childNodes","length","onKeyDown","event","_b","_c","_d","_e","_f","_g","_h","_j","_k","innerIndex","target","current","customChild","preventDefault","key","keyHandler","call","index","UP","stopPropagation","DOWN","RIGHT","LEFT","click","enterTriggersArrowDown","componentRef","element","componentDidMount","isDisabled","autoFocus","customRef","sendRef","setTimeout","focus","componentDidUpdate","extendAdditionalChildRef","additionalChild","render","children","onClick","isAriaDisabled","isPlainText","href","tooltip","tooltipProps","id","componentID","listItemClassName","icon","styleChildren","description","inoperableEvents","additionalProps","classes","ariaDisabled","type","renderClonedComponent","renderDefaultComponent","tag","componentContent","dropdownMenuItemMain","dropdownMenuItemIcon","dropdownMenuItemDescription","onSelect","itemClass","disabledClass","plainTextClass","childNode","content","defaultProps","DropdownPosition","DropdownDirection","DropdownContext","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","menuComponent","DropdownArrowContext","CaretDownIconConfig","name","height","width","svgPath","yOffset","xOffset","CaretDownIcon","apply","currentValue","undefined","update_status","updatableTypesMap","React","updatableTypes","map","_ref","value","label","toString","intl","formatMessage","messages","labelsFiltersStatus","conditionalFilterType","checkbox","filterValues","onChange","filter","filterByType","items","placeholder","labelsColumnsStatusPlaceholder","PackageHeader","attributes","isLoading","_React$useState","_React$useState2","_slicedToArray","wordLength","setWordLength","Grid","hasGutter","style","minHeight","GridItem","md","sm","WithLoader","loading","variant","WithLoaderVariants","spinner","centered","Stack","StackItem","whiteSpace","truncateDescription","Fragment","propTypes","packageVersions","isOpen","setOpen","_React$useState3","_React$useState4","numOptions","setNumOptions","isSet","installed_evra","installedEvra","split","versionList","data","sort","version","evra","textNoVersionAvailable","disabled","custom","labelsFiltersPackageVersionTitle","Select","_extends","SelectVariant","typeaheadMulti","typeAheadAriaLabel","labelsFiltersPackageVersionPlaceholder","onToggle","_","selection","config","includes","existingVersions","concat","filteredOutEvras","join","selections","placeholderText","lengt","loadingVariant","text","maxHeight","overflow","slice","option","SelectOption","PackageSystems","packageName","dispatch","useDispatch","store","useStore","setPackageVersions","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","decodedParams","decodeQueryparams","systems","useSelector","_ref2","entities","rows","shallowEqual","status","_ref3","totalItems","_ref4","total","selectedRows","_ref5","queryParams","_ref6","PackageSystemsStore","systemProfile","selectedTags","search","page","perPage","useCallback","params","changePackageSystemsParams","useEffect","fetchPackageVersions","package_name","then","clearInventoryReducer","clearPackageSystemsReducer","_useRemoveFilter","useRemoveFilter","_objectSpread","deleteFilters","filterConfig","searchFilter","labelsFiltersSystemsSearchTitle","labelsFiltersSystemsSearchPlaceholder","statusFilter","versionFilter","activeFiltersConfig","useMemo","filters","buildFilterChips","onDelete","useOnSelect","endpoint","ID_API_ENDPOINTS","packageSystems","selectionDispatcher","systemSelectAction","constructFilename","system","available_evra","apiResponseTransformer","filterRemediatablePackageSystems","selectedCount","arrayFromObj","onExport","useOnExport","csv","exportPackageSystemsCSV","json","exportPackageSystemsJSON","prepareRemediationPairs","systemIDs","pairs","forEach","packageEvra","issueID","findIndex","pair","push","issues","getEntites","useGetEntities","fetchPackageSystems","bulkSelectConfig","useBulkSelectConfig","total_items","hasError","ErrorHandler","code","InventoryTable","disableDefaultColumns","isFullView","autoRefresh","initialLoading","hideFilters","all","tags","operatingSystem","columns","packageSystemsColumns","showTags","getEntities","customFilters","patchParams","paginationProps","onLoad","_ref7","mergeWithEntities","replaceReducer","combineReducers","defaultReducers","inventoryEntitiesReducer","modifyPackageSystems","persistantParams","tableProps","canSelectAll","TableVariant","compact","isStickyHeader","bulkSelect","exportConfig","dedicatedAction","AsyncRemediationButton","remediationProvider","remediationProviderWithPairs","removeUndefinedObjectKeys","remediationIdentifiers","useParams","chrome","useChrome","updateDocumentTitle","titlesPackages","DEFAULT_PATCH_TITLE","packageDetails","PackageDetailStore","fetchPackageDetails","clearNotifications","clearPackageDetailStore","Header","title","headerOUIA","breadcrumbs","titlesPatchPackages","to","isActive","Unavailable","Main","TextContent","Text","TextVariants","h2","titlesAffectedSystems"],"sourceRoot":""}