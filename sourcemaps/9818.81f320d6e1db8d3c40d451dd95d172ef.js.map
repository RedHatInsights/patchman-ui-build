{"version":3,"file":"js/9818.55f2931ab1d57234c641.js","mappings":"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","sources":["webpack:///./node_modules/@remix-run/router/dist/router.js","webpack:///./node_modules/react-router/dist/index.js","webpack:///./node_modules/react-router-dom/dist/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.6.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref,\n\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex(); // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    createURL,\n\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\n\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\n\nfunction isIndexRoute(route) {\n  return route.index === true;\n} // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (manifest === void 0) {\n    manifest = {};\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant( // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n\n  routes.forEach((route, index) => {\n    var _route$path;\n\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\n\n\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments; // Optional path segments are denoted by a trailing `?`\n\n  let isOptional = first.endsWith(\"?\"); // Compute the corresponding required segment: `foo?` -> `foo`\n\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = []; // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\"))); // Then if this is an optional value, add all child versions without\n\n  if (isOptional) {\n    result.push(...restExploded);\n  } // for absolute paths, ensure `/` instead of empty segment\n\n\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\n\n\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  let path = originalPath;\n\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  } // ensure `/` is added at the beginning if the path is absolute\n\n\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1; // only apply the splat if it's the last segment\n\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      const starParam = params[star]; // Apply the splat\n\n      return starParam;\n    }\n\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n\n      if (optional === \"?\") {\n        return param == null ? \"\" : param;\n      }\n\n      if (param == null) {\n        invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n      }\n\n      return param;\n    } // Remove any optional markers from optional static segments\n\n\n    return segment.replace(/\\?$/g, \"\");\n  }) // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\n\n\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to;\n\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\n\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n}); //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  } // Routes keyed by ID\n\n\n  let manifest = {}; // Routes in tree format for matching\n\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\"; // Config driven behavior flags\n\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future); // Cleanup function for history\n\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && ( // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n\n  let blockerFunctions = new Map(); // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n\n  let ignoreNextHistoryUpdate = false; // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1); // Put the blocker into a blocked state\n\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            }); // Re-do the same POP navigation we just blocked\n\n            init.history.go(delta);\n          },\n\n          reset() {\n            deleteBlocker(blockerKey);\n            updateState({\n              blockers: new Map(router.state.blockers)\n            });\n          }\n\n        });\n        return;\n      }\n\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    } // Always preserve any existing loaderData from re-used routes\n\n\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData; // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    } // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n\n\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers: new Map(state.blockers)\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          }); // Send the same navigation through\n\n          navigate(to, opts);\n        },\n\n        reset() {\n          deleteBlocker(blockerKey);\n          updateState({\n            blockers: new Map(state.blockers)\n          });\n        }\n\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n\n\n    if (isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation; // Create a GET request for the loaders\n\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace;\n\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = _extends({\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      }, submission);\n\n      loadingNavigation = navigation;\n    } // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n\n\n    let activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {\n      formMethod: loadingNavigation.formMethod,\n      formAction: loadingNavigation.formAction,\n      formData: loadingNavigation.formData,\n      formEncType: loadingNavigation.formEncType\n    } : undefined;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(rf => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    }); // Proxy navigation abort through to revalidation fetchers\n\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key)); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let existingFetcher = state.fetchers.get(key);\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true\n      });\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission, {\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    ); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n\n    let loadingFetcher = _extends({\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename); // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(state, redirect, _temp) {\n    var _window;\n\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\"); // Check if this an absolute external redirect that goes to a new origin\n\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) !== \"undefined\") {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n\n        return;\n      }\n    } // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n\n    let {\n      formMethod,\n      formAction,\n      formEncType,\n      formData\n    } = state.navigation;\n\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData\n      };\n    } // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n\n\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, submission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  } // Utility function to update blockers, ensuring valid state transitions\n\n\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER; // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    state.blockers.set(key, newBlocker);\n    updateState({\n      blockers: new Map(state.blockers)\n    });\n  }\n\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n\n    if (blockerFunctions.size === 0) {\n      return;\n    } // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n\n\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    } // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n\n\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes) {\n    inFlightDataRoutes = newRoutes;\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n\n    if (isResponse(result)) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n\n\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext, match);\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    } // Pick off the right state value to return\n\n\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      var _result$activeDeferre;\n\n      let data = Object.values(result.loaderData)[0];\n\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n\n        return e.response;\n      } // Redirects are always returned since they don't propagate to catch\n      // boundaries\n\n\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, true, isRouteRequest, requestContext);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    } // Create a GET request for the loaders\n\n\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())\n\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy); // Short circuit if we have no loaders to run (query())\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, true, isRouteRequest, requestContext))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Process and commit output from loaders\n\n\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds); // Add a null for any non-loader matches for proper revalidation on the client\n\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n}\n\nfunction isSubmissionNavigation(opts) {\n  return opts != null && \"formData\" in opts;\n}\n\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n\n    for (let match of matches) {\n      contextualMatches.push(match);\n\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  } // Resolve the relative path\n\n\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\"); // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  } // Add an ?index param for matched index routes if we don't already have one\n\n\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n\n\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\n\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  let submission;\n\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),\n      formAction: stripHashFromPath(path),\n      formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n      formData: opts.formData\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return {\n        path,\n        submission\n      };\n    }\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData); // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location); // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (match.route.loader == null) {\n      return false;\n    } // Always call the loader on new route instances and pending defer cancellations\n\n\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    } // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n\n\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate: // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  }); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename); // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n      return;\n    } // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n\n\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params\n    }, submission, {\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired\n    }));\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\n\n\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy(); // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\"); // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n\n  let routeUpdates = {};\n\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined && // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  } // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n\n\n  Object.assign(routeToUpdate, routeUpdates); // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, isStaticRequest, isRouteRequest, requestContext) {\n  if (isStaticRequest === void 0) {\n    isStaticRequest = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result;\n  let onReject;\n\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n\n    onReject = () => reject();\n\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: requestContext\n    }), abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status; // Process redirects\n\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\"); // Support relative routing in internal redirects\n\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      } // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n\n\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    } // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n\n\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n\n    let data;\n    let contentType = result.headers.get(\"Content-Type\"); // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n} // Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\n\n\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission; // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary\n\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      } // Clear our any prior loaderData for the throwing route\n\n\n      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      } // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  for (let match of matches) {\n    let id = match.route.id;\n\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\n\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\n\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // No hash -> hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // current hash -> same hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // current hash -> new hash\n    return true;\n  }\n\n  return false;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\n\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\n\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\n\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\n\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index]; // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  } // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n\n\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\"; // Mute warnings for calls to useNavigate in SSR environments\n\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext); // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\n\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n} // Internal implementation with accept optional param for RouterProvider usage\n\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\n\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n\n  if (matches == null) {\n    var _dataRouterState;\n\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = null;\n\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n\n    let getChildren = () => {\n      let children;\n\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    }; // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n\n\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n} // Internal version with hookName-aware debugging\n\n\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the ID for the nearest contextual route\n */\n\n\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount\n\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]); // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n\n  return state.blockers.get(blockerKey) || blocker;\n}\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\n\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setState] = React.useState(router.state);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\n\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref3;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate(); // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n\n  return updates;\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_warning, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, options, basename) {\n  let method;\n  let action = null;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative,\n    preventScrollReset\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      relative,\n      preventScrollReset\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      action,\n      method,\n      encType,\n      formData\n    } = getFormSubmissionInfo(target, options, basename); // Base options shared between fetch() and navigate()\n\n    let opts = {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, fetcherRouteId, action, opts);\n    } else {\n      router.navigate(action, _extends({}, opts, {\n        replace: options.replace,\n        fromRouteId: currentRouteId\n      }));\n    }\n  }, [router, basename, fetcherKey, fetcherRouteId, currentRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n"],"names":["Action","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","PopStateEventType","createMemoryHistory","options","entries","initialEntries","initialIndex","v5Compat","map","entry","index","createMemoryLocation","state","undefined","clampIndex","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","getUrlBasedHistory","window","globalHistory","usr","createHashHistory","substr","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","invariant","value","message","Error","cond","console","warn","e","getHistoryState","idx","current","random","toString","_ref","parsedPath","searchIndex","getLocation","validateLocation","defaultView","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","ResultType","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","startsWith","joinPaths","concat","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","array","keyMatch","optional","param","pattern","matcher","paramNames","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","DeferredData","constructor","reject","pendingKeysSet","subscribers","deferredKeys","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","done","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","emit","settledKey","subscriber","subscribe","cancel","abort","v","k","async","resolve","size","unwrappedData","_ref2","unwrapTrackedPromise","pendingKeys","_tracked","isTrackedPromise","_error","_data","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","isBrowser","createElement","isServer","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","deleteBlocker","getSavedScrollPosition","startNavigation","opts","startUninterruptedRevalidation","userMatches","createUseMatchesMatch","saveScrollPosition","routesToUse","loadingNavigation","overrideNavigation","notFoundMatches","cancelActiveDeferreds","submission","pendingActionData","pendingError","request","createClientSideRequest","findNearestBoundary","actionOutput","interruptActiveLoads","actionMatch","getTargetMatch","callLoaderOrAction","shortCircuited","type","method","routeId","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","pendingActionError","isDeferredResult","handleAction","Request","fetcherSubmission","activeSubmission","matchesToLoad","revalidatingFetchers","getMatchesToLoad","updatedFetchers","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","abortPendingFetchRevalidations","f","abortFetcher","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","handleLoaders","getFetcher","_temp","_window","isFetchActionRedirect","revalidate","redirectLocation","_isFetchActionRedirect","isDifferentBasename","redirectHistoryAction","currentMatches","fetchersToLoad","all","resolveDeferredResults","setFetcherError","deleteFetcher","markFetchersDone","doneFetcher","doneKeys","landedId","yeetedKeys","updateBlocker","newBlocker","blocker","shouldBlockNavigation","currentLocation","blockerKey","blockerFunction","predicate","cancelledRouteIds","dfd","y","initialize","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizedPath","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","userReplace","fetch","requestMatches","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","staleKey","handleFetcherAction","resolveDeferredData","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","isSubmissionNavigation","toUpperCase","stripHashFromPath","searchParams","convertFormDataToSearchParams","append","values","currentUrl","nextUrl","boundaryId","navigationMatches","boundaryMatches","findIndex","getLoaderMatchesUntilBoundary","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","isStaticRequest","isRouteRequest","requestContext","resultType","onReject","runHandler","handler","context","body","protocol","isSameBasename","response","contentType","text","statusCode","_result$init","_result$init2","deferred","resolveData","isDeferredData","URLSearchParams","File","name","foundError","loaderHeaders","processRouteLoaderData","newLoaderData","mergedLoaderData","reverse","find","_temp4","errorMessage","signals","isRevalidatingLoader","unwrap","getAll","handle","pathMatches","Symbol","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","navigator","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","routePathnamesJson","parse","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","super","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","dataRouterContext","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","UseBlocker","String","args","RouterProvider","fallbackElement","setState","Router","DataRoutes","MemoryRouter","_ref3","historyRef","Navigate","_ref4","jsonPath","Outlet","Route","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_excluded","_excluded2","_excluded3","createBrowserRouter","parseHydrationData","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","reloadDocument","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","ariaCurrentProp","className","classNameProp","styleProp","routerState","nextLocationPathname","isActive","isPending","ariaCurrent","Form","FormImpl","forwardedRef","onSubmit","fetcherKey","submit","useSubmitImpl","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","storageKey","useScrollRestoration","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","fetcherRouteId","UseSubmitImpl","currentRouteId","encType","submissionTrigger","attr","FormData","isButtonElement","isInputElement","form","getFormSubmissionInfo","fetcherId","useFetcher","_route$matches","UseFetcher","createFetcherForm","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","when","confirm","setTimeout"],"sourceRoot":""}