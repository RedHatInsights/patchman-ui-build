{"version":3,"file":"js/7982.1662476156973.171331761000157e0413.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications.js","webpack:///./src/PresentationalComponents/Snippets/SystemUpToDate.js","webpack:///./src/Utilities/Helpers.js","webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearNotifications = exports.removeNotification = exports.addNotification = void 0;\nvar action_types_1 = require(\"./action-types\");\nvar addNotification = function (notification) { return ({\n    type: action_types_1.ADD_NOTIFICATION,\n    payload: notification,\n}); };\nexports.addNotification = addNotification;\nvar removeNotification = function (index) { return ({\n    type: action_types_1.REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexports.removeNotification = removeNotification;\nvar clearNotifications = function () { return ({\n    type: action_types_1.CLEAR_NOTIFICATIONS,\n}); };\nexports.clearNotifications = clearNotifications;\nexports.default = {\n    addNotification: exports.addNotification,\n    removeNotification: exports.removeNotification,\n    clearNotifications: exports.clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Title } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nexport const SystemUpToDate = () => (\n    <Bullseye>\n        <EmptyState style={{ paddingTop: 40 }}>\n            <EmptyStateIcon icon={()=><CheckCircleIcon size='xl' color={'var(--pf-global--success-color--200)' }\n                style={{ marginBottom: 15 }} />}/>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                {intl.formatMessage(messages.statesNoApplicableAdvisories)}\n            </Title>\n            <EmptyStateBody>\n                {intl.formatMessage(messages.statesSystemUpToDate)}\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n","/* eslint-disable camelcase */\nimport { Flex, FlexItem, Tooltip } from '@patternfly/react-core';\nimport {\n    BugIcon, CheckIcon, FlagIcon,\n    EnhancementIcon, InfoCircleIcon, LongArrowAltUpIcon,\n    SecurityIcon\n} from '@patternfly/react-icons';\nimport { SortByDirection } from '@patternfly/react-table/dist/js';\nimport { findIndex, flatten } from 'lodash';\nimport qs from 'query-string';\nimport React from 'react';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport { Link } from 'react-router-dom';\nimport messages from '../Messages';\nimport AdvisoriesIcon from '../PresentationalComponents/Snippets/AdvisoriesIcon';\nimport { systemsListColumns, packageSystemsColumns } from '../SmartComponents/Systems/SystemsListAssets';\nimport {\n    advisorySeverities,\n    compoundSortValues,\n    filterCategories,\n    multiValueFilters\n} from './constants';\nimport { intl } from './IntlProvider';\nimport { generateFilter } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nexport const removeUndefinedObjectItems = (originalObject) => {\n    const newObject = JSON.parse(JSON.stringify(originalObject));\n    Object.keys(newObject).forEach(key => newObject[key] === undefined && delete newObject[key]);\n    return newObject;\n};\n\nexport const convertLimitOffset = (limit, offset) => {\n    return [offset / limit + 1, limit];\n};\n\nexport const transformPairs = (input, remediationIdentifier) => {\n    //displays NoDataModal when there is no patch updates available\n    if (!Object.keys(input?.data || {}).length) {\n        return false;\n    }\n\n    return {\n        issues: Object.keys(input.data).map(advisory => {\n            return {\n                id: `${remediationIdentifier}:${advisory}`,\n                description: advisory,\n                systems: input.data[advisory]\n            };\n        }\n        )\n    };\n};\n\nexport const createSortBy = (header, values, offset) => {\n    if (values) {\n        let [column] = values;\n        let multiple = values.join();\n        let direction =\n            column[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n        Object.keys(compoundSortValues).forEach(col => {\n            Object.keys(compoundSortValues[col]).forEach(dir => {\n                if (compoundSortValues[col][dir] === multiple) {\n                    column = col;\n                    direction = dir;\n                }\n            });\n        });\n\n        column = column.replace(/^(-|\\+)/, '');\n        const index = findIndex(header, item => item.key === column);\n        let sort = {\n            index: index + offset,\n            direction\n        };\n        return sort;\n    }\n\n    return {};\n};\n\nexport const createSystemsSortBy = (orderBy, orderDirection, hasLastUpload) => {\n    orderBy = (orderBy === 'updated' && !hasLastUpload) && 'last_upload' ||\n        (orderBy === 'updated' && hasLastUpload) && packageSystemsColumns[0].key || orderBy;\n\n    let sort = `${orderDirection === 'ASC' ? '' : '-'}${orderBy}`;\n\n    //if orderBy is for a compound column reset sort value to relative compound sort value\n    Object.keys(compoundSortValues).forEach(col => {\n        if (col === orderBy) {\n            sort = compoundSortValues[col][orderDirection.toLowerCase()];\n        }\n    });\n\n    return sort;\n};\n\nexport const addOrRemoveItemFromSet = (targetObj, inputArr) => {\n    const inputObj = inputArr.reduce(\n        (obj, item) => ((obj[item.rowId] = item.value || undefined), obj),\n        {}\n    );\n    const result = { ...targetObj, ...inputObj };\n    return result;\n};\n\nexport const getNewSelectedItems = (selectedItems, currentItems) => {\n    let payload = [].concat(selectedItems).map(item => ({ rowId: item.id, value: item.selected }));\n    return addOrRemoveItemFromSet(\n        currentItems,\n        payload\n    );\n};\n\n// for expandable rows only\nexport const getRowIdByIndexExpandable = (arrayOfObjects, index) => {\n    return arrayOfObjects[index / 2].id;\n};\n\nexport const getOffsetFromPageLimit = (page, limit) => {\n    return page * limit - limit;\n};\n\nexport const getLimitFromPageSize = limit => {\n    return limit;\n};\n\nexport function truncate(str, max, end) {\n    return str.length > max ? (\n        <React.Fragment>\n            {str.substr(0, max - 1)}\n            ...&nbsp;{end}\n        </React.Fragment>\n    ) : str;\n}\n\nexport const truncateDescription = (description, wordLength, setWordLength) => (\n    truncate(preserveNewlines(description), wordLength,\n        <a onClick={() => setWordLength(description.length)}>\n            {intl.formatMessage(messages.linksReadMore)}\n        </a>)\n);\n\nexport function createAdvisoriesIcons([rhea, rhba, rhsa, other]) {\n    return (\n        <Flex flex={{ default: 'inlineFlex' }} style={{ flexWrap: 'nowrap' }}>\n            {[rhea, rhba, rhsa].every(item => item === 0) &&\n                'No applicable advisories'}\n            {rhsa !== 0 && (\n                <FlexItem spacer={{ default: 'spacerXs' }}>\n                    <AdvisoriesIcon tooltipText={'Security advisories'} count={rhsa} Icon={SecurityIcon} />\n                </FlexItem>)}\n            {rhba !== 0 && (\n                <FlexItem spacer={{ default: 'spacerXs' }}>\n                    <AdvisoriesIcon tooltipText={'Bug fixes'} count={rhba} Icon={BugIcon} />\n                </FlexItem>)}\n            {rhea !== 0 && (\n                <FlexItem spacer={{ default: 'spacerXs' }}>\n                    <AdvisoriesIcon tooltipText={'Enhancements'} count={rhea} Icon={EnhancementIcon} />\n                </FlexItem>)}\n            {other !== 0 && (\n                <FlexItem spacer={{ default: 'spacerXs' }}>\n                    <AdvisoriesIcon tooltipText={'Other'} count={other} Icon={FlagIcon} />\n                </FlexItem>)}\n        </Flex>\n    );\n}\n\nexport function createUpgradableColumn(value) {\n    return <div style={{\n        display: 'flex',\n        alignItems: 'center'\n    }}>\n        {\n            value && <LongArrowAltUpIcon style={{ color: 'var(--pf-global--palette--blue-400)' }} />\n            || <CheckIcon style={{ color: 'var(--pf-global--success-color--100)' }} />\n        }\n        {<span style={{ marginLeft: 'var(--pf-global--spacer--sm)' }}>\n            {\n                value && 'Upgradable' || 'Up-to-date'\n            }\n        </span>}\n    </div>;\n}\n\nexport function getSeverityById(id) {\n    return (\n        advisorySeverities.find(item => item.value === id) ||\n        advisorySeverities[0]\n    );\n}\n\nexport function handlePatchLink(type, name, body) {\n    if (location.href.indexOf('inventory') === -1) {\n        return (\n            <Link to={`/${type}/${name}`}>\n                {body === undefined ? name : body}\n            </Link>\n        );\n    } else {\n        return (\n            <a href={`${document.baseURI}insights/patch/${type}/${name}`}>\n                {body || name}\n            </a>\n        );\n    }\n}\n\nexport const arrayFromObj = items =>\n    Object.values(items).filter(value => value);\n\nexport const remediationProvider = (issues, systems, remediationIdentifier) => {\n    issues = [].concat(issues);\n    systems = [].concat(systems);\n    return issues.length && systems.length\n        ? {\n            issues: issues.map(item => ({\n                id: `${remediationIdentifier}:${item}`,\n                description: item\n            })),\n            systems\n        }\n        : false;\n};\n\nexport const remediationProviderWithPairs = (issuePairs, transformFunc, remediationIdentifier) => {\n    return issuePairs ? transformFunc(issuePairs, remediationIdentifier) : false;\n};\n\nexport const getFilterValue = (category, key) => {\n    const filterCategory = filterCategories[category];\n    if (filterCategory) {\n        const filterOption = filterCategory.values.find(\n            item => item.value === key\n        );\n        return filterOption || { apiValue: key };\n    } else {\n        return { apiValue: key };\n    }\n};\n\nexport const encodeParams = (parameters, shouldTranslateKeys) => {\n    const calculateWorkloads = ({ sap_sids, ...restOfProfile }) => {\n        let result = '';\n        Object.entries(generateFilter({ system_profile: restOfProfile })).forEach(entry => {\n            const [key, value] = entry;\n            result = `${result}&${key}=${value}`;\n        });\n\n        const SIDsFilter = sap_sids?.map(sid => `filter[system_profile][sap_sids][in]=${sid}`).join('&');\n\n        return result.concat(sap_sids ? `&${SIDsFilter}#SIDs=${sap_sids.join(',') }` : '');\n    };\n\n    const flattenFilters = filter => {\n        let result = {};\n        filter &&\n            Object.entries(filter).forEach(item => {\n                let [key, value] = item;\n                value = shouldTranslateKeys && getFilterValue(key, value).apiValue || value;\n                const operator = ([].concat(value).length > 1 || multiValueFilters.includes(key)) ? 'in:' : '';\n                result = {\n                    ...result,\n                    [`filter[${key}]`]: `${operator}${value.toString()}`\n                };\n            });\n        return result;\n    };\n\n    let { filter, systemProfile = {}, ...allParams } = parameters;\n\n    allParams = { ...allParams, ...flattenFilters(filter) };\n    let params = [];\n    Object.keys(allParams).forEach(key => {\n        const argKey = encodeURIComponent(key);\n        const argValue = encodeURIComponent(allParams[key]);\n\n        if (!['', undefined, null].some(value => [argValue, key].includes(value))) {\n            if (!['selectedTags', 'systemProfile'].includes(key)) {\n                params.push(argKey.concat('=').concat(argValue));\n            } else if (key === 'selectedTags') {\n                params.push.apply(params, allParams[key]);\n            }\n        }\n    });\n\n    const workloadsFilter = (Object.keys(systemProfile).length > 0)\n        && calculateWorkloads(systemProfile) || '';\n\n    return '?'.concat(params.join('&')).concat(workloadsFilter);\n};\n\nexport const encodeApiParams = parameters => {\n    return encodeParams(parameters, true);\n};\n\nexport const encodeURLParams = parameters => {\n    delete parameters.id;\n    let urlParams = { ...parameters };\n    delete urlParams.selectedTags;\n    return encodeParams(removeUndefinedObjectItems(urlParams), false);\n};\n\nexport const decomposeFilterValue = filterValue => {\n    if (typeof(filterValue) === 'string' && filterValue.startsWith('in:')) {\n        const values = filterValue.slice(3);\n        return values.split(',');\n    }\n\n    return filterValue;\n};\n\nexport const decodeQueryparams = queryString => {\n    const parsed = qs.parse(queryString);\n    const res = {};\n    Object.keys(parsed).forEach(key => {\n        if (!key.startsWith('filter[system_profile]')) {\n            const convertedToInt = parseInt(parsed[key], 10);\n            const typeHandledParam = isNaN(convertedToInt) ? parsed[key] : convertedToInt;\n            const bracketIndex = key.search(/\\[.*\\]/);\n            if (bracketIndex > 0) {\n                const objParent = key.slice(0, bracketIndex);\n                const objKey = key.slice(bracketIndex + 1, -1);\n                res[objParent] = {\n                    ...res[objParent],\n                    [objKey]: decomposeFilterValue(typeHandledParam)\n                };\n            } else {\n                res[key] = typeHandledParam;\n            }\n        }\n    });\n    return res;\n};\n\nexport const buildFilterChips = (filters, search, searchChipLabel = 'Search') => {\n\n    let filterConfig = [];\n    const buildChips = (filters, category) => {\n        if (multiValueFilters.includes(category)) {\n            const filterValues = filters[category] && (typeof(filters[category]) === 'string' && filters[category].split(',')\n                || filters[category]) || [];\n            return filterValues.map(value => ({\n                name: value,\n                id: category,\n                value\n            }));\n        } else {\n            const { values } = filterCategories[category];\n\n            if (!filters[category]) {\n                return [];\n            }\n\n            return [].concat(filters[category]).map(filterValue => {\n                const match = values.find(\n                    item =>\n                        item.value.toString() === filterValue.toString()\n                );\n                return {\n                    name: match.label,\n                    value: filterValue,\n                    id: match.value\n                };\n            });\n        }\n    };\n\n    const processFilters = () => {\n        let categories = Object.keys(filters).filter(\n            item =>\n                filters[item] !== '' && [].concat(filters[item]).length !== 0\n        );\n        filterConfig = filterConfig.concat(\n            categories.map(category => {\n                const label = category === 'installed_evra' && 'Package version' || filterCategories[category].label;\n                return {\n                    category: label,\n                    id: category,\n                    chips: buildChips(filters, category)\n                };\n            })\n        );\n    };\n\n    const processSearch = () => {\n        filterConfig = filterConfig.concat([\n            {\n                category: searchChipLabel,\n                id: 'search',\n                chips: [\n                    {\n                        name: search,\n                        value: search\n                    }\n                ]\n            }\n        ]);\n    };\n\n    filters && processFilters();\n    search && processSearch();\n\n    return filterConfig;\n};\n\nexport const changeListParams = (oldParams, newParams) => {\n    const newState = { ...oldParams, ...newParams };\n    const offsetResetParams = ['filter', 'search', 'limit', 'selectedTags'];\n    if (offsetResetParams.some(item => newParams.hasOwnProperty(item))) {\n        newState.offset = 0;\n    }\n\n    if (newParams.hasOwnProperty('filter')) {\n        newState.filter = { ...oldParams.filter, ...newParams.filter };\n\n        //we need explicitly remove 'undefined' filters for safety\n        Object.keys(newState.filter).forEach(key => newState.filter[key] === undefined && delete newState.filter[key]);\n    }\n\n    if (newState.hasOwnProperty('tags')) {\n        newState && delete newState.tags;\n    }\n\n    return newState;\n};\n\nexport function subtractDate(days) {\n    const date = new Date();\n    date.setDate(date.getDate() - days);\n    return date.toISOString();\n}\n\nexport function preserveNewlines(input) {\n    return input && input.replace(\n        new RegExp('\\\\n(?=[^\\\\n])', 'g'),\n        ''\n    );\n}\n\nexport function sortCves(cves, index, direction) {\n\n    const sortedCves = cves.sort(\n        ({ cells: aCells }, { cells: bCells }) => {\n            const aCell = aCells[index].value || aCells[index].title;\n            const bCell = bCells[index].value || bCells[index].title;\n\n            const stringA = aCell.toString().toUpperCase();\n            const stringB = bCell.toString().toUpperCase();\n\n            return stringA.localeCompare(stringB);\n        }\n    );\n\n    return {\n        sortBy: { index, direction },\n        sortedCves: direction === SortByDirection.asc ? sortedCves : sortedCves.reverse()\n    };\n\n}\n\nexport const createOSColumn = ({ osName, rhsm }) => (rhsm === '' || rhsm === undefined) && osName || (\n    <Tooltip\n        content={\n            intl.formatMessage(messages.textLockVersionTooltip, { lockedVersion: rhsm })\n        }\n    >\n        <Flex flex={{ default: 'inlineFlex' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>{osName}</FlexItem>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n                <InfoCircleIcon size=\"sm\" color={'var(--pf-global--info-color--100)'} />\n            </FlexItem>\n        </Flex>\n    </Tooltip>\n);\n\nexport const removeUndefinedObjectKeys = (selectedRows) => Object.keys(selectedRows).filter(row => selectedRows[row]);\n\nexport const prepareEntitiesParams = (parameters) => {\n    const offset = parameters.offset || getOffsetFromPageLimit(parameters.page || 1, parameters.perPage || 20);\n    const limit = parameters.limit || getLimitFromPageSize(parameters.perPage || 20);\n\n    const apiParams = { ...parameters, offset, limit };\n\n    //we need explicitly remove 'undefined' parameters for safety\n    return removeUndefinedObjectItems(apiParams);\n};\n\nexport const filterRemediatableSystems = result => ({\n    data: result?.data.filter(system => {\n        const {\n            packages_installed: installedPckg,\n            packages_updatable: updatablePckg,\n            rhba_count: rhba,\n            rhsa_count: rhsa,\n            rhea_count: rhea\n        } = system.attributes || {};\n\n        const isDisabled = updatablePckg === 0 || [installedPckg, rhba, rhsa, rhea].every(count => count === 0);\n\n        return !isDisabled;\n    })\n});\n\nexport const filterRemediatablePackageSystems = result => ({ data: result.data.filter(system => system.updatable) });\n\nexport const persistantParams = (patchParams, decodedParams) => {\n    const persistantParams = { ...patchParams, ...decodedParams };\n    return (\n        {\n            page: Number(persistantParams.page || 1),\n            perPage: Number(persistantParams.perPage || 20),\n            ...(persistantParams.sort && {\n                sortBy: {\n                    key: persistantParams.sort.replace(/^-/, ''),\n                    direction: persistantParams.sort.match(/^-/) ? 'desc' : 'asc'\n                }\n            })\n        }\n    );\n};\n\nexport const handleLongSynopsis = (synopsis) => {\n    return (\n        <LinesEllipsis\n            text={synopsis}\n            maxLine='1'\n            ellipsis='(...)'\n            trimRight\n            basedOn='letters'\n        />\n    );\n};\n\nexport const isRHAdvisory = (name) => {\n    return /^(RHEA|RHBA|RHSA)/.test(name);\n};\n\nexport const buildTagString = (tag) => {\n    return `${tag.category}/${tag.values?.tagKey}=${tag.value?.tagValue}`;\n};\n\nexport const mapGlobalFilters = (tags, SIDs, workloads = {}) => {\n    let tagsInUrlFormat = [];\n    tags && tags.forEach((tag, index) => {\n        let tagGruop = tag;\n        if (typeof tag === 'object') {\n            tagGruop = tag?.values.map(value => `tags=${encodeURIComponent(`${tag.category}/${value.tagKey}=${value.value}`)}`);\n            tagsInUrlFormat[index] = Array.isArray(tagGruop) && flatten(tagGruop) || tagGruop;\n        }\n        else {\n            tagsInUrlFormat[index] = `tags=${encodeURIComponent(tagGruop)}`;\n        }\n\n    });\n\n    const globalFilterConfig = { selectedTags: [], systemProfile: {} };\n\n    globalFilterConfig.systemProfile = {\n        ...workloads?.SAP?.isSelected && { sap_system: true },\n        ...workloads?.['Ansible Automation Platform']?.isSelected\n        && { ansible: { controller_version: 'not_nil' } },\n        ...workloads?.['Microsoft SQL']?.isSelected\n        && { mssql: { version: 'not_nil' } },\n        ...SIDs?.length > 0 && { sap_sids: SIDs }\n    };\n\n    tagsInUrlFormat && (globalFilterConfig.selectedTags = tagsInUrlFormat);\n\n    return globalFilterConfig;\n\n};\n\nexport const systemsColumnsMerger = (defaultColumns, isPatchSetEnabled) => {\n    let lastSeen = defaultColumns.filter(({ key }) => key === 'updated');\n    lastSeen = [{ ...lastSeen[0], key: 'last_upload' }];\n\n    let nameAndTag = defaultColumns.filter(({ key }) => key === 'display_name' || key === 'tags');\n\n    return [...nameAndTag, ...systemsListColumns(isPatchSetEnabled), lastSeen[0]];\n};\n\nexport const convertDateToISO = (dateString)  => {\n    const parsedDate = Date.parse(dateString);\n\n    if (isNaN(parsedDate) === false) {\n        let date = new Date(parsedDate);\n\n        const tzOffset = -date.getTimezoneOffset();\n        const diff = tzOffset >= 0 ? '+' : '-';\n        const pad = n => `${Math.floor(Math.abs(n))}`.padStart(2, '0');\n\n        return date.getFullYear() +\n                '-' + pad(date.getMonth() + 1) +\n                '-' + pad(date.getDate()) +\n                'T' + pad(date.getHours()) +\n                ':' + pad(date.getMinutes()) +\n                ':' + pad(date.getSeconds()) +\n                diff + pad(tzOffset / 60) +\n                ':' + pad(tzOffset % 60);\n    }\n\n    return dateString;\n};\n\nexport const convertIsoToDate = (isoDate) => {\n    if (!isoDate) {\n        return '';\n    }\n\n    const dateObject = new Date(isoDate);\n    return `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1).toString().padStart(2, '0')}` +\n        `-${dateObject.getDate().toString().padStart(2, '0')}`;\n};\n\nexport const filterSelectedActiveSystemIDs = (selectedSystemsObject) => {\n    const formValueSystemIDs = [];\n    if (typeof selectedSystemsObject === 'object') {\n        Object.keys(selectedSystemsObject).forEach((key) => {\n            if (selectedSystemsObject[key]) {\n                formValueSystemIDs.push(key);\n            }\n        });\n    }\n\n    return formValueSystemIDs;\n};\n\nexport const buildSelectedSystemsObj = (systemsIDs, formValueSystems) => {\n\n    const mergedSystems = [...systemsIDs, ...filterSelectedActiveSystemIDs(formValueSystems)];\n\n    const assignedSystemsObject = mergedSystems?.reduce((object, system) => {\n        object[system] = true;\n        return object;\n    }, {});\n\n    return assignedSystemsObject;\n};\n\nexport const objUndefinedToFalse = (object) =>\n    Object.keys(object).reduce((modifiedObject, key) => {\n        modifiedObject[key] =  object[key] === undefined ? false : object[key];\n        return modifiedObject;\n    }, {});\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { getStore } from './store';\nimport getBaseName from './Utilities/getBaseName';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';\nimport messages from '../locales/en.json';\n\nconst Patchman = () => (<div className=\"patch-root\">\n    <IntlProvider locale={navigator.language.slice(0, 2)} messages={messages}>\n        <Provider store={getStore()}>\n            <Router basename={getBaseName(window.location.pathname)}>\n                <App style={{ overflow: 'clip', background: 'red', 'z-index': '1000' }} />\n            </Router>\n        </Provider>\n    </IntlProvider>\n</div>\n);\n\nexport default Patchman;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Patchman from './AppEntry';\n\nReactDOM.render(\n    <Patchman />,\n    document.getElementById('root')\n);\n"],"names":["exports","action_types_1","notification","type","ADD_NOTIFICATION","payload","index","REMOVE_NOTIFICATION","CLEAR_NOTIFICATIONS","SystemUpToDate","style","paddingTop","icon","size","color","marginBottom","Title","headingLevel","intl","messages","removeUndefinedObjectItems","originalObject","newObject","JSON","parse","stringify","Object","keys","forEach","key","undefined","convertLimitOffset","limit","offset","transformPairs","input","remediationIdentifier","data","length","issues","map","advisory","id","description","systems","createSortBy","header","values","column","multiple","join","direction","SortByDirection","compoundSortValues","col","dir","replace","item","createSystemsSortBy","orderBy","orderDirection","hasLastUpload","packageSystemsColumns","sort","toLowerCase","addOrRemoveItemFromSet","targetObj","inputArr","inputObj","reduce","obj","rowId","value","getNewSelectedItems","selectedItems","currentItems","concat","selected","getRowIdByIndexExpandable","arrayOfObjects","getOffsetFromPageLimit","page","getLimitFromPageSize","truncate","str","max","end","substr","truncateDescription","wordLength","setWordLength","RegExp","onClick","createAdvisoriesIcons","rhea","rhba","rhsa","other","flex","default","flexWrap","every","spacer","tooltipText","count","Icon","SecurityIcon","BugIcon","EnhancementIcon","FlagIcon","createUpgradableColumn","display","alignItems","marginLeft","getSeverityById","advisorySeverities","handlePatchLink","name","body","location","href","indexOf","Link","to","document","baseURI","arrayFromObj","items","filter","remediationProvider","remediationProviderWithPairs","issuePairs","transformFunc","encodeParams","parameters","shouldTranslateKeys","systemProfile","allParams","result","entries","category","filterCategory","filterCategories","find","apiValue","getFilterValue","operator","multiValueFilters","toString","flattenFilters","params","argKey","encodeURIComponent","argValue","some","includes","push","apply","workloadsFilter","sap_sids","restOfProfile","generateFilter","system_profile","entry","SIDsFilter","sid","calculateWorkloads","encodeApiParams","encodeURLParams","urlParams","selectedTags","decodeQueryparams","queryString","parsed","qs","res","startsWith","convertedToInt","parseInt","typeHandledParam","isNaN","bracketIndex","search","objParent","slice","objKey","filterValue","split","buildFilterChips","filters","searchChipLabel","filterConfig","buildChips","match","label","processFilters","categories","chips","processSearch","changeListParams","oldParams","newParams","newState","hasOwnProperty","tags","subtractDate","days","date","Date","setDate","getDate","toISOString","sortCves","cves","sortedCves","aCells","cells","bCells","aCell","title","bCell","stringA","toUpperCase","stringB","localeCompare","sortBy","reverse","createOSColumn","osName","rhsm","Tooltip","content","lockedVersion","removeUndefinedObjectKeys","selectedRows","row","prepareEntitiesParams","perPage","apiParams","filterRemediatableSystems","system","attributes","installedPckg","packages_installed","updatablePckg","packages_updatable","rhba_count","rhsa_count","rhea_count","filterRemediatablePackageSystems","updatable","persistantParams","patchParams","decodedParams","Number","handleLongSynopsis","synopsis","text","maxLine","ellipsis","trimRight","basedOn","isRHAdvisory","test","mapGlobalFilters","SIDs","workloads","tagsInUrlFormat","tag","tagGruop","tagKey","Array","isArray","globalFilterConfig","SAP","isSelected","sap_system","ansible","controller_version","mssql","version","systemsColumnsMerger","defaultColumns","isPatchSetEnabled","lastSeen","nameAndTag","systemsListColumns","convertDateToISO","dateString","parsedDate","tzOffset","getTimezoneOffset","diff","pad","n","Math","floor","abs","padStart","getFullYear","getMonth","getHours","getMinutes","getSeconds","convertIsoToDate","isoDate","dateObject","filterSelectedActiveSystemIDs","selectedSystemsObject","formValueSystemIDs","buildSelectedSystemsObj","systemsIDs","formValueSystems","mergedSystems","object","objUndefinedToFalse","modifiedObject","className","locale","navigator","language","store","getStore","basename","getBaseName","window","pathname","App","overflow","background","ReactDOM","getElementById"],"sourceRoot":""}