{"version":3,"file":"js/CvesModal.291a0e6b4a0067dec3f6.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/Backdrop/backdrop.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/ModalBox/modal-box.mjs","webpack:///./node_modules/@patternfly/react-styles/css/utilities/Accessibility/accessibility.mjs","webpack:///./src/SmartComponents/AdvisoryDetail/CvesModal.js"],"sourcesContent":["import './backdrop.css';\nexport default {\n  \"backdrop\": \"pf-c-backdrop\",\n  \"backdropOpen\": \"pf-c-backdrop__open\"\n};","import './modal-box.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"modalBox\": \"pf-c-modal-box\",\n  \"modalBoxBody\": \"pf-c-modal-box__body\",\n  \"modalBoxDescription\": \"pf-c-modal-box__description\",\n  \"modalBoxFooter\": \"pf-c-modal-box__footer\",\n  \"modalBoxHeader\": \"pf-c-modal-box__header\",\n  \"modalBoxHeaderMain\": \"pf-c-modal-box__header-main\",\n  \"modalBoxTitle\": \"pf-c-modal-box__title\",\n  \"modalBoxTitleIcon\": \"pf-c-modal-box__title-icon\",\n  \"modalBoxTitleText\": \"pf-c-modal-box__title-text\",\n  \"modifiers\": {\n    \"sm\": \"pf-m-sm\",\n    \"md\": \"pf-m-md\",\n    \"lg\": \"pf-m-lg\",\n    \"alignTop\": \"pf-m-align-top\",\n    \"danger\": \"pf-m-danger\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"default\": \"pf-m-default\",\n    \"info\": \"pf-m-info\",\n    \"help\": \"pf-m-help\",\n    \"icon\": \"pf-m-icon\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './accessibility.css';\nexport default {\n  \"hidden\": \"pf-u-hidden\",\n  \"hiddenOnLg\": \"pf-u-hidden-on-lg\",\n  \"hiddenOnMd\": \"pf-u-hidden-on-md\",\n  \"hiddenOnSm\": \"pf-u-hidden-on-sm\",\n  \"hiddenOnXl\": \"pf-u-hidden-on-xl\",\n  \"hiddenOn_2xl\": \"pf-u-hidden-on-2xl\",\n  \"screenReader\": \"pf-u-screen-reader\",\n  \"screenReaderOnLg\": \"pf-u-screen-reader-on-lg\",\n  \"screenReaderOnMd\": \"pf-u-screen-reader-on-md\",\n  \"screenReaderOnSm\": \"pf-u-screen-reader-on-sm\",\n  \"screenReaderOnXl\": \"pf-u-screen-reader-on-xl\",\n  \"screenReaderOn_2xl\": \"pf-u-screen-reader-on-2xl\",\n  \"visible\": \"pf-u-visible\",\n  \"visibleOnLg\": \"pf-u-visible-on-lg\",\n  \"visibleOnMd\": \"pf-u-visible-on-md\",\n  \"visibleOnSm\": \"pf-u-visible-on-sm\",\n  \"visibleOnXl\": \"pf-u-visible-on-xl\",\n  \"visibleOn_2xl\": \"pf-u-visible-on-2xl\"\n};","import React, { useState, useMemo } from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport messages from '../../Messages';\nimport { intl } from '../../Utilities/IntlProvider';\nimport TableView from '../../PresentationalComponents/TableView/TableView';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport { cvesTableColumns } from '../../PresentationalComponents/TableView/TableViewAssets';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCves } from '../../store/Actions/Actions';\nimport propTypes from 'prop-types';\nimport { createCvesRows } from '../../Utilities/DataMappers';\nimport { sortCves } from '..//../Utilities/Helpers';\nimport { SortByDirection } from '@patternfly/react-table';\n\nconst CvesModal = ({ cveIds }) =>{\n    const dispatch = useDispatch();\n    const [cves, setCves] = useState([]);\n    const [rows, setRows] = useState([]);\n    const [page, setPage] = useState(1);\n    const [perPage, setPerPage] = useState(10);\n    const [search, setSearch] = useState(undefined);\n    const [sortBy, setSortBy] = useState({\n        direction: SortByDirection.asc,\n        index: 0\n    });\n\n    const data = useSelector(({ CvesListStore }) => CvesListStore.rows);\n\n    const status = useSelector(\n        ({ CvesListStore }) => CvesListStore.status\n    );\n\n    React.useEffect(() => {\n        dispatch(fetchCves({ cveIds }));\n    }, []);\n\n    React.useMemo(() => {\n        setRows(cves.slice((page - 1) * perPage, page * perPage));\n    }, [cves, page, perPage, sortBy]);\n\n    useMemo(() => {\n        const sortedCves = (search !== undefined && search !== '')\n            && data.filter(\n                cve => {\n                    const { attributes: { synopsis } } = cve;\n                    return synopsis && search && (synopsis.toLowerCase().includes(search.toLowerCase()));\n                }\n            ) || data;\n\n        setCves(createCvesRows((sortedCves.length !== 0 || search) && sortedCves || data));\n    }, [search, data]);\n\n    const handleClose = () => {\n        setRows(undefined);\n    };\n\n    const handleFilter = ({ search }) =>{\n        setPage(page);\n        setSearch(search);\n    };\n\n    const handlePageChange = (_, page) => {\n        setPage(page);\n    };\n\n    const handlePerPageChange = (_, perPage) => {\n        setPage(1);\n        setPerPage(perPage);\n    };\n\n    const handleSort = (_, index, direction) => {\n        const { sortBy, sortedCves } = sortCves(cves, index, direction);\n\n        setSortBy(sortBy);\n        setCves(sortedCves);\n    };\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant='small'\n                title={intl.formatMessage(messages.labelsCves)}\n                isOpen={Boolean(rows)}\n                onClose={handleClose}\n            >\n                <TableView\n                    columns={cvesTableColumns}\n                    onSetPage={handlePageChange}\n                    onPerPageSelect={handlePerPageChange}\n                    apply={handleFilter}\n                    tableOUIA={'cves-table'}\n                    paginationOUIA={'cves-pagination'}\n                    onSort={handleSort}\n                    sortBy={sortBy}\n                    store={{\n                        rows,\n                        metadata: { limit: perPage, offset: (page - 1) * perPage, total_items: cves && cves.length },\n                        status, queryParams: { filter: {}, search }\n                    }}\n                    filterConfig={{\n                        items: [\n                            searchFilter(handleFilter, search, '',\n                                intl.formatMessage(messages.labelsFiltersCvesSearchPlaceHolder))\n                        ]\n                    }}\n                />\n            </Modal>\n        </React.Fragment>\n    );\n\n};\n\nCvesModal.propTypes = {\n    cveIds: propTypes.array\n};\n\nexport default CvesModal;\n"],"names":["CvesModal","cveIds","dispatch","useDispatch","useState","cves","setCves","rows","setRows","page","setPage","perPage","setPerPage","undefined","search","setSearch","direction","SortByDirection","index","sortBy","setSortBy","data","useSelector","CvesListStore","status","React","fetchCves","slice","useMemo","sortedCves","filter","cve","synopsis","attributes","toLowerCase","includes","createCvesRows","length","handleFilter","Modal","variant","title","intl","messages","isOpen","Boolean","onClose","columns","cvesTableColumns","onSetPage","_","onPerPageSelect","apply","tableOUIA","paginationOUIA","onSort","sortCves","store","metadata","limit","offset","total_items","queryParams","filterConfig","items","searchFilter","propTypes"],"sourceRoot":""}