{"version":3,"sources":["webpack:///./src/PresentationalComponents/Snippets/SystemUpToDate.js","webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js"],"names":["SystemUpToDate","style","paddingTop","icon","size","color","marginBottom","Title","headingLevel","intl","messages","useEffect","elem","document","querySelector","window","insights","chrome","isChrome2","overflow","className","locale","navigator","language","slice","Provider","store","getStore","basename","getBaseName","location","pathname","App","background","ReactDOM","getElementById"],"mappings":"gVAMaA,EAAiB,kBAC1B,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAYC,MAAO,CAAEC,WAAY,KAC7B,kBAAC,IAAD,CAAgBC,KAAM,kBAAI,kBAAC,UAAD,CAAiBC,KAAK,KAAKC,MAAO,uCACxDJ,MAAO,CAAEK,aAAc,SAC3B,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKJ,KAAK,MACzBK,kBAAmBC,mCAExB,kBAAC,IAAD,KACKD,kBAAmBC,+B,0JCkBpC,QAxBiB,WAWb,OAVAC,gBAAU,WAKN,IAAMC,EAAOC,SAASC,cAAc,cAC/BC,OAAOC,SAASC,OAAOC,WAAaN,IACrCA,EAAKX,MAAMkB,SAAW,aAE3B,IAEC,yBAAKC,UAAU,cACX,kBAAC,KAAD,CAAcC,OAAQC,UAAUC,SAASC,MAAM,EAAG,GAAId,SAAUA,GAC5D,kBAAC,EAAAe,SAAD,CAAUC,OAAOC,UACb,kBAAC,gBAAD,CAAQC,UAAUC,OAAYd,OAAOe,SAASC,WAC1C,kBAACC,EAAA,EAAD,CAAK/B,MAAO,CAAEkB,SAAU,OAAQc,WAAY,MAAO,UAAW,eCrBtFC,WACI,kBAAC,EAAD,MACArB,SAASsB,eAAe","file":"js/318.4bf8d795dcc615ef5ceb.js","sourcesContent":["import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Title } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nexport const SystemUpToDate = () => (\n    <Bullseye>\n        <EmptyState style={{ paddingTop: 40 }}>\n            <EmptyStateIcon icon={()=><CheckCircleIcon size='xl' color={'var(--pf-global--success-color--200)' }\n                style={{ marginBottom: 15 }} />}/>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                {intl.formatMessage(messages.statesNoApplicableAdvisories)}\n            </Title>\n            <EmptyStateBody>\n                {intl.formatMessage(messages.statesSystemUpToDate)}\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n","import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { getStore } from './store';\nimport getBaseName from './Utilities/getBaseName';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';\nimport messages from '../locales/en.json';\n\nconst Patchman = () => {\n    useEffect(() => {\n        /**\n         * Temporary overflow fix for chrome 1. There is no risk breaking styles for other apps, no SPA\n         * Can be deleted once chrome 2 is deployed everywhere. Overflow is fixed by \"patch-root\" class in chrome 2\n         */\n        const elem = document.querySelector('main#root');\n        if (!window.insights.chrome.isChrome2 && elem) {\n            elem.style.overflow = 'inherit';\n        }\n    }, []);\n    return (\n        <div className=\"patch-root\">\n            <IntlProvider locale={navigator.language.slice(0, 2)} messages={messages}>\n                <Provider store={getStore()}>\n                    <Router basename={getBaseName(window.location.pathname)}>\n                        <App style={{ overflow: 'clip', background: 'red', 'z-index': '1000' }} />\n                    </Router>\n                </Provider>\n            </IntlProvider>\n        </div>\n    );\n};\n\nexport default Patchman;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Patchman from './AppEntry';\n\nReactDOM.render(\n    <Patchman />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}