{"version":3,"sources":["webpack:///./src/SmartComponents/Systems/SystemsListAssets.scss","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/SmartComponents/Systems/SystemsListAssets.js","webpack:///./src/SmartComponents/Systems/SystemsListAssets.scss?7555","webpack:///./node_modules/@patternfly/react-core/dist/js/styles/sizes.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Stack/Stack.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Stack/StackItem.js","webpack:///./src/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/Spinner.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Grid/Grid.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Grid/GridItem.js","webpack:///./src/PresentationalComponents/PackageHeader/PackageHeader.js","webpack:///./src/SmartComponents/PackageSystems/PackageSystems.js","webpack:///./src/SmartComponents/PackageDetail/PackageDetail.js"],"names":["module","exports","push","i","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","arrayLikeToArray","Array","isArray","iter","Symbol","iterator","Object","from","TypeError","init","columns","rows","entities","modifyInventory","hosts","state","loaded","lastSeenColumn","filter","key","transforms","sortable","InventoryHosts","PatchHosts","map","InventoryRow","patchLastSeen","find","patchRow","id","updated","attributes","last_upload","modifyPackageSystems","inventoryEntitiesReducer","store","action","type","packagesSystemsInventoryReducer","systemsListColumns","title","composed","props","width","renderFunc","value","createAdvisoriesIcons","packageSystemsColumns","createUpgradableColumn","systemsRowActions","showRemediationModal","onClick","event","rowId","rowData","fetchApplicableSystemAdvisoriesApi","limit","then","res","remediationProvider","data","item","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","idx","Error","dispose","defineProperty","DeviceSizes","BaseSizes","Stack","tslib_1","React","__importStar","stack_1","__importDefault","react_styles_1","_a","hasGutter","className","children","component","__rest","Component","createElement","assign","css","default","stack","modifiers","gutter","displayName","StackItem","isFilled","stackItem","fill","WithLoaderVariants","spinner","skeleton","loaderMap","size","isDark","centered","WithLoader","loading","variant","propTypes","bool","string","any","_interopDefault","e","_extends","objectWithoutProperties","React__default","PropTypes__default","classNames","Spinner","r","t","s","_objectWithoutProperties","_defineProperty","role","Grid","grid_1","sizes_1","span","classes","grid","entries","forEach","propKey","gridSpanModifier","propValue","GridItem","rowSpan","offset","gridItem","classModifier","rowSpanKey","offsetKey","spanValue","rowSpanValue","offsetValue","PackageHeader","isLoading","style","minHeight","md","sm","whiteSpace","preserveNewlines","description","object","PackageSystems","packageName","dispatch","useDispatch","useState","InventoryCmp","setInventoryCmp","rawPackageSystems","useSelector","PackageSystemsStore","status","selectedRows","useMemo","createPackageSystemsRows","metadata","queryParams","inventoryColumns","handleRefresh","useHandleRefresh","apply","search","useEffect","clearPackageSystemsStore","fetchPackageSystemsAction","fetchInventory","getStore","insights","loadInventory","ReactRedux","reactRouterDom","pfReactTable","Table","PfTable","TableBody","TableHeader","TableGridBreakpoint","cellWidth","TableVariant","expandable","SortByDirection","pfReact","reactCore","inventoryConnector","mergeWithEntities","register","getState","InventoryTable","usePagePerPage","page","perPage","params","changePackageSystemsParams","removeFilter","useRemoveFilter","filterConfig","items","searchFilter","intl","formatMessage","messages","labelsFiltersSystemsSearch","statusFilter","activeFiltersConfig","filters","buildFilterChips","onDelete","onSelect","getMangledColumns","onSort","useSortColumn","sortBy","createSortBy","sort","arrayFromObj","length","Fragment","STATUS_REJECTED","Unavailable","total","total_items","onRefresh","isLoaded","STATUS_RESOLVED","tableProps","canSelectAll","bulkSelect","PackageDetail","match","pageTitle","titlesPackages","setPageTitle","packageDetails","PackageDetailStore","fetchPackageDetails","clearPackageDetailStore","Header","headerOUIA","breadcrumbs","titlesPatchPackages","to","ENABLE_PACKAGES","paths","packages","isActive","STATUS_LOADING","Main","TextContent","Text","TextVariants","h2","titlesAffectedSystems","withRouter"],"mappings":"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","file":"js/PackageDetail.ca2f7cca438708283e9b.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".col-width-30{width:30%}.col-width-40{width:40%}\\n\", \"\"]);\n\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import { sortable } from '@patternfly/react-table/dist/js';\n\n// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction replaceLastUpdated (InventoryHosts, PatchHosts) {\n    return InventoryHosts.map((InventoryRow) => {\n        const patchLastSeen = PatchHosts && PatchHosts.find(patchRow=> patchRow.id === InventoryRow.id);\n        return {\n            ...InventoryRow,\n            updated: patchLastSeen && patchLastSeen.attributes.last_upload || InventoryRow.updated\n        };\n    });\n}\n\nfunction modifyInventory(columns, hosts, state) {\n    if (state.loaded) {\n        let lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        lastSeenColumn = [{ ...lastSeenColumn[0], transforms: [sortable] }];\n        return {\n            ...state,\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ],\n            rows: replaceLastUpdated(state.rows, hosts)\n        };\n    }\n\n    return state;\n}\n\nfunction modifyPackageSystems(columns, hosts, state) {\n    if (state.loaded) {\n        return {\n            ...state,\n            columns\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = (columns, store) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, store?.rows, state);\n\n        default:\n            return state;\n    }\n};\n\nexport const packagesSystemsInventoryReducer = (columns, store) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyPackageSystems(columns, store?.rows, state);\n\n        default:\n            return state;\n    }\n};\n","import { sortable } from '@patternfly/react-table/dist/js';\nimport { fetchApplicableSystemAdvisoriesApi } from '../../Utilities/api';\nimport { createAdvisoriesIcons, createUpgradableColumn, remediationProvider } from '../../Utilities/Helpers';\nimport './SystemsListAssets.scss';\n\nexport const systemsListColumns = [\n    {\n        key: 'display_name',\n        title: 'Name',\n        composed: ['facts.os_release', 'display_name'],\n        transforms: [sortable],\n        props: {\n            width: 50\n        }\n    },\n    {\n        key: 'packages_installed',\n        title: 'Packages',\n        transforms: [sortable],\n        props: {\n            width: 10\n        }\n    },\n    {\n        key: 'applicable_advisories',\n        title: 'Applicable advisories',\n        transforms: [sortable],\n        props: {\n            width: 20\n        },\n        renderFunc: value => createAdvisoriesIcons(value)\n    }\n];\n\nexport const packageSystemsColumns = [\n    {\n        key: 'display_name',\n        title: 'Name',\n        composed: ['facts.os_release', 'display_name'],\n        props: {\n            width: 50\n        }\n    },\n    {\n        key: 'installed_evra',\n        title: 'Installed version',\n        transforms: [sortable],\n        props: {\n            width: 10\n        }\n    },\n    {\n        key: 'available_evra',\n        title: 'Latest version',\n        transforms: [sortable],\n        props: {\n            width: 10\n        }\n    },\n    {\n        key: 'upgradable',\n        title: 'Status',\n        props: {\n            width: 20\n        },\n        renderFunc: value => createUpgradableColumn(value)\n    }\n];\n\nexport const systemsRowActions = showRemediationModal => {\n    return [\n        {\n            title: 'Apply all applicable advisories',\n            onClick: (event, rowId, rowData) => {\n                fetchApplicableSystemAdvisoriesApi({\n                    id: rowData.id,\n                    limit: 10000\n                }).then(res =>\n                    showRemediationModal(\n                        remediationProvider(\n                            res.data.map(item => item.id),\n                            rowData.id\n                        )\n                    )\n                );\n            }\n        }\n    ];\n};\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./SystemsListAssets.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./SystemsListAssets.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./SystemsListAssets.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeviceSizes = exports.BaseSizes = void 0;\nvar BaseSizes;\n(function (BaseSizes) {\n    BaseSizes[\"xs\"] = \"xs\";\n    BaseSizes[\"sm\"] = \"sm\";\n    BaseSizes[\"md\"] = \"md\";\n    BaseSizes[\"lg\"] = \"lg\";\n    BaseSizes[\"xl\"] = \"xl\";\n    BaseSizes[\"2xl\"] = \"2xl\";\n    BaseSizes[\"3xl\"] = \"3xl\";\n    BaseSizes[\"4xl\"] = \"4xl\";\n})(BaseSizes = exports.BaseSizes || (exports.BaseSizes = {}));\nvar DeviceSizes;\n(function (DeviceSizes) {\n    DeviceSizes[\"sm\"] = \"Sm\";\n    DeviceSizes[\"md\"] = \"Md\";\n    DeviceSizes[\"lg\"] = \"Lg\";\n    DeviceSizes[\"xl\"] = \"Xl\";\n    DeviceSizes[\"xl2\"] = \"_2xl\";\n})(DeviceSizes = exports.DeviceSizes || (exports.DeviceSizes = {}));\n//# sourceMappingURL=sizes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stack = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst stack_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Stack/stack\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.Stack = (_a) => {\n    var { hasGutter = false, className = '', children = null, component = 'div' } = _a, props = tslib_1.__rest(_a, [\"hasGutter\", \"className\", \"children\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: react_styles_1.css(stack_1.default.stack, hasGutter && stack_1.default.modifiers.gutter, className) }), children));\n};\nexports.Stack.displayName = 'Stack';\n//# sourceMappingURL=Stack.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StackItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst stack_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Stack/stack\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.StackItem = (_a) => {\n    var { isFilled = false, className = '', children = null } = _a, props = tslib_1.__rest(_a, [\"isFilled\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: react_styles_1.css(stack_1.default.stackItem, isFilled && stack_1.default.modifiers.fill, className) }), children));\n};\nexports.StackItem.displayName = 'StackItem';\n//# sourceMappingURL=StackItem.js.map","/* eslint-disable react/prop-types */\nimport { Skeleton, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\n\nexport const WithLoaderVariants = {\n    spinner: 'spinner',\n    skeleton: 'skeleton'\n};\n\nconst loaderMap = {\n    [WithLoaderVariants.skeleton]: ({ size, isDark }) => (\n        <Skeleton size={size} isDark={isDark} />\n    ),\n    [WithLoaderVariants.spinner]: ({ centered }) => (\n        <Spinner centered={centered} />\n    )\n};\n\nexport const WithLoader = ({ loading, variant, children, ...props }) => {\n    if (loading !== false) {\n        return loaderMap[variant](props);\n    }\n\n    return children;\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string,\n    children: propTypes.any\n};\n\nexport default WithLoader;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=require(\"prop-types\"),PropTypes__default=_interopDefault(PropTypes),classNames=_interopDefault(require(\"classnames\")),Spinner=function Spinner(e){var r=e.centered,t=e.className,s=objectWithoutProperties._objectWithoutProperties(e,[\"centered\",\"className\"]),a=classNames(\"ins-c-spinner\",defineProperty._defineProperty({},\"ins-m-center\",r),t);return React__default.createElement(\"div\",_extends._extends({role:\"status\",className:a},s),React__default.createElement(\"span\",{className:\"pf-u-screen-reader\"},\"Loading...\"))};Spinner.propTypes={centered:PropTypes__default.bool,className:PropTypes__default.string},exports.Spinner=Spinner;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grid = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst grid_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Grid/grid\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst sizes_1 = require(\"../../styles/sizes\");\nexports.Grid = (_a) => {\n    var { children = null, className = '', hasGutter, span = null } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"hasGutter\", \"span\"]);\n    const classes = [grid_1.default.grid, span && grid_1.default.modifiers[`all_${span}Col`]];\n    Object.entries(sizes_1.DeviceSizes).forEach(([propKey, gridSpanModifier]) => {\n        const key = propKey;\n        const propValue = props[key];\n        if (propValue) {\n            classes.push(grid_1.default.modifiers[`all_${propValue}ColOn${gridSpanModifier}`]);\n        }\n        delete props[key];\n    });\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(...classes, hasGutter && grid_1.default.modifiers.gutter, className) }, props), children));\n};\nexports.Grid.displayName = 'Grid';\n//# sourceMappingURL=Grid.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GridItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst grid_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Grid/grid\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst sizes_1 = require(\"../../styles/sizes\");\nexports.GridItem = (_a) => {\n    var { children = null, className = '', span = null, rowSpan = null, offset = null } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"span\", \"rowSpan\", \"offset\"]);\n    const classes = [\n        grid_1.default.gridItem,\n        span && grid_1.default.modifiers[`${span}Col`],\n        rowSpan && grid_1.default.modifiers[`${rowSpan}Row`],\n        offset && grid_1.default.modifiers[`offset_${offset}Col`]\n    ];\n    Object.entries(sizes_1.DeviceSizes).forEach(([propKey, classModifier]) => {\n        const key = propKey;\n        const rowSpanKey = `${key}RowSpan`;\n        const offsetKey = `${key}Offset`;\n        const spanValue = props[key];\n        const rowSpanValue = props[rowSpanKey];\n        const offsetValue = props[offsetKey];\n        if (spanValue) {\n            classes.push(grid_1.default.modifiers[`${spanValue}ColOn${classModifier}`]);\n        }\n        if (rowSpanValue) {\n            classes.push(grid_1.default.modifiers[`${rowSpanValue}RowOn${classModifier}`]);\n        }\n        if (offsetValue) {\n            classes.push(grid_1.default.modifiers[`offset_${offsetValue}ColOn${classModifier}`]);\n        }\n        delete props[key];\n        delete props[rowSpanKey];\n        delete props[offsetKey];\n    });\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(...classes, className) }, props), children));\n};\nexports.GridItem.displayName = 'GridItem';\n//# sourceMappingURL=GridItem.js.map","import { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { preserveNewlines } from '../../Utilities/Helpers';\nimport WithLoader, { WithLoaderVariants } from '../WithLoader/WithLoader';\n\nconst PackageHeader = ({ attributes, isLoading }) => {\n    return (\n        <Grid hasGutter style={{ minHeight: 50 }}>\n            <GridItem md={8} sm={12}>\n                <WithLoader\n                    loading={isLoading}\n                    variant={WithLoaderVariants.spinner}\n                    centered\n                >\n                    <Stack hasGutter>\n                        <StackItem />\n                        <StackItem style={{ whiteSpace: 'pre-line' }}>\n                            {\n                                preserveNewlines(attributes.description)\n                            }\n                        </StackItem>\n                    </Stack>\n                </WithLoader>\n            </GridItem>\n\n        </Grid>\n    );\n};\n\nPackageHeader.propTypes = {\n    attributes: propTypes.object,\n    isLoading: propTypes.bool\n};\n\nexport default PackageHeader;\n","import { Button, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\nimport {\n    cellWidth, expandable, sortable, SortByDirection,\n    Table as PfTable, TableBody, TableGridBreakpoint, TableHeader, TableVariant\n} from '@patternfly/react-table/dist/js';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/files/inventoryDependencies';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport * as ReactRedux from 'react-redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport messages from '../../Messages';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/StatusFilter';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components';\nimport { getStore, register } from '../../store';\nimport { changePackageSystemsParams, clearPackageSystemsStore, fetchPackageSystemsAction } from '../../store/Actions/Actions';\nimport { packagesSystemsInventoryReducer } from '../../store/Reducers/InventoryEntitiesReducer';\nimport { fetchPackageSystems } from '../../Utilities/api';\nimport { STATUS_REJECTED, STATUS_RESOLVED } from '../../Utilities/constants';\nimport { createPackageSystemsRows } from '../../Utilities/DataMappers';\nimport { arrayFromObj, buildFilterChips, createSortBy, remediationProvider } from '../../Utilities/Helpers';\nimport { useHandleRefresh, useOnSelect, usePagePerPage, useRemoveFilter, useSortColumn } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport RemediationModal from '../Remediation/RemediationModal';\nimport { packageSystemsColumns } from '../Systems/SystemsListAssets';\n\nconst PackageSystems = ({ packageName }) => {\n    const dispatch = useDispatch();\n    const enableRemediation = false;\n    const [InventoryCmp, setInventoryCmp] = React.useState();\n    const [\n        RemediationModalCmp,\n        setRemediationModalCmp\n    ] = React.useState(() => () => null);\n    const rawPackageSystems = useSelector(\n        ({ PackageSystemsStore }) => PackageSystemsStore.rows\n    );\n    const status = useSelector(\n        ({ PackageSystemsStore }) => PackageSystemsStore.status\n    );\n    const selectedRows = useSelector(\n        ({ PackageSystemsStore }) => PackageSystemsStore.selectedRows\n    );\n    const hosts = React.useMemo(\n        () => createPackageSystemsRows(rawPackageSystems, selectedRows),\n        [rawPackageSystems]\n    );\n    const metadata = useSelector(\n        ({ PackageSystemsStore }) => PackageSystemsStore.metadata\n    );\n    const queryParams = useSelector(\n        ({ PackageSystemsStore }) => PackageSystemsStore.queryParams\n    );\n\n    const inventoryColumns = useSelector(\n        ({ entities }) => entities && entities.columns\n    );\n\n    const handleRefresh = useHandleRefresh(metadata, apply);\n    const { filter, search } = queryParams;\n\n    React.useEffect(() => {\n        return () => dispatch(clearPackageSystemsStore());\n    }, []);\n\n    React.useEffect(() => {\n        dispatch(\n            fetchPackageSystemsAction({ id: packageName, ...queryParams })\n        );\n    }, [queryParams]);\n\n    const fetchInventory = async () => {\n        const store = getStore();\n        const {\n            inventoryConnector,\n            mergeWithEntities\n        } = await insights.loadInventory({\n            ReactRedux,\n            React,\n            reactRouterDom,\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            },\n            pfReact: reactCore\n        });\n\n        register({\n            ...mergeWithEntities(packagesSystemsInventoryReducer(packageSystemsColumns, store.getState().PackageSystemsStore))\n        });\n        const { InventoryTable } = inventoryConnector(store);\n        setInventoryCmp(() => InventoryTable);\n    };\n\n    React.useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    const [page, perPage] = usePagePerPage(metadata.limit, metadata.offset);\n\n    function apply(params) {\n        dispatch(changePackageSystemsParams(params));\n    }\n\n    const removeFilter = useRemoveFilter(filter, apply);\n\n    const filterConfig = {\n        items: [\n            searchFilter(apply, search, intl.formatMessage(messages.labelsFiltersSystemsSearch)),\n            statusFilter(apply, filter)\n        ]\n    };\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(filter, search),\n        onDelete: removeFilter\n    };\n\n    const showRemediationModal = data => {\n        setRemediationModalCmp(() => () => <RemediationModal data={data} />);\n    };\n\n    const constructFilename = (system) => {\n        return `${packageName}-${system.available_evra}`;\n    };\n\n    const fetchAllData = () =>\n        fetchPackageSystems({ id: packageName, limit: 999999 });\n\n    const selectRows = (toSelect) => {\n        dispatch({ type: 'SELECT_ENTITY', payload: toSelect });\n    };\n\n    const onSelect = enableRemediation && useOnSelect(rawPackageSystems,  selectedRows,\n        fetchAllData, selectRows, constructFilename);\n\n    // This is used ONLY for sorting purposes\n    const getMangledColumns = () => {\n        let updated = inventoryColumns && inventoryColumns.filter(({ key }) => key === 'updated')[0];\n        updated = { ...updated, key: 'last_upload' };\n        return [...packageSystemsColumns, updated];\n    };\n\n    const onSort = useSortColumn(getMangledColumns(), apply, 0);\n    const sortBy = React.useMemo(\n        () => createSortBy(getMangledColumns(), metadata.sort, 0),\n        [metadata.sort]\n    );\n\n    const selectedCount = selectedRows && arrayFromObj(selectedRows).length;\n\n    return (\n        <React.Fragment>\n            {status === STATUS_REJECTED ? <Unavailable/> : InventoryCmp && (\n                <InventoryCmp\n                    items={hosts}\n                    page={page}\n                    total={metadata.total_items}\n                    perPage={perPage}\n                    onRefresh={handleRefresh}\n                    isLoaded={status === STATUS_RESOLVED}\n                    tableProps = {{ canSelectAll: false, onSort, sortBy, onSelect }}\n                    filterConfig={filterConfig}\n                    activeFiltersConfig = {activeFiltersConfig}\n                    bulkSelect={enableRemediation && onSelect && {\n                        count: selectedCount,\n                        items: [{\n                            title: `Select none (0)`,\n                            onClick: () => {\n                                onSelect('none');\n                            }\n                        }, {\n                            title: `Select page (${hosts.length})`,\n                            onClick: () => {\n                                onSelect('page');\n                            }\n                        },\n                        {\n                            title: `Select all (${metadata.total_items})`,\n                            onClick: () => {\n                                onSelect('all');\n                            }\n                        }],\n                        onSelect: (value) => {\n                            value ? onSelect('all') : onSelect('none');\n                        },\n                        toggleProps: {\n                            'data-ouia-component-type': 'bulk-select-toggle-button'\n                        },\n                        checked: selectedCount === metadata.total_items ? true : selectedCount === 0 ? false : null\n                    }}\n                >\n                    {enableRemediation &&\n                    <ToolbarGroup>\n                        <ToolbarItem>\n                            <Button\n                                className={'remediationButtonPatch'}\n                                isDisabled={\n                                    arrayFromObj(selectedRows).length === 0\n                                }\n                                onClick={() =>\n                                    showRemediationModal(\n                                        remediationProvider(\n                                            packageName,\n                                            Object.keys(selectedRows)\n                                        )\n                                    )\n                                }\n                                ouiaId={'toolbar-remediation-button'}\n                            >\n                                <AnsibeTowerIcon/>&nbsp;{intl.formatMessage(messages.labelsRemediate)}\n                            </Button>\n                            <RemediationModalCmp />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                    }\n                </InventoryCmp>\n            )}\n        </React.Fragment>\n    );\n};\n\nPackageSystems.propTypes = {\n    packageName: propTypes.string\n};\n\nexport default PackageSystems;\n","import { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport messages from '../../Messages';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport PackageHeader from '../../PresentationalComponents/PackageHeader/PackageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components';\nimport { paths } from '../../Routes';\nimport PackageSystems from '../../SmartComponents/PackageSystems/PackageSystems';\nimport { clearPackageDetailStore, fetchPackageDetails } from '../../store/Actions/Actions';\nimport { ENABLE_PACKAGES, STATUS_LOADING, STATUS_REJECTED } from '../../Utilities/constants';\nimport { setPageTitle } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\n\nconst PackageDetail = ({ match }) => {\n    const dispatch = useDispatch();\n    const [packageName] = React.useState(match.params.packageName);\n    const pageTitle = `${packageName} - ${intl.formatMessage(messages.titlesPackages)}`;\n    setPageTitle(pageTitle);\n    const packageDetails = useSelector(\n        ({ PackageDetailStore }) => PackageDetailStore\n    );\n    const status = useSelector(\n        ({ PackageDetailStore }) => PackageDetailStore.status\n    );\n\n    React.useEffect(() => {\n        dispatch(fetchPackageDetails({ packageName }));\n    }, []);\n\n    React.useEffect(() => {\n        return () => {\n            //dispatch(clearAdvisorySystemsStore());\n            dispatch(clearPackageDetailStore());\n        };\n    }, []);\n\n    const { attributes } = packageDetails.data;\n    return (\n        <React.Fragment>\n            <Header\n                title={packageName}\n                headerOUIA={'package-details'}\n                breadcrumbs={[\n                    {\n                        title: intl.formatMessage(messages.titlesPatchPackages),\n                        to: ENABLE_PACKAGES && paths.packages.to,\n                        isActive: false\n                    },\n                    {\n                        title: packageName,\n                        isActive: true\n                    }\n                ]}\n            >{status === STATUS_REJECTED ? <Unavailable/> :\n                    <PackageHeader\n                        attributes={{ ...attributes, id: packageName }}\n                        isLoading={status === STATUS_LOADING}\n                    />}\n            </Header>\n            <Main>\n                <Stack hasGutter>\n                    <StackItem>\n                        <TextContent>\n                            <Text component={TextVariants.h2}>{intl.formatMessage(messages.titlesAffectedSystems)}</Text>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem>\n                        <PackageSystems packageName={packageName}></PackageSystems>\n                    </StackItem>\n                </Stack>\n            </Main>\n        </React.Fragment>\n    );\n};\n\nPackageDetail.propTypes = {\n    match: propTypes.any\n};\n\nexport default withRouter(PackageDetail);\n"],"sourceRoot":""}