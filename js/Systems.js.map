{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/index.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/index.js","webpack:///./src/SmartComponents/Systems/Systems.js"],"names":["__webpack_require__","d","__webpack_exports__","Table","ActionsColumn","Body","BodyCell","BodyWrapper","CollapseColumn","ExpandableRowContent","Header","HeaderCell","RowWrapper","SelectColumn","SortColumn","utils","_transformers__WEBPACK_IMPORTED_MODULE_0__","_headerUtils__WEBPACK_IMPORTED_MODULE_1__","_formatters__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","dispatch","Object","react_redux__WEBPACK_IMPORTED_MODULE_9__","_React$useState","react__WEBPACK_IMPORTED_MODULE_8___default","a","useState","_React$useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","InventoryCmp","setInventoryCmp","hosts","_ref","SystemsListStore","rows","metadata","_ref2","queryParams","_ref3","useEffect","_store_Actions_Actions__WEBPACK_IMPORTED_MODULE_13__","fetchInventory","_ref4","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","_ref5","inventoryConnector","mergeWithEntities","_inventoryConnector","InventoryTable","wrap","_context","prev","next","insights","loadInventory","react","reactRouterDom","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","reactCore","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","reactIcons","_patternfly_react_icons__WEBPACK_IMPORTED_MODULE_5__","pfReactTable","_patternfly_react_table__WEBPACK_IMPORTED_MODULE_6__","sent","_store__WEBPACK_IMPORTED_MODULE_12__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","stop","apply","this","arguments","_React$useMemo","useMemo","_Utilities_Helpers__WEBPACK_IMPORTED_MODULE_14__","limit","offset","_React$useMemo2","page","perPage","handleRefresh","useCallback","_ref6","per_page","page_size","params","console","log","createElement","Fragment","_PresentationalComponents_Header_Header__WEBPACK_IMPORTED_MODULE_11__","title","showTabs","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_7__","items","total","total_items","onRefresh"],"mappings":"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","file":"js/Systems.js","sourcesContent":["export * from './components';\n//# sourceMappingURL=index.js.map","export * from './transformers';\nexport * from './headerUtils';\nexport * from './formatters';\nexport * from './utils';\n//# sourceMappingURL=index.js.map","/* eslint-disable react/prop-types */\n/* eslint-disable no-console */\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { getStore, register } from '../../store';\nimport {\n    changeSystemsListParams,\n    fetchSystemsAction\n} from '../../store/Actions/Actions';\nimport {\n    convertLimitOffset,\n    getLimitFromPageSize,\n    getOffsetFromPageLimit\n} from '../../Utilities/Helpers';\n\nconst Systems = () => {\n    const dispatch = useDispatch();\n    const [InventoryCmp, setInventoryCmp] = React.useState();\n    const hosts = useSelector(({ SystemsListStore }) => SystemsListStore.rows);\n    const metadata = useSelector(\n        ({ SystemsListStore }) => SystemsListStore.metadata\n    );\n    const queryParams = useSelector(\n        ({ SystemsListStore }) => SystemsListStore.queryParams\n    );\n\n    React.useEffect(() => {\n        dispatch(fetchSystemsAction(queryParams));\n    }, [queryParams]);\n\n    const fetchInventory = async () => {\n        const {\n            inventoryConnector,\n            mergeWithEntities\n        } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n\n        register({\n            ...mergeWithEntities()\n        });\n        const { InventoryTable } = inventoryConnector(getStore());\n        setInventoryCmp(() => InventoryTable);\n    };\n\n    React.useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    const [page, perPage] = React.useMemo(\n        () => convertLimitOffset(metadata.limit, metadata.offset),\n        [metadata.limit, metadata.offset]\n    );\n\n    function apply(params) {\n        dispatch(changeSystemsListParams(params));\n    }\n\n    const handleRefresh = React.useCallback(({ page, per_page: perPage }) => {\n        if (metadata.page !== page || metadata.page_size !== perPage) {\n            apply({\n                offset:\n                    metadata.limit !== perPage\n                        ? 0\n                        : getOffsetFromPageLimit(page, perPage),\n                limit: getLimitFromPageSize(perPage)\n            });\n        }\n    });\n\n    console.log(hosts);\n    return (\n        <React.Fragment>\n            <Header title={'System Patching'} showTabs />\n            <Main>\n                {InventoryCmp && (\n                    <InventoryCmp\n                        items={hosts}\n                        page={page}\n                        total={metadata.total_items}\n                        perPage={perPage}\n                        onRefresh={handleRefresh}\n                    />\n                )}\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default Systems;\n"],"sourceRoot":""}