{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/index.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/index.js","webpack:///./src/SmartComponents/Systems/Systems.js"],"names":["__webpack_require__","d","__webpack_exports__","Table","ActionsColumn","Body","BodyCell","BodyWrapper","CollapseColumn","ExpandableRowContent","Header","HeaderCell","RowWrapper","SelectColumn","SortColumn","utils","_transformers__WEBPACK_IMPORTED_MODULE_0__","_headerUtils__WEBPACK_IMPORTED_MODULE_1__","_formatters__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Object","react_redux__WEBPACK_IMPORTED_MODULE_9__","_React$useState","react__WEBPACK_IMPORTED_MODULE_8___default","a","useState","_React$useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","InventoryCmp","setInventoryCmp","fetchInventory","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","_ref2","inventoryConnector","mergeWithEntities","_inventoryConnector","InventoryTable","wrap","_context","prev","next","insights","loadInventory","react","reactRouterDom","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","reactCore","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","reactIcons","_patternfly_react_icons__WEBPACK_IMPORTED_MODULE_5__","pfReactTable","_patternfly_react_table__WEBPACK_IMPORTED_MODULE_6__","sent","_store__WEBPACK_IMPORTED_MODULE_12__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","console","log","stop","apply","this","arguments","useEffect","createElement","Fragment","_PresentationalComponents_Header_Header__WEBPACK_IMPORTED_MODULE_11__","title","showTabs","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_7__","store"],"mappings":"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","file":"js/Systems.js","sourcesContent":["export * from './components';\n//# sourceMappingURL=index.js.map","export * from './transformers';\nexport * from './headerUtils';\nexport * from './formatters';\nexport * from './utils';\n//# sourceMappingURL=index.js.map","/* eslint-disable react/prop-types */\n/* eslint-disable no-console */\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { getStore, register } from '../../store';\n\nconst Systems = () => {\n    const [InventoryCmp, setInventoryCmp] = React.useState();\n\n    const fetchInventory = async () => {\n        const {\n            inventoryConnector,\n            mergeWithEntities\n        } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n\n        register({\n            ...mergeWithEntities()\n        });\n        const { InventoryTable } = inventoryConnector();\n        console.log(inventoryConnector());\n        setInventoryCmp(() => InventoryTable);\n    };\n\n    React.useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    console.log(<InventoryCmp />);\n\n    return (\n        <React.Fragment>\n            <Header title={'System Patching'} showTabs />\n            <Main>\n                <Provider store={getStore()}>\n                    {InventoryCmp && <InventoryCmp store={getStore()} />}\n                </Provider>\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default connect(() => ({}))(Systems);\n"],"sourceRoot":""}