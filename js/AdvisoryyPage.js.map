{"version":3,"sources":["webpack:///./src/PresentationalComponents/Header/Header.scss","webpack:///./src/PresentationalComponents/Header/Header.scss?f238","webpack:///./src/PresentationalComponents/Header/HeaderBreadcrumbs.js","webpack:///./src/PresentationalComponents/Header/HeaderTabs.js","webpack:///./src/PresentationalComponents/Header/Header.js","webpack:///./src/store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/SmartComponents/Systems/SystemsListAssets.js","webpack:///./src/PresentationalComponents/InfoBox/InfoBox.scss","webpack:///./src/PresentationalComponents/InfoBox/InfoBox.scss?011f","webpack:///./src/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/PresentationalComponents/InfoBox/InfoBox.js","webpack:///./src/PresentationalComponents/AdvisoryHeader/AdvisoryHeader.js","webpack:///./src/SmartComponents/AffectedSystems/AffectedSystems.js","webpack:///./src/SmartComponents/AdvisoryDetail/AdvisoryDetail.js"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","HeaderBreadcrumbs","items","Breadcrumb","filter","Boolean","map","item","BreadcrumbItem","title","isActive","to","Link","propTypes","PropTypes","arrayOf","shape","bool","string","HeaderTabs","history","Tabs","onSelect","event","tabString","activeKey","location","pathname","className","Tab","eventKey","paths","advisories","systems","object","withRouter","Header","showTabs","breadcrumbs","children","Fragment","array","any","init","columns","rows","entities","modifyInventory","state","loaded","inventoryEntitiesReducer","action","type","systemsListColumns","composed","props","width","renderFunc","value","createAdvisoriesIcons","systemsRowActions","showRemediationModal","onClick","rowId","rowData","fetchApplicableSystemAdvisoriesApi","id","limit","then","res","remediationProvider","data","WithLoaderVariants","loaderMap","size","isDark","centered","WithLoader","loading","variant","InfoBox","text","isLoading","color","Split","gutter","SplitItem","style","backgroundColor","Bullseye","isFilled","TextContent","Text","component","TextVariants","h6","p","AdvisoryHeader","attributes","severityObject","getSeverityById","severity","Grid","minHeight","GridItem","md","sm","Stack","StackItem","whiteSpace","description","replace","RegExp","public_date","processDate","modified_date","PortalAdvisoryLink","advisory","name","AffectedSystems","advisoryName","dispatch","useDispatch","React","useState","InventoryCmp","setInventoryCmp","RemediationModalCmp","setRemediationModalCmp","rawAffectedSystems","useSelector","AffectedSystemsStore","selectedRows","hosts","useMemo","createSystemsRows","metadata","queryParams","useEffect","fetchAffectedSystemsAction","async","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","register","getStore","InventoryTable","usePagePerPage","offset","page","perPage","RemediationModal","handleRefresh","useCallback","params","per_page","page_size","getOffsetFromPageLimit","getLimitFromPageSize","changeAffectedSystemsParams","total","total_items","onRefresh","actions","ToolbarGroup","ToolbarItem","Button","isDisabled","arrayFromObj","length","AdvisoryDetail","match","advisoryId","advisoryDetails","AdvisoryDetailStore","fetchAvisoryDetails","clearAffectedSystemsStore","clearAdvisoryDetailStore","h2"],"mappings":"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","file":"js/AdvisoryyPage.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-tabs.patchman-tabs{background-color:var(--pf-global--BackgroundColor--100);padding-left:var(--pf-c-page__main-section--md--PaddingLeft);display:block}\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderBreadcrumbs = ({ items }) => {\n    return (\n        <Breadcrumb>\n            {items.filter(Boolean).map(item => (\n                <BreadcrumbItem key={item.title} isActive={item.isActive}>\n                    {(item.to && <Link to={item.to}>{item.title}</Link>) ||\n                        item.title}\n                </BreadcrumbItem>\n            ))}\n        </Breadcrumb>\n    );\n};\n\nHeaderBreadcrumbs.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            isActive: PropTypes.bool,\n            to: PropTypes.string,\n            title: PropTypes.string\n        })\n    )\n};\n\nexport default HeaderBreadcrumbs;\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { paths } from '../../Routes';\nimport './Header.scss';\n\nconst HeaderTabs = ({ history }) => {\n    const handleRedirect = (event, tabString) => {\n        history.push(tabString);\n    };\n\n    return (\n        <Tabs\n            onSelect={handleRedirect}\n            activeKey={history.location.pathname}\n            className={'patchman-tabs'}\n        >\n            <Tab\n                eventKey={paths.advisories.to}\n                title={paths.advisories.title}\n            />\n            <Tab eventKey={paths.systems.to} title={paths.systems.title} />\n        </Tabs>\n    );\n};\n\nHeaderTabs.propTypes = {\n    history: propTypes.object\n};\n\nexport default withRouter(HeaderTabs);\n","import {\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport HeaderBreadcrumbs from './HeaderBreadcrumbs';\nimport HeaderTabs from './HeaderTabs';\n\nconst Header = ({ title, showTabs, breadcrumbs, children }) => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                {breadcrumbs && <HeaderBreadcrumbs items={breadcrumbs} />}\n                <PageHeaderTitle title={title} />\n                {children}\n            </PageHeader>\n            {showTabs && <HeaderTabs />}\n        </React.Fragment>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string,\n    showTabs: PropTypes.bool,\n    breadcrumbs: PropTypes.array,\n    children: PropTypes.any\n};\n\nexport default Header;\n","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state) {\n    if (state.loaded) {\n        return {\n            ...state,\n            columns\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = columns => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state);\n\n        default:\n            return state;\n    }\n};\n","import { fetchApplicableSystemAdvisoriesApi } from '../../Utilities/api';\nimport {\n    createAdvisoriesIcons,\n    remediationProvider\n} from '../../Utilities/Helpers';\n\nexport const systemsListColumns = [\n    {\n        key: 'display_name',\n        title: 'Name',\n        composed: ['facts.os_release', 'display_name'],\n        props: {\n            width: 40\n        }\n    },\n    {\n        key: 'applicable_advisories',\n        title: 'Applicable advisories',\n        props: {\n            width: 30\n        },\n        renderFunc: value => createAdvisoriesIcons(value)\n    },\n    {\n        key: 'status',\n        title: 'Status',\n        props: {\n            width: 30\n        }\n    }\n];\n\nexport const systemsRowActions = showRemediationModal => {\n    return [\n        {\n            title: 'Apply all applicable advisories',\n            onClick: (event, rowId, rowData) => {\n                fetchApplicableSystemAdvisoriesApi({\n                    id: rowData.id,\n                    limit: 10000\n                }).then(res =>\n                    showRemediationModal(\n                        remediationProvider(\n                            res.data.map(item => item.id),\n                            rowData.id\n                        )\n                    )\n                );\n            }\n        }\n    ];\n};\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".infobox{background-color:var(--pf-global--BackgroundColor--150);border:var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;height:65px}.infobox>.pf-l-split__item:first-child{width:65px;color:black;background-color:var(--pf-global--warning-color--100)}.infobox>.pf-l-split__item:first-child>div.pf-l-bullseye svg{color:white}.infobox h6{margin:0}.infobox>.pf-l-split__item:nth-child(2){display:flex;justify-content:flex-start;align-items:center}\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./InfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./InfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./InfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable react/prop-types */\nimport { Skeleton, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\n\nexport const WithLoaderVariants = {\n    spinner: 'spinner',\n    skeleton: 'skeleton'\n};\n\nconst loaderMap = {\n    [WithLoaderVariants.skeleton]: ({ size, isDark }) => (\n        <Skeleton size={size} isDark={isDark} />\n    ),\n    [WithLoaderVariants.spinner]: ({ centered }) => (\n        <Spinner centered={centered} />\n    )\n};\n\nexport const WithLoader = ({ loading, variant, children, ...props }) => {\n    if (loading !== false) {\n        return loaderMap[variant](props);\n    }\n\n    return children;\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string,\n    children: propTypes.any\n};\n\nexport default WithLoader;\n","import {\n    Bullseye,\n    Split,\n    SplitItem,\n    Text,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport WithLoader, { WithLoaderVariants } from '../WithLoader/WithLoader';\nimport './InfoBox.scss';\n\nconst InfoBox = ({ title, text, isLoading, content, color }) => {\n    return (\n        <Split className=\"infobox\" gutter=\"md\">\n            <WithLoader\n                variant={WithLoaderVariants.skeleton}\n                loading={isLoading}\n                size=\"lg\"\n            >\n                <SplitItem style={{ backgroundColor: color }}>\n                    <Bullseye>{content}</Bullseye>\n                </SplitItem>\n                <SplitItem isFilled>\n                    <TextContent>\n                        <Text component={TextVariants.h6}>{title}</Text>\n                        <Text component={TextVariants.p}>{text}</Text>\n                    </TextContent>\n                </SplitItem>\n            </WithLoader>\n        </Split>\n    );\n};\n\nInfoBox.propTypes = {\n    title: propTypes.string,\n    text: propTypes.any,\n    isLoading: propTypes.bool,\n    content: propTypes.any,\n    color: propTypes.string\n};\n\nexport default InfoBox;\n","import { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport PortalAdvisoryLink from '../../PresentationalComponents/Snippets/PortalAdvisoryLink';\nimport WithLoader, {\n    WithLoaderVariants\n} from '../../PresentationalComponents/WithLoader/WithLoader';\nimport { getSeverityById } from '../../Utilities/Helpers';\nimport InfoBox from '../InfoBox/InfoBox';\n\nconst AdvisoryHeader = ({ attributes, isLoading }) => {\n    const severityObject = getSeverityById(attributes.severity);\n    return (\n        <Grid gutter=\"sm\" style={{ minHeight: 150 }}>\n            <GridItem md={8} sm={12}>\n                <WithLoader\n                    loading={isLoading}\n                    variant={WithLoaderVariants.spinner}\n                    centered\n                >\n                    <Stack gutter=\"sm\">\n                        <StackItem />\n                        <StackItem style={{ whiteSpace: 'pre-line' }}>\n                            {attributes.description &&\n                                attributes.description.replace(\n                                    new RegExp('\\\\n(?=[^\\\\n])', 'g'),\n                                    ''\n                                )}\n                        </StackItem>\n                        <StackItem>\n                            {attributes.public_date && (\n                                <React.Fragment>\n                                    {`Issued: ${processDate(\n                                        attributes.public_date\n                                    )}`}\n                                    <br />\n                                </React.Fragment>\n                            )}\n                            {attributes.modified_date && (\n                                <React.Fragment>\n                                    {`Modified: ${processDate(\n                                        attributes.modified_date\n                                    )}`}\n                                </React.Fragment>\n                            )}\n                        </StackItem>\n                        <StackItem>\n                            <PortalAdvisoryLink advisory={attributes.id} />\n                        </StackItem>\n                    </Stack>\n                </WithLoader>\n            </GridItem>\n            <GridItem md={4} sm={12}>\n                <InfoBox\n                    isLoading={isLoading}\n                    title={severityObject.name}\n                    color={severityObject.color}\n                    text={<a>Learn more</a>}\n                    content={<SecurityIcon size=\"md\" />}\n                />\n            </GridItem>\n        </Grid>\n    );\n};\n\nAdvisoryHeader.propTypes = {\n    attributes: propTypes.object,\n    isLoading: propTypes.bool\n};\n\nexport default AdvisoryHeader;\n","import * as reactCore from '@patternfly/react-core';\nimport { Button, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { getStore, register } from '../../store';\nimport {\n    changeAffectedSystemsParams,\n    fetchAffectedSystemsAction\n} from '../../store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../store/Reducers/InventoryEntitiesReducer';\nimport { createSystemsRows } from '../../Utilities/DataMappers';\nimport {\n    arrayFromObj,\n    getLimitFromPageSize,\n    getOffsetFromPageLimit,\n    remediationProvider\n} from '../../Utilities/Helpers';\nimport { usePagePerPage } from '../../Utilities/Hooks';\nimport RemediationModal from '../Remediation/RemediationModal';\nimport {\n    systemsListColumns,\n    systemsRowActions\n} from '../Systems/SystemsListAssets';\n\nconst AffectedSystems = ({ advisoryName }) => {\n    const dispatch = useDispatch();\n    const [InventoryCmp, setInventoryCmp] = React.useState();\n    const [\n        RemediationModalCmp,\n        setRemediationModalCmp\n    ] = React.useState(() => () => null);\n    const rawAffectedSystems = useSelector(\n        ({ AffectedSystemsStore }) => AffectedSystemsStore.rows\n    );\n    const selectedRows = useSelector(\n        ({ AffectedSystemsStore }) => AffectedSystemsStore.selectedRows\n    );\n    const hosts = React.useMemo(() => createSystemsRows(rawAffectedSystems), [\n        rawAffectedSystems\n    ]);\n    const metadata = useSelector(\n        ({ AffectedSystemsStore }) => AffectedSystemsStore.metadata\n    );\n    const queryParams = useSelector(\n        ({ AffectedSystemsStore }) => AffectedSystemsStore.queryParams\n    );\n\n    React.useEffect(() => {\n        dispatch(\n            fetchAffectedSystemsAction({ id: advisoryName, ...queryParams })\n        );\n    }, [queryParams]);\n\n    const fetchInventory = async () => {\n        const {\n            inventoryConnector,\n            mergeWithEntities\n        } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n\n        register({\n            ...mergeWithEntities(inventoryEntitiesReducer(systemsListColumns))\n        });\n        const { InventoryTable } = inventoryConnector(getStore());\n        setInventoryCmp(() => InventoryTable);\n    };\n\n    React.useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    const [page, perPage] = usePagePerPage(metadata.limit, metadata.offset);\n\n    function apply(params) {\n        dispatch(changeAffectedSystemsParams(params));\n    }\n\n    const showRemediationModal = data => {\n        setRemediationModalCmp(() => () => <RemediationModal data={data} />);\n    };\n\n    const handleRefresh = React.useCallback(({ page, per_page: perPage }) => {\n        if (metadata.page !== page || metadata.page_size !== perPage) {\n            apply({\n                offset:\n                    metadata.limit !== perPage\n                        ? 0\n                        : getOffsetFromPageLimit(page, perPage),\n                limit: getLimitFromPageSize(perPage)\n            });\n        }\n    });\n\n    return (\n        <React.Fragment>\n            {InventoryCmp && (\n                <InventoryCmp\n                    items={hosts}\n                    page={page}\n                    total={metadata.total_items}\n                    perPage={perPage}\n                    onRefresh={handleRefresh}\n                    actions={systemsRowActions(showRemediationModal)}\n                >\n                    <ToolbarGroup>\n                        <ToolbarItem>\n                            <Button\n                                isDisabled={\n                                    arrayFromObj(selectedRows).length === 0\n                                }\n                                onClick={() =>\n                                    showRemediationModal(\n                                        remediationProvider(\n                                            advisoryName,\n                                            arrayFromObj(selectedRows)\n                                        )\n                                    )\n                                }\n                            >\n                                Apply\n                            </Button>\n                            <RemediationModalCmp />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                </InventoryCmp>\n            )}\n        </React.Fragment>\n    );\n};\n\nAffectedSystems.propTypes = {\n    advisoryName: propTypes.string\n};\n\nexport default AffectedSystems;\n","import { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport AdvisoryHeader from '../../PresentationalComponents/AdvisoryHeader/AdvisoryHeader';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { paths } from '../../Routes';\nimport {\n    clearAdvisoryDetailStore,\n    clearAffectedSystemsStore,\n    fetchAvisoryDetails\n} from '../../store/Actions/Actions';\nimport AffectedSystems from '../AffectedSystems/AffectedSystems';\n\nconst AdvisoryDetail = ({ match }) => {\n    const dispatch = useDispatch();\n    const [advisoryName] = React.useState(match.params.advisoryId);\n    const advisoryDetails = useSelector(\n        ({ AdvisoryDetailStore }) => AdvisoryDetailStore\n    );\n    React.useEffect(() => {\n        dispatch(fetchAvisoryDetails({ advisoryName }));\n    }, []);\n\n    React.useEffect(() => {\n        return () => {\n            dispatch(clearAffectedSystemsStore());\n            dispatch(clearAdvisoryDetailStore());\n        };\n    }, []);\n\n    const { attributes } = advisoryDetails.data;\n    return (\n        <React.Fragment>\n            <Header\n                title={advisoryName}\n                breadcrumbs={[\n                    {\n                        title: 'System Patching',\n                        to: paths.advisories.to,\n                        isActive: false\n                    },\n                    {\n                        title: advisoryName,\n                        isActive: true\n                    }\n                ]}\n            >\n                <AdvisoryHeader\n                    attributes={{ ...attributes, id: advisoryName }}\n                    isLoading={advisoryDetails.isLoading}\n                />\n            </Header>\n            <Main>\n                <TextContent>\n                    <Text component={TextVariants.h2}>Affected Systems</Text>\n                </TextContent>\n                <AffectedSystems advisoryName={advisoryName} />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nAdvisoryDetail.propTypes = {\n    match: propTypes.any\n};\n\nexport default withRouter(AdvisoryDetail);\n"],"sourceRoot":""}