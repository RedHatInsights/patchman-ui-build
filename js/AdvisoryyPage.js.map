{"version":3,"sources":["webpack:///./src/PresentationalComponents/Header/Header.scss","webpack:///./src/PresentationalComponents/Header/Header.scss?f238","webpack:///./src/PresentationalComponents/Header/HeaderBreadcrumbs.js","webpack:///./src/PresentationalComponents/Header/HeaderTabs.js","webpack:///./src/PresentationalComponents/Header/Header.js","webpack:///./src/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/PresentationalComponents/AdvisoryHeader/AdvisoryHeader.js","webpack:///./src/SmartComponents/AdvisoryDetail/AdvisoryDetail.js"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","HeaderBreadcrumbs","items","Breadcrumb","filter","Boolean","map","item","BreadcrumbItem","title","isActive","to","Link","propTypes","PropTypes","arrayOf","shape","bool","string","HeaderTabs","history","Tabs","onSelect","event","tabString","activeKey","location","pathname","className","Tab","eventKey","paths","advisories","systems","object","withRouter","Header","showTabs","breadcrumbs","children","Fragment","array","any","WithLoaderVariants","loaderMap","size","isDark","centered","WithLoader","loading","variant","props","AdvisoryHeader","attributes","isLoading","Grid","gutter","GridItem","md","sm","Stack","StackItem","style","whiteSpace","description","public_date","processDate","modified_date","PortalAdvisoryLink","advisory","id","AdvisoryDetail","match","dispatch","useDispatch","React","useState","params","advisoryId","advisoryName","advisoryDetails","useSelector","AdvisoryDetailStore","useEffect","fetchAvisoryDetails","data"],"mappings":"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","file":"js/AdvisoryyPage.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-tabs.patchman-tabs{background-color:var(--pf-global--BackgroundColor--100);padding-left:var(--pf-c-page__main-section--md--PaddingLeft);display:block}\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderBreadcrumbs = ({ items }) => {\n    return (\n        <Breadcrumb>\n            {items.filter(Boolean).map(item => (\n                <BreadcrumbItem key={item.title} isActive={item.isActive}>\n                    {(item.to && <Link to={item.to}>{item.title}</Link>) ||\n                        item.title}\n                </BreadcrumbItem>\n            ))}\n        </Breadcrumb>\n    );\n};\n\nHeaderBreadcrumbs.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            isActive: PropTypes.bool,\n            to: PropTypes.string,\n            title: PropTypes.string\n        })\n    )\n};\n\nexport default HeaderBreadcrumbs;\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { paths } from '../../Routes';\nimport './Header.scss';\n\nconst HeaderTabs = ({ history }) => {\n    const handleRedirect = (event, tabString) => {\n        history.push(tabString);\n    };\n\n    return (\n        <Tabs\n            onSelect={handleRedirect}\n            activeKey={history.location.pathname}\n            className={'patchman-tabs'}\n        >\n            <Tab\n                eventKey={paths.advisories.to}\n                title={paths.advisories.title}\n            />\n            <Tab eventKey={paths.systems.to} title={paths.systems.title} />\n        </Tabs>\n    );\n};\n\nHeaderTabs.propTypes = {\n    history: propTypes.object\n};\n\nexport default withRouter(HeaderTabs);\n","import {\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport HeaderBreadcrumbs from './HeaderBreadcrumbs';\nimport HeaderTabs from './HeaderTabs';\n\nconst Header = ({ title, showTabs, breadcrumbs, children }) => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                {breadcrumbs && <HeaderBreadcrumbs items={breadcrumbs} />}\n                <PageHeaderTitle title={title} />\n                {children}\n            </PageHeader>\n            {showTabs && <HeaderTabs />}\n        </React.Fragment>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string,\n    showTabs: PropTypes.bool,\n    breadcrumbs: PropTypes.array,\n    children: PropTypes.any\n};\n\nexport default Header;\n","/* eslint-disable react/prop-types */\nimport { Skeleton, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\n\nexport const WithLoaderVariants = {\n    spinner: 'spinner',\n    skeleton: 'skeleton'\n};\n\nconst loaderMap = {\n    [WithLoaderVariants.skeleton]: ({ size, isDark }) => (\n        <Skeleton size={size} isDark={isDark} />\n    ),\n    [WithLoaderVariants.spinner]: ({ centered }) => (\n        <Spinner centered={centered} />\n    )\n};\n\nexport const WithLoader = ({ loading, variant, children, ...props }) => {\n    if (loading !== false) {\n        return loaderMap[variant](props);\n    }\n\n    return children;\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string,\n    children: propTypes.any\n};\n\nexport default WithLoader;\n","import { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport PortalAdvisoryLink from '../../PresentationalComponents/Snippets/PortalAdvisoryLink';\nimport WithLoader, {\n    WithLoaderVariants\n} from '../../PresentationalComponents/WithLoader/WithLoader';\n\nconst AdvisoryHeader = ({ attributes, isLoading }) => {\n    return (\n        <Grid gutter=\"sm\">\n            <GridItem md={8} sm={12}>\n                <WithLoader\n                    loading={isLoading}\n                    variant={WithLoaderVariants.spinner}\n                    centered\n                >\n                    <Stack gutter=\"sm\">\n                        <StackItem />\n                        <StackItem style={{ whiteSpace: 'pre-line' }}>\n                            {attributes.description}\n                        </StackItem>\n                        <StackItem>\n                            {attributes.public_date && (\n                                <React.Fragment>\n                                    {`Issued: ${processDate(\n                                        attributes.public_date\n                                    )}`}\n                                    <br />\n                                </React.Fragment>\n                            )}\n                            {attributes.modified_date && (\n                                <React.Fragment>\n                                    {`Modified: ${processDate(\n                                        attributes.modified_date\n                                    )}`}\n                                </React.Fragment>\n                            )}\n                        </StackItem>\n                        <StackItem>\n                            <PortalAdvisoryLink advisory={attributes.id} />\n                        </StackItem>\n                    </Stack>\n                </WithLoader>\n            </GridItem>\n        </Grid>\n    );\n};\n\nAdvisoryHeader.propTypes = {\n    attributes: propTypes.object,\n    isLoading: propTypes.bool\n};\n\nexport default AdvisoryHeader;\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport AdvisoryHeader from '../../PresentationalComponents/AdvisoryHeader/AdvisoryHeader';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { paths } from '../../Routes';\nimport { fetchAvisoryDetails } from '../../store/Actions/Actions';\n\nconst AdvisoryDetail = ({ match }) => {\n    const dispatch = useDispatch();\n    const [advisoryName] = React.useState(match.params.advisoryId);\n    const advisoryDetails = useSelector(\n        ({ AdvisoryDetailStore }) => AdvisoryDetailStore\n    );\n    React.useEffect(() => {\n        dispatch(fetchAvisoryDetails({ advisoryName }));\n    }, []);\n\n    const { attributes } = advisoryDetails.data;\n    return (\n        <React.Fragment>\n            <Header\n                title={advisoryName}\n                breadcrumbs={[\n                    {\n                        title: 'System Patching',\n                        to: paths.advisories.to,\n                        isActive: false\n                    },\n                    {\n                        title: advisoryName,\n                        isActive: true\n                    }\n                ]}\n            >\n                <AdvisoryHeader\n                    attributes={{ ...attributes, id: advisoryName }}\n                    isLoading={advisoryDetails.isLoading}\n                />\n            </Header>\n        </React.Fragment>\n    );\n};\n\nAdvisoryDetail.propTypes = {\n    match: propTypes.any\n};\n\nexport default withRouter(AdvisoryDetail);\n"],"sourceRoot":""}