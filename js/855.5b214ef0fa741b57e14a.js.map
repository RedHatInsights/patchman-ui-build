{"version":3,"sources":["webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/App.scss","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/Label.scss","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/SmartComponents/SystemDetail/SystemDetail.scss","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/App.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Messages.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Filters/PublishDateFilter.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Filters/SearchFilter.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Filters/StatusFilter.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Filters/TypeFilter.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/ExternalLink.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/NoSystemData.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/SystemUpToDate.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/TableView/TableFooter.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/TableView/TableView.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/TableView/TableViewAssets.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/NoAccess.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Routes.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/SmartComponents/Remediation/PatchRemediationButton.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/SmartComponents/Remediation/RemediationModal.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/AdvisoryType/AdvisoryType.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/EmptyStates.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/Label.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/DescriptionWithLink.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Utilities/DataMappers.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/AdvisoriesIcon.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Utilities/Helpers.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Utilities/Hooks.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Utilities/IntlProvider.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Utilities/axiosInterceptors.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Utilities/api.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Utilities/constants.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/Utilities/getBaseName.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/ActionTypes.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Actions/Actions.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/SmartComponents/SystemAdvisories/SystemAdvisories.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/SmartComponents/SystemPackages/SystemPackages.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/SmartComponents/SystemDetail/SystemDetail.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/SystemDetailStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/HelperReducers.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/AdvisoryDetailStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/AdvisoryListStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/AdvisorySystemsStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/CvesListStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/PackageDetailStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/PackagesListStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/PackageSystemsStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/SystemAdvisoryListStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/SystemPackageListStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/Reducers/SystemsListStore.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/store/index.js","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/App.scss?75e2","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/PresentationalComponents/Snippets/Label.scss?c1f9","webpack://@redhat-cloud-services/frontend-components-inventory-patchman/./src/SmartComponents/SystemDetail/SystemDetail.scss?9ba2"],"names":["___CSS_LOADER_EXPORT___","i","push","module","id","withRouter","dispatch","useDispatch","useState","selectedTags","systemProfile","config","setConfig","location","useLocation","history","useHistory","useEffect","listen","pathname","currentRoute","Object","values","paths","filter","element","includes","to","insights","chrome","appNavClick","navId","split","length","init","identifyApp","globalFilterScope","on","data","mapGlobalFilter","SID","SAP","Workloads","item","map","tag","encodeURIComponent","newconfig","isSelected","undefined","SID_filter","join","concat","globalFilter","unregister","event","domEvent","childProps","defineMessages","generalAppName","description","defaultMessage","labelsBulkSelectAll","labelsBulkSelectNone","labelsBulkSelectPage","labelsColumnsApplicableSystems","labelsColumnsCVSS","labelsColumnsCveID","labelsColumnsInstalledVersion","labelsColumnsLatestVersion","labelsColumnsName","labelsColumnsPackage","labelsColumnsPublishDate","labelsColumnsSeverity","labelsColumnsStatus","labelsColumnsSummary","labelsColumnsSynopsis","labelsColumnsType","labelsColumnsUpgradable","labelsCves","labelsCvesButton","labelsDescription","labelsFiltersCvesSearchPlaceHolder","labelsFiltersPackagesSearchPlaceHolder","labelsFiltersPackagesSearchTitle","labelsFiltersPublishDate","labelsFiltersSearch","labelsFiltersSearchAdvisoriesPlaceholder","labelsFiltersSearchAdvisoriesTitle","labelsFiltersStatus","labelsFiltersSystemsSearchPlaceholder","labelsFiltersSystemsSearchTitle","labelsFiltersType","labelsModifiedDate","labelsPublicDate","labelsRemediate","labelsSeverity","linksLearnAboutInsights","linksLearnMore","linksReadMore","linksSearchSecurityRatings","linksViewPackagesAndErrata","statesActivateInsights","statesError","statesMinimumPatchPermissionsRequired","statesNoApplicableAdvisories","statesNoMatchingAdvisories","statesNoMatchingCve","statesNoMatchingPackages","statesPatchNotConfigured","statesRequiresPatchPermissions","statesSystemUpToDate","textLockVersionTooltip","textThirdPartyInfo","titlesAdvisories","titlesAffectedSystems","titlesPackages","titlesPatchAdvisories","titlesPatchPackages","titlesPatchSystems","titlesSystems","apply","currentFilter","currentValue","public_date","filterByPublicDate","value","label","intl","messages","type","conditionalFilterType","filterValues","onChange","items","publicDateOptions","search","title","placeholder","React","searchValue","setSearchValue","debounce","searchAdvisory","updatable","updatableTypesMap","updatableTypes","toString","filterByType","advisoryTypesMap","advisoryTypes","advisory_type","ExternalLink","link","text","href","target","flex","default","spacer","propTypes","NoSystemData","style","paddingTop","icon","WrenchIcon","Title","headingLevel","size","Button","variant","component","SystemUpToDate","color","marginBottom","TableFooter","page","perPage","onSetPage","totalItems","onPerPageSelect","paginationOUIA","TableToolbar","Pagination","itemCount","widgetId","PaginationVariant","ouiaId","PropTypes","TableView","columns","store","rows","metadata","status","queryParams","onCollapse","onSelect","onSort","onExport","filterConfig","sortBy","remediationProvider","selectedRows","compact","remediationButtonOUIA","tableOUIA","errorState","emptyState","RemediationModalCmp","setRemediationModalCmp","convertLimitOffset","limit","offset","isRemediationLoading","setRemediationLoading","resolvedData","RemediationModal","removeFilter","useRemoveFilter","selectedCount","arrayFromObj","STATUS_REJECTED","STATUS_RESOLVED","PrimaryToolbar","pagination","total_items","isCompact","activeFiltersConfig","filters","buildFilterChips","onDelete","actionsConfig","actions","PatchRemediationButton","isDisabled","onClick","showRemediationModal","ouia","isLoading","exportConfig","bulkSelect","count","toggleProps","checked","STATUS_LOADING","SkeletonTable","colSize","rowSize","Table","aria-label","cells","canSelectAll","TableVariant","TableHeader","TableBody","advisoriesColumns","cellFormatters","expandable","transforms","sortable","cellWidth","key","systemAdvisoriesColumns","systemPackagesColumns","packagesColumns","props","width","cvesTableColumns","Page","Main","Bullseye","EmptyState","EmptyStateVariant","EmptyStateIcon","LockIcon","EmptyStateBody","Advisories","lazy","Systems","InventoryPage","AdvisoryPage","PackagsPage","PackageDetail","RegisterPage","advisories","systems","inventoryDetail","advisoryDetail","advisoryDetailSystem","register","packages","packageDetail","packageDetailSystem","Routes","hasPatchAccess","setPatchAccess","fetchSystems","then","res","meta","replace","err","path","Suspense","fallback","Fragment","Switch","Redirect","from","Route","exact","render","some","p","NoAccess","className","alignItems","justifyContent","display","Spinner","isSVG","globalPaletteWhite","remediations","setRemediations","experimental","loadRemediations","pfReactTable","PfTable","TableGridBreakpoint","SortByDirection","handleRemediationSuccess","addNotification","getNotification","openWizard","onRemediationCreated","RemediationWizard","defaultProps","f","AdvisoryType","advisoryType","Flex","FlexItem","EmptyAdvisoryList","SearchIcon","EmptyPackagesList","EmptyCvesList","Label","children","DescriptionWithLink","row","severityObject","getSeverityById","attributes","severity","TextContent","cve_count","TextList","TextListVariants","TextListItem","TextListItemVariants","Text","TextVariants","whiteSpace","truncate","RegExp","handlePatchLink","entityTypes","createAdvisoriesRows","expandedRows","index","isOpen","selected","synopsis","applicable_systems","processDate","parent","heightAuto","colSpan","createSystemAdvisoriesRows","keys","createSystemsRows","Math","random","packages_installed","applicable_advisories","rhea_count","rhba_count","rhsa_count","operating_system","osName","os_name","os_major","os_minor","rhsm","createPackageSystemsRows","installed_evra","available_evra","upgradable","createSystemPackagesRows","pkg","pkgNEVRA","name","evra","pkgUpdates","updates","latestUpdate","disableCheckbox","createUpgradableColumn","summary","createPackagesRows","systems_installed","systems_updatable","createCvesRows","console","log","window","cve","advisorySeverities","impact","origin","parseFloat","cvss_score","toFixed","AdvisoriesIcon","tooltipText","Icon","Tooltip","content","transformPairs","input","issues","advisory","createSortBy","header","column","multiple","direction","compoundSortValues","forEach","col","dir","findIndex","addOrRemoveItemFromSet","targetObj","inputArr","inputObj","reduce","obj","rowId","getNewSelectedItems","selectedItems","currentItems","payload","getRowIdByIndexExpandable","arrayOfObjects","getOffsetFromPageLimit","getLimitFromPageSize","str","max","end","substr","createAdvisoriesIcons","rhea","rhba","rhsa","every","SecurityIcon","BugIcon","EnhancementIcon","marginLeft","body","indexOf","Link","document","baseURI","remediationIdentifier","remediationProviderWithPairs","createPairs","transformFunc","pairsCreated","encodeParams","parameters","shouldTranslateKeys","allParams","result","entries","category","filterCategory","filterCategories","find","apiValue","getFilterValue","operator","flattenFilters","params","argKey","argValue","encodeApiParams","encodeURLParams","urlParams","decodeQueryparams","queryString","parsed","qs","startsWith","bracketIndex","objParent","slice","objKey","filterValue","categories","chips","match","changeListParams","oldParams","newParams","newState","hasOwnProperty","tags","subtractDate","days","date","Date","setDate","getDate","toISOString","preserveNewlines","sortCves","cves","sortedCves","sort","aCells","bCells","aCell","bCell","stringA","toUpperCase","stringB","localeCompare","reverse","createOSColumn","lockedVersion","useSetPage","callback","_","useHandleRefresh","per_page","usePagePerPage","usePerPageSelect","useSortColumn","columnName","compoundKey","selectedItem","categoryId","activeFilter","toRemove","Array","isArray","useOnSelect","rawData","fetchAllData","selectRows","constructFilename","transformKey","constructKey","createSelectedRow","toSelect","setPageTitle","useDeepCompareEffect","effect","deps","ref","current","isDeepEqualReact","cache","createIntlCache","locale","navigator","language","createIntl","onError","axiosInstance","axios","getUserPermissions","userPermissions","inventoryPermissionList","access","permission","interceptors","request","use","authInterceptor","response","responseDataInterceptor","error","ReadOnlyNotification","isAxiosError","statusText","detail","createApiCall","endpoint","method","auth","getUser","url","withCredentials","fetchApplicableAdvisoriesApi","fetchApplicableSystemAdvisoriesApi","fetchSystemDetails","fetchAdvisoryDetailsApi","advisoryName","fetchPackageDetailsApi","packageName","fetchApplicablePackagesApi","fetchAdvisorySystems","args","fetchPackageSystems","fetchPackagesList","fetchCvesInfo","cveIds","fetch","credentials","headers","Accept","JSON","stringify","cve_list","json","fetchViewAdvisoriesSystems","exportAdvisoriesCSV","Headers","accept","exportAdvisoriesJSON","exportSystemsCSV","exportSystemsJSON","exportPackagesCSV","exportPackagesJSON","asc","desc","storeListDefaults","isBeta","packagesListUpdatableTypes","remediationIdentifiers","package","release","pathName","shift","FETCH_APPLICABLE_ADVISORIES","EXPAND_ADVISORY_ROW","SELECT_ADVISORY_ROW","CHANGE_ADVISORY_LIST_PARAMS","FETCH_SYSTEMS","CHANGE_SYSTEMS_LIST_PARAMS","CHANGE_SYSTEM_ADVISORY_LIST_PARAMS","EXPAND_SYSTEM_ADVISORY_ROW","FETCH_APPLICABLE_SYSTEM_ADVISORIES","SELECT_SYSTEM_ADVISORY_ROW","CLEAR_SYSTEM_ADVISORIES","FETCH_ADVISORY_DETAILS","FETCH_AFFECTED_SYSTEMS","CHANGE_AFFECTED_SYSTEMS_PARAMS","CLEAR_AFFECTED_SYSTEMS","CLEAR_ADVISORY_DETAILS","CHANGE_SYSTEM_PACKAGES_LIST_PARAMS","FETCH_APPLICABLE_SYSTEM_PACKAGES","SELECT_SYSTEM_PACKAGES_ROW","CLEAR_SYSTEM_PACKAGES","TRIGGER_GLOBAL_FILTER","FETCH_PACKAGES_LIST","FETCH_PACKAGE_DETAILS","CLEAR_PACKAGE_DETAILS","CHANGE_PACKAGES_LIST_PARAMS","FETCH_PACKAGE_SYSTEMS","CLEAR_PACKAGE_SYSTEMS","CHANGE_PACKAGE_SYSTEMS_PARAMS","FETCH_CVES_INFO","CHANGE_CVES_STORE_PARAMS","FETCH_SYSTEM_DETAIL","fetchApplicableAdvisories","ActionTypes","Promise","resolve","fetchApplicableSystemAdvisories","noError","fetchAvisoryDetails","fetchPackageDetails","fetchSystemsAction","changeAdvisoryListParams","changeSystemAdvisoryListParams","changeSystemsListParams","changeAdvisorySystemsParams","expandAdvisoryRow","rowState","expandSystemAdvisoryRow","selectAdvisoryRow","selectSystemAdvisoryRow","clearSystemAdvisoriesStore","clearSystemPackagesStore","clearAdvisorySystemsStore","clearAdvisoryDetailStore","clearPackageDetailStore","fetchAdvisorySystemsAction","fetchPackageSystemsAction","clearPackageSystemsStore","fetchApplicableSystemPackages","selectSystemPackagesRow","changeSystemPackagesParams","fetchPackagesAction","changePackagesListParams","changePackageSystemsParams","fetchCves","fetchSystemDetailsAction","SystemAdvisories","handleNoSystemData","firstMount","setFirstMount","useSelector","SystemAdvisoryListStore","entity","entityDetails","Unavailable","systemId","searchFilter","typeFilter","publishDateFilter","SystemPackages","SystemPackageListStore","statusFilter","SystemDetail","isInventoryApp","activeTabKey","setActiveTabKey","areTabsHidden","setTabsHidden","prevTabsHidden","Tabs","activeKey","isHidden","Tab","eventKey","TabTitleText","T","data-ouia-component-type","data-ouia-component-id","initialState","loaded","SystemDetailStore","state","hasThirdPartyRepo","third_party","activeApps","changeFilters","action","selectedUpdated","expandRows","expandedUpdated","fetchPending","fetchRejected","fetchFulfilled","AdvisoryDetailStore","AdvisoryListStore","AdvisorySystemsStore","CvesListStore","PackageDetailStore","initialStore","PackagesListStore","PackageSystemsStore","initializeState","SystemsListStore","storage","parse","sessionStorage","getItem","registry","getRegistry","promiseMiddleware","notificationsMiddleware","next","storeContent","getState","endsWith","setItem","notifications","notificationsReducer","getStore","newReducers","update","hot","invalidate","oldLocals","a","b","isNamedExport","isEqualLocals","dispose"],"mappings":"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","file":"js/855.5b214ef0fa741b57e14a.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components/index.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-notifications/index.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".patch{}.patch :root{--ins-color--orange: #ec7a08}.patch button:focus{outline:none}.patch .remediationButtonPatch:disabled svg{color:white}.patch table.patchCompactInventory .ins-composed-col{font-size:var(--pf-c-table--m-compact--FontSize)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.scss\"],\"names\":[],\"mappings\":\"AAAA,OAAM,CAAN,aAC0J,4BAAoB,CAD9K,oBACoM,YAAY,CADhN,4CACsP,WAAW,CADjQ,qDACgT,gDAAgD\",\"sourcesContent\":[\".patch{\\n@import url(~@redhat-cloud-services/frontend-components/index.css);@import url(~@redhat-cloud-services/frontend-components-notifications/index.css);:root{--ins-color--orange: #ec7a08}button:focus{outline:none}.remediationButtonPatch:disabled svg{color:white}table.patchCompactInventory .ins-composed-col{font-size:var(--pf-c-table--m-compact--FontSize)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".patch span.patchman-label{display:inline-block;font-size:var(--pf-global--FontSize--sm);font-weight:var(--pf-global--FontWeight--bold);line-height:var(--pf-global--LineHeight--sm);color:var(--pf-global--Color--100)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/PresentationalComponents/Snippets/Label.scss\"],\"names\":[],\"mappings\":\"AAAA,2BACoB,oBAAoB,CAAC,wCAAwC,CAAC,8CAA8C,CAAC,4CAA4C,CAAC,kCAAkC\",\"sourcesContent\":[\".patch{\\nspan.patchman-label{display:inline-block;font-size:var(--pf-global--FontSize--sm);font-weight:var(--pf-global--FontWeight--bold);line-height:var(--pf-global--LineHeight--sm);color:var(--pf-global--Color--100)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".patch .patchTabSelect{background-color:white}.patch .patchTabSelect .pf-c-tabs__item-text{padding:8px 0px 8px 0px}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/SmartComponents/SystemDetail/SystemDetail.scss\"],\"names\":[],\"mappings\":\"AAAA,uBACgB,sBAAsB,CADtC,6CAC6E,uBAAuB\",\"sourcesContent\":[\".patch{\\n.patchTabSelect{background-color:white}.patchTabSelect .pf-c-tabs__item-text{padding:8px 0px 8px 0px}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\n\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { isEqual } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation, withRouter } from 'react-router-dom';\nimport './App.scss';\nimport { paths, Routes } from './Routes';\nimport { globalFilter } from './store/Actions/Actions';\nconst App = () => {\n    const dispatch = useDispatch();\n    const [config, setConfig] = useState({\n        selectedTags: [],\n        systemProfile: false\n    });\n    const location = useLocation();\n    const history = useHistory();\n\n    const listenNavigation = () => {\n        return  insights.chrome.on('APP_NAVIGATION', event => {\n            if (event.domEvent) {\n                history.push(`/${event.navId}`);\n            }\n        });\n    };\n\n    useEffect(() => {\n        history.listen((location) => {\n            const { pathname } = location;\n            const currentRoute = Object.values(paths).filter(element => pathname !== '/' && pathname.includes(element.to));\n\n            if (pathname === '/') {\n                insights.chrome.appNavClick({ id: 'advisories' }, false);\n            }\n            else if (currentRoute) {\n                const navId =  pathname.split('/').filter(element => element.length > 0)[0];\n                navId && insights.chrome.appNavClick({ id: navId });\n            }\n        });\n    }, [location.pathname]);;\n\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp('patch');\n\n        if (insights.chrome?.globalFilterScope) {\n            insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const [workloads, SID, tags] = insights.chrome?.mapGlobalFilter?.(data, false, true);\n                const SAP = data?.Workloads?.SAP;\n                const selectedTags = insights.chrome?.mapGlobalFilter?.(data)\n                ?.filter(item => !item.includes('Workloads')).map(tag => (`tags=${encodeURIComponent(tag)}`));\n\n                const newconfig = { };\n                (SAP && SAP.isSelected)\n                    ? (newconfig.systemProfile = `filter[system_profile][sap_system]=${SAP.isSelected}&`)\n                    : newconfig.systemProfile = undefined;\n                selectedTags && (newconfig.selectedTags = selectedTags);\n                if (SID && SID?.length !== 0) {\n                    const SID_filter = SID.map(item=> `filter[system_profile][sap_sids][in]=${item}`).join('&') ;\n                    newconfig.systemProfile = newconfig.systemProfile?.concat(SID_filter) || SID_filter;\n                }\n\n                if (!isEqual(config, newconfig)) {\n                    dispatch(globalFilter(newconfig));\n                    setConfig(newconfig);\n                }\n\n            });\n        }\n\n        const unregister = listenNavigation();\n        return () => unregister();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <NotificationPortal />\n            <Routes childProps={location, history} />\n        </React.Fragment>\n    );\n};\n\nexport default withRouter(App);\n","\n/* eslint-disable max-len */\n/* eslint sort-keys: [\"error\", \"asc\", {minKeys: 4}] */\n\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n\n    generalAppName: {\n        id: 'generalAppName',\n        description: 'regsiter page title',\n        defaultMessage: 'Patch'\n    },\n    labelsBulkSelectAll: {\n        id: 'labelsBulkSelectAll',\n        description: 'bulk select option',\n        defaultMessage: 'Select all ({count})'\n    },\n    labelsBulkSelectNone: {\n        id: 'labelsBulkSelectNone',\n        description: 'bulk select option',\n        defaultMessage: 'Select none (0)'\n    },\n    labelsBulkSelectPage: {\n        id: 'labelsBulkSelectPage',\n        description: 'bulk select option',\n        defaultMessage: 'Select page ({count})'\n    },\n    labelsColumnsApplicableSystems: {\n        id: 'labelsColumnsApplicableSystems',\n        description: 'shared label',\n        defaultMessage: 'Applicable systems'\n    },\n    labelsColumnsCVSS: {\n        id: 'labelsColumnsCVSS',\n        description: 'shared label',\n        defaultMessage: 'CVSS'\n    },\n    labelsColumnsCveID: {\n        id: 'labelsColumnsCveID',\n        description: 'shared label',\n        defaultMessage: 'CVE ID'\n    },\n    labelsColumnsInstalledVersion: {\n        id: 'labelsColumnsInstalledVersion',\n        description: 'shared label',\n        defaultMessage: 'Installed version'\n    },\n    labelsColumnsLatestVersion: {\n        id: 'labelsColumnsLatestVersion',\n        description: 'shared label',\n        defaultMessage: 'Latest version'\n    },\n    labelsColumnsName: {\n        id: 'labelsColumnsName',\n        description: 'shared label',\n        defaultMessage: 'Name'\n    },\n    labelsColumnsPackage: {\n        id: 'labelsColumnsPackage',\n        description: 'shared single noun label',\n        defaultMessage: 'Package'\n    },\n    labelsColumnsPublishDate: {\n        id: 'labelsColumnsPublishDate',\n        description: 'shared label',\n        defaultMessage: 'Publish date'\n    },\n    labelsColumnsSeverity: {\n        id: 'labelsColumnsSeverity',\n        description: 'shared label',\n        defaultMessage: 'Severity'\n    },\n    labelsColumnsStatus: {\n        id: 'labelsColumnsStatus',\n        description: 'Label for status fitler placeholder',\n        defaultMessage: 'Status'\n    },\n    labelsColumnsSummary: {\n        id: 'labelsColumnsSummary',\n        description: 'shared label',\n        defaultMessage: 'Summary'\n    },\n    labelsColumnsSynopsis: {\n        id: 'labelsColumnsSynopsis',\n        description: 'shared label',\n        defaultMessage: 'Synopsis'\n    },\n    labelsColumnsType: {\n        id: 'labelsColumnsType',\n        description: 'Label for type fitler placeholder',\n        defaultMessage: 'Type'\n    },\n    labelsColumnsUpgradable: {\n        id: 'labelsColumnsUpgradable',\n        description: 'shared label',\n        defaultMessage: 'Upgradable'\n    },\n    labelsCves: {\n        id: 'labelsCves',\n        description: 'label for cves info link',\n        defaultMessage: 'CVEs'\n    },\n    labelsCvesButton: {\n        id: 'labelsCvesButton',\n        description: 'label for cves button',\n        defaultMessage: '{cvesCount, plural, one {# CVE} other {# CVEs}} associated with this patch'\n    },\n    labelsDescription: {\n        id: 'labelsDescription',\n        description: 'Label',\n        defaultMessage: 'Description'\n    },\n    labelsFiltersCvesSearchPlaceHolder: {\n        id: 'labelsFiltersCvesSearch',\n        description: 'search filter placeholder for packages pages',\n        defaultMessage: 'Filter by CVE ID'\n    },\n    labelsFiltersPackagesSearchPlaceHolder: {\n        id: 'labelsFiltersPackagesSearchPlaceHolder',\n        description: 'search filter placeholder for packages pages',\n        defaultMessage: 'Filter by name or summary'\n    },\n    labelsFiltersPackagesSearchTitle: {\n        id: 'labelsFiltersPackagesSearchTitle',\n        description: 'search filter placeholder for packages pages',\n        defaultMessage: 'Package'\n    },\n    labelsFiltersPublishDate: {\n        id: 'labelsFiltersPublishDate',\n        description: 'shared label',\n        defaultMessage: 'Publish date'\n    },\n    labelsFiltersSearch: {\n        id: 'labelsFiltersSearch',\n        description: 'Label for search fitler placeholder',\n        defaultMessage: 'Search '\n    },\n    labelsFiltersSearchAdvisoriesPlaceholder: {\n        id: 'labelsFiltersSearchAdvisoriesPlaceholder',\n        description: 'Label for search fitler placeholder',\n        defaultMessage: 'Filter by name or synopsis'\n    },\n    labelsFiltersSearchAdvisoriesTitle: {\n        id: 'labelsFiltersSearchAdvisoriesTitle',\n        description: 'Label for search fitler placeholder',\n        defaultMessage: 'Advisory'\n    },\n    labelsFiltersStatus: {\n        id: 'labelsFiltersStatus',\n        description: 'Label for status fitler placeholder',\n        defaultMessage: 'Status'\n    },\n    labelsFiltersSystemsSearchPlaceholder: {\n        id: 'labelsFiltersSystemsSearch',\n        description: 'search filter placeholder for systems pages',\n        defaultMessage: 'Filter by name'\n    },\n    labelsFiltersSystemsSearchTitle: {\n        id: 'labelsFiltersSystemsSearchTitle',\n        description: 'search filter placeholder for systems pages',\n        defaultMessage: 'System'\n    },\n    labelsFiltersType: {\n        id: 'labelsFiltersType',\n        description: 'Label for type fitler placeholder',\n        defaultMessage: 'Type'\n    },\n    labelsModifiedDate: {\n        id: 'labelsModifiedDate',\n        description: 'Modified date label',\n        defaultMessage: 'Modified {date}'\n    },\n    labelsPublicDate: {\n        id: 'labelsPublicDate',\n        description: 'Public date label',\n        defaultMessage: 'Issued {date}'\n    },\n    labelsRemediate: {\n        id: 'labelsRemediate',\n        description: 'Button label',\n        defaultMessage: 'Remediate'\n    },\n    labelsSeverity: {\n        id: 'labelsSeverity',\n        description: 'label for cves info',\n        defaultMessage: 'Severity'\n    },\n    linksLearnAboutInsights: {\n        id: 'linksLearnAboutInsights',\n        description: 'no system data page button label',\n        defaultMessage: 'Learn about the Insights client'\n    },\n    linksLearnMore: {\n        id: 'linksLearnMore',\n        description: 'Learn more',\n        defaultMessage: 'Learn more'\n    },\n    linksReadMore: {\n        id: 'linksReadMore',\n        description: 'Label',\n        defaultMessage: 'Read more'\n    },\n    linksSearchSecurityRatings: {\n        id: 'linksSearchSecurityRatings',\n        description: 'A link label to security ratings page',\n        defaultMessage: 'Learn more about security ratings'\n    },\n    linksViewPackagesAndErrata: {\n        id: 'viewPackagesAndErrata',\n        description: 'A link label to access.redhat.com ',\n        defaultMessage: 'View packages and errata at access.redhat.com'\n    },\n    statesActivateInsights: {\n        id: 'statesActivateInsights',\n        description: 'no system data page body',\n        defaultMessage: 'Activate the Insights client'\n    },\n    statesError: {\n        id: 'statesError',\n        description: 'Label',\n        defaultMessage: 'Error'\n    },\n    statesMinimumPatchPermissionsRequired: {\n        id: 'statesMinimumPatchPermissionsRequired',\n        description: 'No access page body',\n        defaultMessage: 'To view the content of this page, you must be granted a minimum of Patch permissions from your Organisation Administratior'\n    },\n    statesNoApplicableAdvisories: {\n        id: 'statesNoApplicableAdvisories',\n        description: 'system up to date page title',\n        defaultMessage: 'No applicable advisories'\n    },\n    statesNoMatchingAdvisories: {\n        id: 'statesNoMatchingAdvisories',\n        description: 'Label',\n        defaultMessage: 'No matching advisories found'\n    },\n    statesNoMatchingCve: {\n        id: 'statesNoMatchingCve',\n        description: 'Label',\n        defaultMessage: 'No matching CVES found'\n    },\n    statesNoMatchingPackages: {\n        id: 'statesNoMatchingPackages',\n        description: 'Label',\n        defaultMessage: 'No matching packages found'\n    },\n    statesPatchNotConfigured: {\n        id: 'statesPatchNotConfigured',\n        description: 'no system data page title',\n        defaultMessage: 'Patch is not yet configured'\n    },\n    statesRequiresPatchPermissions: {\n        id: 'statesRequiresPatchPermissions',\n        description: 'No access page title',\n        defaultMessage: 'This application requires Patch permissions'\n    },\n    statesSystemUpToDate: {\n        id: 'statesSystemUpToDate',\n        description: 'system up to date page body',\n        defaultMessage: 'This system is up to date, based on package information submitted at the most recent system check-in'\n    },\n    textLockVersionTooltip: {\n        id: 'textLockVersionTooltip',\n        description: 'Tooltip text for vesrion lock column',\n        defaultMessage: `Your RHEL version is locked at version {lockedVersion}`\n    },\n    textThirdPartyInfo: {\n        id: 'textThirdPartyInfo',\n        description: 'text about the third paty managed hosts',\n        defaultMessage: 'This system has content that is managed by repositories other than the Red Hat CDN'\n    },\n    titlesAdvisories: {\n        id: 'titlesAdvisories',\n        description: 'page title with capital letter',\n        defaultMessage: 'Advisories'\n    },\n    titlesAffectedSystems: {\n        id: 'affectedSystems',\n        description: 'page title with capital letter',\n        defaultMessage: 'Affected systems'\n    },\n    titlesPackages: {\n        id: 'titlesPackages',\n        description: 'page title with capital letters',\n        defaultMessage: 'Packages'\n    },\n    titlesPatchAdvisories: {\n        id: 'titlesPatchAdvisories',\n        description: 'title for Advisories page',\n        defaultMessage: 'Patch advisories'\n    },\n    titlesPatchPackages: {\n        id: 'titlesPatchPackages',\n        description: 'title for Packages page',\n        defaultMessage: 'Patch packages'\n    },\n    titlesPatchSystems: {\n        id: 'titlesPatchSystems',\n        description: 'title for Systems page',\n        defaultMessage: 'Patch systems'\n    },\n    titlesSystems: {\n        id: 'titlesSystems',\n        description: 'title with capital letters',\n        defaultMessage: 'Systems'\n    }\n});\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { publicDateOptions } from '../../Utilities/constants';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst publishDateFilter = (apply, currentFilter = {}) => {\n    let { public_date: currentValue } = currentFilter;\n\n    const filterByPublicDate = value => {\n        apply({ filter: { public_date: (value !== 'all' && value) || '' } });\n    };\n\n    return {\n        label: intl.formatMessage(messages.labelsFiltersPublishDate),\n        type: conditionalFilterType.radio,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByPublicDate(value);\n            },\n            items: publicDateOptions,\n            value: currentValue\n        }\n    };\n};\n\nexport default publishDateFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst searchFilter = (apply, search, title, placeholder) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [searchAdvisory] = React.useState(() =>\n        debounce(value => apply({ search: value }), 400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: title,\n        filterValues: {\n            'aria-label': 'search-field',\n            onChange: (event, value) => {\n                setSearchValue(value);\n                searchAdvisory(value);\n            },\n            placeholder,\n            value: searchValue\n        }\n    };\n};\n\nexport default searchFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport React from 'react';\nimport { updatableTypes } from '../../Utilities/constants';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { updatable: currentValue } = currentFilter;\n    // Empty string value is not supported by PF Radio at the moment\n    if (currentValue === '' || !currentValue) {\n        currentValue = '0';\n    }\n\n    const updatableTypesMap = React.useMemo(\n        () =>\n            updatableTypes.map(({ value, label }) => ({\n                label,\n                value: value.toString()\n            })),\n        []\n    );\n    const filterByType = value => {\n        apply({ filter: { updatable: (value !== '0' && value) || '' } });\n    };\n\n    return {\n        label: intl.formatMessage(messages.labelsFiltersStatus),\n        type: conditionalFilterType.radio,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByType(value);\n            },\n            items: updatableTypesMap,\n            value: currentValue\n        }\n    };\n};\n\nexport default statusFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport React from 'react';\nimport { advisoryTypes } from '../../Utilities/constants';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst typeFilter = (apply, currentFilter = {}) => {\n    const advisoryTypesMap = React.useMemo(\n        () =>\n            advisoryTypes.map(({ value, label }) => ({\n                label,\n                value: value.toString()\n            })),\n        []\n    );\n    const filterByType = value => {\n        apply({ filter: { advisory_type: value } });\n    };\n\n    return {\n        label: intl.formatMessage(messages.labelsFiltersType),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByType(value);\n            },\n            items: advisoryTypesMap,\n            value: currentFilter.advisory_type\n        }\n    };\n};\n\nexport default typeFilter;\n","import { Flex, FlexItem } from '@patternfly/react-core';\nimport ExternalLinkSquareAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-square-alt-icon';\nimport propTypes from 'prop-types';\nimport React from 'react';\n\nconst ExternalLink = ({ link, text }) => {\n    return (\n        <a\n            href={link}\n            target=\"__blank\"\n        >\n            <Flex flex={{ default: 'inlineFlex' }}>\n                <FlexItem spacer={{ default: 'spacerSm' }}>\n                    <ExternalLinkSquareAltIcon />\n                </FlexItem>\n                <FlexItem spacer={{ default: 'spacerSm' }}>\n                    {text}\n                </FlexItem>\n            </Flex>\n        </a>\n\n    );\n};\n\nExternalLink.propTypes = {\n    link: propTypes.string,\n    text: propTypes.string\n};\n\nexport default ExternalLink;\n","import { Bullseye, Button, EmptyState, EmptyStateBody, EmptyStateIcon, Title } from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nexport const NoSystemData = () => (\n    <Bullseye>\n        <EmptyState style={{ paddingTop: 40 }}>\n            <EmptyStateIcon icon={WrenchIcon} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                {intl.formatMessage(messages.statesPatchNotConfigured)}\n            </Title>\n            <EmptyStateBody>\n                {intl.formatMessage(messages.statesActivateInsights)}\n            </EmptyStateBody>\n            <Button\n                variant=\"primary\"\n                component=\"a\"\n                href=\"http://access.redhat.com/products/cloud_management_services_for_rhel#getstarted\"\n            >\n                {intl.formatMessage(messages.linksLearnAboutInsights)}\n            </Button>\n        </EmptyState>\n    </Bullseye>\n);\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Title } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nexport const SystemUpToDate = () => (\n    <Bullseye>\n        <EmptyState style={{ paddingTop: 40 }}>\n            <EmptyStateIcon icon={()=><CheckCircleIcon size='xl' color={'var(--pf-global--success-color--200)' }\n                style={{ marginBottom: 15 }} />}/>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                {intl.formatMessage(messages.statesNoApplicableAdvisories)}\n            </Title>\n            <EmptyStateBody>\n                {intl.formatMessage(messages.statesSystemUpToDate)}\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TableFooter = ({ page, perPage, onSetPage, totalItems, onPerPageSelect, paginationOUIA }) => {\n    return (\n        <TableToolbar>\n            <Pagination\n                itemCount={totalItems}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                onPerPageSelect={onPerPageSelect}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n                ouiaId={paginationOUIA}\n            />\n        </TableToolbar>\n    );\n};\n\nTableFooter.propTypes = {\n    onSetPage: PropTypes.func,\n    onPerPageSelect: PropTypes.func,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    totalItems: PropTypes.number,\n    paginationOUIA: PropTypes.string\n};\n\nexport default TableFooter;\n","import { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport PatchRemediationButton from '../../SmartComponents/Remediation/PatchRemediationButton';\nimport RemediationModal from '../../SmartComponents/Remediation/RemediationModal';\nimport { STATUS_LOADING, STATUS_REJECTED, STATUS_RESOLVED } from '../../Utilities/constants';\nimport { arrayFromObj, buildFilterChips, convertLimitOffset } from '../../Utilities/Helpers';\nimport { useRemoveFilter } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport TableFooter from './TableFooter';\n\nconst TableView = ({\n    columns,\n    store: {\n        rows,\n        metadata,\n        status,\n        queryParams: { filter, search }\n    },\n    onCollapse,\n    onSelect,\n    onSetPage,\n    onPerPageSelect,\n    onSort,\n    onExport,\n    filterConfig,\n    sortBy,\n    remediationProvider,\n    selectedRows,\n    compact,\n    apply,\n    remediationButtonOUIA,\n    tableOUIA,\n    paginationOUIA,\n    errorState,\n    emptyState\n}) => {\n    const [\n        RemediationModalCmp,\n        setRemediationModalCmp\n    ] = React.useState(() => () => null);\n    const [page, perPage] = React.useMemo(\n        () => convertLimitOffset(metadata.limit, metadata.offset),\n        [metadata.limit, metadata.offset]\n    );\n\n    const [isRemediationLoading, setRemediationLoading] = React.useState(false);\n\n    async function showRemediationModal(data) {\n        setRemediationLoading(true);\n        const resolvedData = await data;\n        setRemediationModalCmp(() => () => <RemediationModal data={resolvedData} />);\n        setRemediationLoading(false);\n    }\n\n    const removeFilter = useRemoveFilter(filter, apply);\n    const selectedCount = selectedRows && arrayFromObj(selectedRows).length;\n\n    return (\n        <React.Fragment>\n            {\n                (status === STATUS_REJECTED) && errorState ||\n                (status === STATUS_RESOLVED && emptyState !== false) && emptyState ||\n                (<React.Fragment>\n                    <PrimaryToolbar\n                        pagination={{\n                            itemCount: metadata.total_items,\n                            page,\n                            perPage,\n                            isCompact: true,\n                            onSetPage,\n                            onPerPageSelect,\n                            ouiaId: `top-${paginationOUIA}`\n                        }}\n                        filterConfig={filterConfig}\n                        activeFiltersConfig={{\n                            filters: buildFilterChips(filter, search),\n                            onDelete: removeFilter\n                        }}\n                        actionsConfig={{ actions: [remediationProvider && (\n                            <React.Fragment>\n                                <PatchRemediationButton\n                                    isDisabled={selectedCount === 0 || isRemediationLoading}\n                                    onClick={() =>\n                                        showRemediationModal(remediationProvider())\n                                    }\n                                    ouia={remediationButtonOUIA}\n                                    isLoading={isRemediationLoading}\n                                />\n\n                                <RemediationModalCmp />\n                            </React.Fragment>\n                        )] }}\n                        exportConfig={{ onSelect: onExport }}\n                        bulkSelect={onSelect && {\n                            count: selectedCount,\n                            items: [{\n                                title: intl.formatMessage(messages.labelsBulkSelectNone),\n                                onClick: () => {\n                                    onSelect('none');\n                                }\n                            }, {\n                                title: intl.formatMessage(messages.labelsBulkSelectPage,\n                                    { count: onCollapse && rows.length / 2 || rows.length }\n                                ),\n                                onClick: () => {\n                                    onSelect('page');\n                                }\n                            },\n                            {\n                                title: intl.formatMessage(messages.labelsBulkSelectAll, { count: metadata.total_items }),\n                                onClick: () => {\n                                    onSelect('all');\n                                }\n                            }],\n                            onSelect: (value) => {\n                                value ? onSelect('all') : onSelect('none');\n                            },\n                            toggleProps: {\n                                'data-ouia-component-type': 'bulk-select-toggle-button'\n                            },\n                            checked: selectedCount === metadata.total_items ? true : selectedCount === 0 ? false : null\n                        }}\n\n                    />\n\n                    {status === STATUS_LOADING && <SkeletonTable colSize={5} rowSize={20} />}\n                    {status === STATUS_RESOLVED && (\n                        <React.Fragment>\n                            <Table\n                                aria-label=\"Patch table view\"\n                                cells={metadata.total_items && columns || ['']}\n                                onSelect={onSelect}\n                                rows={rows}\n                                onCollapse={metadata.total_items && onCollapse}\n                                canSelectAll={false}\n                                onSort={onSort}\n                                ouiaId={tableOUIA}\n                                sortBy={metadata.total_items && sortBy}\n                                variant={compact && TableVariant.compact}\n                            >\n                                <TableHeader />\n                                <TableBody />\n                            </Table>\n                            <TableFooter\n                                totalItems={metadata.total_items}\n                                perPage={perPage}\n                                page={page}\n                                onSetPage={onSetPage}\n                                onPerPageSelect={onPerPageSelect}\n                                paginationOUIA={`bottom-${paginationOUIA}`}\n                            />\n                        </React.Fragment>)}\n                </React.Fragment>)\n            }\n        </React.Fragment>\n    );\n};\n\nTableView.propTypes = {\n    columns: PropTypes.array,\n    onCollapse: PropTypes.func,\n    onSelect: PropTypes.func,\n    onSetPage: PropTypes.func,\n    onPerPageSelect: PropTypes.func,\n    onSort: PropTypes.func,\n    onExport: PropTypes.func,\n    remediationProvider: PropTypes.func,\n    selectedRows: PropTypes.object,\n    apply: PropTypes.func,\n    sortBy: PropTypes.object,\n    filterConfig: PropTypes.object,\n    store: PropTypes.object,\n    compact: PropTypes.bool,\n    remediationButtonOUIA: PropTypes.string,\n    tableOUIA: PropTypes.string,\n    paginationOUIA: PropTypes.string,\n    errorState: PropTypes.any,\n    emptyState: PropTypes.any\n};\n\nexport default TableView;\n","import { cellWidth, expandable, sortable } from '@patternfly/react-table/dist/js';\nimport messages from '../../Messages';\nimport { intl } from '../../Utilities/IntlProvider';\n\nexport const advisoriesColumns = [\n    {\n        title: intl.formatMessage(messages.labelsColumnsName),\n        cellFormatters: [expandable],\n        transforms: [sortable, cellWidth(15)],\n        key: 'id'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsSynopsis),\n        transforms: [sortable],\n        key: 'synopsis'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsType),\n        transforms: [sortable, cellWidth(10)],\n        key: 'advisory_type'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsApplicableSystems),\n        transforms: [sortable, cellWidth(15)],\n        key: 'applicable_systems'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsPublishDate),\n        transforms: [sortable, cellWidth(15)],\n        key: 'public_date'\n    }\n];\n\nexport const systemAdvisoriesColumns = [\n    {\n        title: intl.formatMessage(messages.labelsColumnsName),\n        cellFormatters: [expandable],\n        transforms: [sortable, cellWidth(15)],\n        key: 'id'\n    },\n    {\n        title: 'Synopsis',\n        transforms: [sortable, cellWidth(45)],\n        key: 'synopsis'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsType),\n        transforms: [sortable, cellWidth(15)],\n        key: 'advisory_type'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsPublishDate),\n        transforms: [sortable, cellWidth(25)],\n        key: 'public_date'\n    }\n];\n\nexport const systemPackagesColumns = [\n    {\n        title: intl.formatMessage(messages.labelsColumnsPackage),\n        transforms: [sortable, cellWidth(20)],\n        key: 'name'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsInstalledVersion),\n        transforms: [sortable, cellWidth(15)],\n        key: 'evra'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsLatestVersion),\n        transforms: [cellWidth(15)],\n        key: 'latest_update'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsStatus),\n        transforms: [cellWidth(10)],\n        key: 'updatable'\n    },\n    {\n        title: intl.formatMessage(messages.labelsColumnsSummary),\n        transforms: [sortable, cellWidth(40)],\n        key: 'summary'\n    }\n];\n\nexport const packagesColumns = [\n    {\n        key: 'name',\n        title: intl.formatMessage(messages.labelsColumnsPackage),\n        transforms: [sortable, cellWidth(25)]\n    },\n    {\n        key: 'systems_installed',\n        title: intl.formatMessage(messages.labelsColumnsApplicableSystems),\n        transforms: [sortable, cellWidth(15)],\n        props: {\n            width: 10\n        }\n    },\n    {\n        key: 'systems_updatable',\n        title: intl.formatMessage(messages.labelsColumnsUpgradable),\n        transforms: [sortable, cellWidth(10)],\n        props: {\n            width: 10\n        }\n    },\n    {\n        key: 'summary',\n        title: intl.formatMessage(messages.labelsColumnsSummary),\n        transforms: [sortable, cellWidth(40)],\n        props: {\n            width: 30\n        }\n    }\n];\n\nexport const cvesTableColumns = [\n    {\n        title: intl.formatMessage(messages.labelsColumnsCveID),\n        transforms: [sortable, cellWidth(40)],\n        key: 'synopsis'\n    },\n    {\n        key: 'impact',\n        title: intl.formatMessage(messages.labelsColumnsSeverity),\n        transforms: [sortable, cellWidth(30)],\n        props: {\n            width: 30\n        }\n    },\n    {\n        key: 'cvss',\n        title: intl.formatMessage(messages.labelsColumnsCVSS),\n        transforms: [sortable, cellWidth(30)],\n        props: {\n            width: 30\n        }\n    }\n];\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { LockIcon } from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Page, Title } from '@patternfly/react-core';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst NoAccessPage = () => {\n    return (\n        <Page>\n            <Main>\n                <Bullseye>\n                    <EmptyState variant={EmptyStateVariant.large}>\n                        <EmptyStateIcon icon={LockIcon} />\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                            {intl.formatMessage(messages.statesRequiresPatchPermissions)}\n                        </Title>\n                        <EmptyStateBody>\n                            {intl.formatMessage(messages.statesMinimumPatchPermissionsRequired)}\n                        </EmptyStateBody>\n                    </EmptyState>\n                </Bullseye>\n            </Main>\n        </Page>\n    );\n};\n\nexport default withRouter(NoAccessPage);\n","import some from 'lodash/some';\nimport PropTypes from 'prop-types';\nimport React, { Fragment, lazy, Suspense, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { fetchSystems } from './Utilities/api';\nimport NoAccess from './PresentationalComponents/Snippets/NoAccess';\n\nconst Advisories = lazy(() =>\n    import(\n        /* webpackChunkName: \"Advisories\" */ './SmartComponents/Advisories/Advisories'\n    )\n);\n\nconst Systems = lazy(() =>\n    import(\n        /* webpackChunkName: \"Systems\" */ './SmartComponents/Systems/Systems'\n    )\n);\n\nconst InventoryPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"InventoryPage\" */ './SmartComponents/SystemDetail/InventoryPage'\n    )\n);\n\nconst AdvisoryPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"AdvisoryyPage\" */ './SmartComponents/AdvisoryDetail/AdvisoryDetail'\n    )\n);\n\nconst PackagsPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Packages\" */ './SmartComponents/Packages/Packages'\n    )\n);\n\nconst PackageDetail = lazy(() =>\n    import(\n        /* webpackChunkName: \"PackageDetail\" */ './SmartComponents/PackageDetail/PackageDetail'\n    )\n);\n\nconst RegisterPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Register\" */ './PresentationalComponents/RegisterPage/RegisterPage'\n    )\n);\nexport const paths = {\n    advisories: {\n        title: 'Applicable advisories',\n        to: '/advisories'\n    },\n    systems: {\n        title: 'Systems',\n        to: '/systems/'\n    },\n    inventoryDetail: {\n        title: 'Inventory detail',\n        to: '/systems/:inventoryId'\n    },\n    advisoryDetail: {\n        title: 'Advisory detail',\n        to: '/advisories/:advisoryId'\n    },\n    advisoryDetailSystem: {\n        title: '',\n        to: '/advisories/:advisoryId/:inventoryId'\n    },\n    register: {\n        title: '',\n        to: '/register'\n    },\n    packages: {\n        title: 'Packages',\n        to: '/packages'\n    },\n    packageDetail: {\n        title: 'Package detail',\n        to: '/packages/:packageName'\n    },\n    packageDetailSystem: {\n        title: '',\n        to: '/packages/:packageName/:inventoryId'\n    }\n};\n\nexport const Routes = (props) => {\n    const [hasPatchAccess, setPatchAccess] = useState(true);\n\n    React.useEffect(() => {\n        const systems = fetchSystems({ limit: 1 });\n        systems.then((res) => {\n            if (res.meta.total_items === 0) {\n                props.childProps.history.replace(paths.register.to);\n            }\n\n        }).catch(err => err.status === 401 && setPatchAccess(false));\n    }, []);\n\n    const path = props.childProps.location.pathname;\n\n    return hasPatchAccess && (\n        // I recommend discussing with UX some nice loading placeholder\n        <Suspense fallback={Fragment}>\n            <Switch>\n                <Redirect\n                    from={paths.advisoryDetailSystem.to}\n                    to={paths.inventoryDetail.to}\n                />\n                <Redirect\n                    from={paths.packageDetailSystem.to}\n                    to={paths.inventoryDetail.to}\n                />\n                <Route\n                    path={paths.inventoryDetail.to}\n                    component={InventoryPage}\n                />\n                <Route exact path={paths.systems.to} component={Systems} />\n                <Route\n                    exact\n                    path={paths.advisoryDetail.to}\n                    component={AdvisoryPage}\n                />\n                <Route\n                    exact\n                    path={paths.advisories.to}\n                    component={Advisories}\n                />\n                <Route\n                    exact\n                    path={paths.packages.to}\n                    component={PackagsPage}\n                />\n                <Route\n                    exact\n                    path={paths.register.to}\n                    component={RegisterPage}\n                />\n                <Route\n                    exact\n                    path={paths.packageDetail.to}\n                    component={PackageDetail}\n                />\n\n                <Route\n                    render={() =>\n                        some(paths, p => p.to === path) || (\n                            <Redirect to={paths.advisories.to} />\n                        )\n                    }\n                />\n            </Switch>\n        </Suspense>\n    ) || <NoAccess /> ;\n};\n\nRoutes.propTypes = {\n    childProps: PropTypes.shape({\n        location: PropTypes.shape({\n            pathname: PropTypes.string\n        }),\n        history: PropTypes.any\n    })\n};\n","import { Button, Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport { AnsibleTowerIcon } from '@patternfly/react-icons';\nimport globalPaletteWhite from '@patternfly/react-tokens/dist/js/global_palette_white';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { intl } from '../../Utilities/IntlProvider';\n\nconst PatchRemediationButton = ({ onClick, isDisabled, isLoading, ouia }) => {\n    return (\n        <Button\n            isDisabled={isDisabled}\n            className={'remediationButtonPatch'}\n            onClick={onClick}\n            ouiaId={ouia}\n        ><Flex flex={{ default: 'inlineFlex' }}\n                alignItems={{ default: 'alignItemsCenter' }}\n                justifyContent={{ default: 'justifyContentCenter' }}>\n                <FlexItem spacer={{ default: 'spacerXs' }} style={{ display: 'flex' }}>\n                    {isLoading &&\n                                                <Spinner isSVG size='md'/>\n                                     || <AnsibleTowerIcon color={globalPaletteWhite.value}/>}\n                </FlexItem>\n                <FlexItem spacer={{ default: 'spacerXs' }} style={{ display: 'flex' }}>\n                                     &nbsp;{intl.formatMessage(messages.labelsRemediate)}\n                </FlexItem>\n            </Flex>\n        </Button>\n    );\n};\n\nPatchRemediationButton.propTypes = {\n    onClick: propTypes.object,\n    isDisabled: propTypes.bool,\n    isLoading: propTypes.bool,\n    ouia: propTypes.string\n};\n\nexport default PatchRemediationButton;\n","import {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    cellWidth,\n    TableVariant,\n    sortable,\n    expandable,\n    SortByDirection\n} from '@patternfly/react-table';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\n\nfunction getLoader() {\n    return (\n        (insights.experimental && insights.experimental.loadRemediations) ||\n        insights.loadRemediations\n    );\n}\n\nconst RemediationModal = ({ data }) => {\n    const dispatch = useDispatch();\n    const [remediations, setRemediations] = React.useState(false);\n    React.useEffect(() => {\n        getLoader()({\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            }\n        }).then(remediations => setRemediations(remediations));\n        return () => setRemediations(false);\n    }, []);\n\n    const handleRemediationSuccess = res => {\n        dispatch(addNotification(res.getNotification()));\n    };\n\n    React.useEffect(() => {\n        remediations &&\n            remediations\n            .openWizard({ ...data, onRemediationCreated: handleRemediationSuccess });\n    }, [remediations]);\n\n    return (\n        <React.Fragment>\n            {remediations.RemediationWizard && (\n                <remediations.RemediationWizard />\n            )}\n        </React.Fragment>\n    );\n};\n\nRemediationModal.propTypes = {\n    data: propTypes.object\n};\n\nRemediationModal.defaultProps = {\n    onRemediationCreated: f => f\n};\n\nexport default RemediationModal;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { advisoryTypes } from '../../Utilities/constants';\nimport { Flex, FlexItem } from '@patternfly/react-core';\n\nconst AdvisoryType = ({ type }) => {\n    const advisoryType =\n        advisoryTypes.find(item => item.value === type) || advisoryTypes[2];\n    return (\n        <React.Fragment>\n            <Flex>\n                <FlexItem spacer={{ default: 'spacerSm' }}>{advisoryType.icon}</FlexItem>\n                <FlexItem spacer={{ default: 'spacerSm' }}>{advisoryType.label}</FlexItem>\n            </Flex>\n        </React.Fragment>\n    );\n};\n\nAdvisoryType.propTypes = {\n    type: PropTypes.number\n};\n\nexport default AdvisoryType;\n","import {\n    EmptyState,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport React from 'react';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nexport const EmptyAdvisoryList = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={SearchIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            {intl.formatMessage(messages.statesNoMatchingAdvisories)}\n        </Title>\n    </EmptyState>\n);\n\nexport const EmptyPackagesList = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={SearchIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            {intl.formatMessage(messages.statesNoMatchingPackages)}\n        </Title>\n    </EmptyState>\n);\n\nexport const EmptyCvesList = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={SearchIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            {intl.formatMessage(messages.statesNoMatchingCve)}\n        </Title>\n    </EmptyState>\n);\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport './Label.scss';\n\nconst Label = ({ children }) => {\n    return <span className={'patchman-label'}>{children}</span>;\n};\n\nLabel.propTypes = {\n    children: propTypes.any\n};\n\nexport default Label;\n","import React from 'react';\nimport { Text, TextContent, TextVariants, TextList,\n    TextListVariants, TextListItem, TextListItemVariants } from '@patternfly/react-core';\nimport Label from './Label';\nimport { handlePatchLink, truncate, getSeverityById } from '../../Utilities/Helpers';\nimport { entityTypes } from '../../Utilities/constants';\nimport ExternalLink from './ExternalLink';\nimport propTypes from 'prop-types';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\nimport { SecurityIcon } from '@patternfly/react-icons';\n\nexport const DescriptionWithLink = ({ row }) =>  {\n    const severityObject = getSeverityById(row.attributes.severity);\n    return (\n        <TextContent>\n            {\n                row.attributes.cve_count > 0 &&\n                (<TextList component={TextListVariants.dl} style ={{ '--pf-c-content--dl--RowGap': '0.5rem' }}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                        {intl.formatMessage(messages.labelsSeverity)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                        <SecurityIcon size=\"sm\" color = {severityObject.color}/>  {severityObject.label}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                        {intl.formatMessage(messages.labelsCves)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                        {row.attributes.cve_count}\n                    </TextListItem>\n                </TextList>)}\n            <Label>{intl.formatMessage(messages.labelsDescription)}</Label>\n            <Text component={TextVariants.p} style={{ whiteSpace: 'pre-line' }}>\n                {truncate(row.attributes.description.replace(\n                    new RegExp('\\\\n(?=[^\\\\n])', 'g'),\n                    ''\n                ), 570, handlePatchLink(entityTypes.advisories, row.id, intl.formatMessage(messages.linksReadMore)))}\n            </Text>\n            <ExternalLink link={`https://access.redhat.com/errata/${row.id}`}\n                text={intl.formatMessage(messages.linksViewPackagesAndErrata)} />\n        </TextContent>);\n};\n\nDescriptionWithLink.propTypes = {\n    row: propTypes.shape({\n        id: propTypes.string,\n        attributes: propTypes.object\n    })\n};\n","import { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { flatMap } from 'lodash';\nimport React from 'react';\nimport AdvisoryType from '../PresentationalComponents/AdvisoryType/AdvisoryType';\nimport { EmptyAdvisoryList, EmptyPackagesList, EmptyCvesList } from '../PresentationalComponents/Snippets/EmptyStates';\nimport { entityTypes, advisorySeverities } from './constants';\nimport { createUpgradableColumn, handlePatchLink } from './Helpers';\nimport { DescriptionWithLink } from '../PresentationalComponents/Snippets/DescriptionWithLink';\nimport { SystemUpToDate } from '../PresentationalComponents/Snippets/SystemUpToDate';\nimport { TextContent, TextListItem, TextListItemVariants } from '@patternfly/react-core';\nimport { SecurityIcon } from '@patternfly/react-icons';\n\nexport const createAdvisoriesRows = (rows, expandedRows, selectedRows) => {\n    if (rows.length !== 0) {\n        return flatMap(rows, (row, index) => {\n            return [\n                {\n                    id: row.id,\n                    isOpen: expandedRows[row.id] === true,\n                    selected: selectedRows[row.id] !== undefined,\n                    cells: [\n                        { title: handlePatchLink(entityTypes.advisories, row.id) },\n                        row.attributes.synopsis,\n                        {\n                            title: (\n                                <AdvisoryType\n                                    type={row.attributes.advisory_type}\n                                />\n                            )\n                        },\n                        {\n                            title: handlePatchLink(\n                                entityTypes.advisories,\n                                row.id,\n                                row.attributes.applicable_systems\n                            )\n                        },\n                        { title: processDate(row.attributes.public_date) }\n                    ]\n                },\n                {\n                    cells: [\n                        {\n                            title: <DescriptionWithLink row={row} />\n                        }\n                    ],\n                    parent: index * 2\n                }\n            ];\n        });\n    } else {\n        return [\n            {\n                heightAuto: true,\n                cells: [\n                    {\n                        props: { colSpan: 5 },\n                        title: <EmptyAdvisoryList />\n                    }\n                ]\n            }\n        ];\n    }\n};\n\nexport const createSystemAdvisoriesRows = (\n    rows,\n    expandedRows,\n    selectedRows,\n    metadata\n) => {\n    if (rows.length !== 0) {\n        return flatMap(rows, (row, index) => {\n            return [\n                {\n                    id: row.id,\n                    isOpen: expandedRows[row.id] === true,\n                    selected: selectedRows[row.id] !== undefined,\n                    cells: [\n                        { title: handlePatchLink(entityTypes.advisories, row.id) },\n                        row.attributes.synopsis,\n                        {\n                            title: (\n                                <AdvisoryType\n                                    type={row.attributes.advisory_type}\n                                />\n                            )\n                        },\n                        { title: processDate(row.attributes.public_date) }\n                    ]\n                },\n                {\n                    cells: [\n                        {\n                            title: <DescriptionWithLink row={row} />\n                        }\n                    ],\n                    parent: index * 2\n                }\n            ];\n        });\n    } else {\n        return [\n            {\n                heightAuto: true,\n                cells: [\n                    {\n                        props: { colSpan: 6 },\n                        title: !metadata.search && (metadata.filter && Object.keys(metadata.filter).length === 0)\n                            && <SystemUpToDate />\n                            || <EmptyAdvisoryList />\n                    }\n                ]\n            }\n        ];\n    }\n};\n\nexport const createSystemsRows = (rows, selectedRows = {}) => {\n    const data =\n        rows &&\n        rows.map(({ id, attributes }) => {\n            return {\n                id,\n                key: Math.random().toString() + id,\n                packages_installed: attributes.packages_installed,\n                applicable_advisories: [\n                    attributes.rhea_count || 0,\n                    attributes.rhba_count || 0,\n                    attributes.rhsa_count || 0\n                ],\n                operating_system: {\n                    osName: attributes.os_name && `${attributes.os_name} ${attributes.os_major}.${attributes.os_minor}`\n                        || 'No data',\n                    rhsm: attributes.rhsm\n                },\n                selected: selectedRows[id] !== undefined\n            };\n        });\n    return data || [];\n};\n\nexport const createPackageSystemsRows = (rows, selectedRows = {}) => {\n    const data =\n        rows &&\n        rows.map(row => {\n            return {\n                id: row.id,\n                key: Math.random().toString() + row.id,\n                installed_evra: row.installed_evra,\n                available_evra: row.updatable && row.available_evra || row.installed_evra,\n                upgradable: row.updatable,\n                selected: selectedRows[row.id] !== undefined\n            };\n        });\n    return data || [];\n};\n\nexport const createSystemPackagesRows = (rows, selectedRows = {}) => {\n    if (rows.length !== 0) {\n        return rows.map(pkg => {\n            const pkgNEVRA = `${pkg.name}-${pkg.evra}`;\n            const pkgUpdates = pkg.updates || [];\n            const latestUpdate = pkgUpdates[pkgUpdates.length - 1];\n\n            return {\n                id: pkgNEVRA,\n                key: pkgNEVRA,\n                selected: selectedRows[pkgNEVRA] !== undefined,\n                disableCheckbox: !latestUpdate,\n                cells: [\n                    { title: handlePatchLink(entityTypes.packages, pkg.name) },\n                    { title: pkg.evra },\n                    { title: (latestUpdate && latestUpdate.evra) || pkg.evra },\n                    { title: createUpgradableColumn(pkg.updatable) },\n                    { title: pkg.summary }\n                ]\n            };\n        });\n    } else {\n        return [\n            {\n                heightAuto: true,\n                cells: [\n                    {\n                        props: { colSpan: 7 },\n                        title: <EmptyPackagesList />\n                    }\n                ]\n            }\n        ];\n    }\n};\n\nexport const createPackagesRows = (rows) => {\n    if (rows.length !== 0) {\n        return rows.map(pkg => {\n            return {\n                id: pkg.name,\n                key: pkg.name,\n                cells: [\n                    { title: handlePatchLink(entityTypes.packages, pkg.name) },\n                    { title: pkg.systems_installed },\n                    { title: pkg.systems_updatable },\n                    { title: pkg.summary }\n                ]\n            };\n        });\n    } else {\n        return [\n            {\n                heightAuto: true,\n                cells: [\n                    {\n                        props: { colSpan: 7 },\n                        title: <EmptyPackagesList />\n                    }\n                ]\n            }\n        ];\n    }\n};\n\nexport const createCvesRows = (rows) => {\n    console.log(window.location);\n    if (rows.length !== 0) {\n        return rows.map(cve => {\n            const { attributes, id } = cve;\n            const severityObject = advisorySeverities.filter(severity => severity.label === attributes.impact)[0];\n\n            return {\n                id,\n                key: id,\n                cells: [\n                    { title: (\n                        <a href={`${window.location.origin}/insights/vulnerability/cves/${attributes.synopsis}`}>\n                            {attributes.synopsis}\n                        </a>) },\n                    {\n                        title: (<TextContent>\n                            <TextListItem component={TextListItemVariants.dd}>\n                                <SecurityIcon size=\"sm\" color={severityObject.color}/>  {severityObject.label}\n                            </TextListItem>\n                        </TextContent>),\n                        value: severityObject.label\n                    },\n                    { title: parseFloat(attributes.cvss_score).toFixed(1) }\n                ]\n            };\n        });\n    } else {\n        return [\n            {\n                heightAuto: true,\n                cells: [\n                    {\n                        props: { colSpan: 4 },\n                        title: <EmptyCvesList />\n                    }\n                ]\n            }\n        ];\n    }\n};\n","import React from 'react';\nimport { Flex, FlexItem, Tooltip } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst AdvisoriesIcon = ({ count, tooltipText, Icon }) =>(\n    <Tooltip content={tooltipText}>\n        <Flex flex={{ default: 'inlineFlex' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n                <Icon/>\n            </FlexItem>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n                {count.toString()}\n            </FlexItem>\n        </Flex>\n    </Tooltip>\n);\n\nAdvisoriesIcon.propTypes = {\n    Icon: propTypes.element,\n    count: propTypes.any,\n    tooltipText: propTypes.string\n};\n\nexport default AdvisoriesIcon;\n","import { CheckIcon, LongArrowAltUpIcon,\n    InfoCircleIcon, BugIcon, EnhancementIcon, SecurityIcon } from '@patternfly/react-icons';\nimport { SortByDirection } from '@patternfly/react-table/dist/js';\nimport findIndex from 'lodash/findIndex';\nimport qs from 'query-string';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AdvisoriesIcon from '../PresentationalComponents/Snippets/AdvisoriesIcon';\nimport {\n    advisorySeverities,\n    compoundSortValues,\n    filterCategories\n} from './constants';\nimport { Flex, FlexItem, Tooltip } from '@patternfly/react-core';\nimport messages from '../Messages';\nimport { intl } from './IntlProvider';\n\nexport const convertLimitOffset = (limit, offset) => {\n    return [offset / limit + 1, limit];\n};\n\n// eslint-disable-next-line no-unused-vars\nexport const transformPairs = (input) => {\n    return {\n        issues: Object.keys(input.data).map(advisory => {\n            return {\n                id: 'patch-advisory:' + advisory,\n                description: advisory,\n                systems: input.data[advisory]\n            };\n        }\n        )\n    };\n};\n\nexport const createSortBy = (header, values, offset) => {\n    if (values) {\n        let [column] = values;\n        let multiple = values.join();\n        let direction =\n            column[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n        Object.keys(compoundSortValues).forEach(col => {\n            Object.keys(compoundSortValues[col]).forEach(dir => {\n                if (compoundSortValues[col][dir] === multiple) {\n                    column = col;\n                    direction = dir;\n                }\n            });\n        });\n\n        column = column.replace(/^(-|\\+)/, '');\n        const index = findIndex(header, item => item.key === column);\n        let sort = {\n            index: index + offset,\n            direction\n        };\n        return sort;\n    }\n\n    return {};\n};\n\nexport const addOrRemoveItemFromSet = (targetObj, inputArr) => {\n    const inputObj = inputArr.reduce(\n        (obj, item) => ((obj[item.rowId] = item.value || undefined), obj),\n        {}\n    );\n    const result = { ...targetObj, ...inputObj };\n    return result;\n};\n\nexport const getNewSelectedItems = (selectedItems, currentItems) => {\n    let payload = [].concat(selectedItems).map(item=>({ rowId: item.id, value: item.selected }));\n    return addOrRemoveItemFromSet(\n        currentItems,\n        payload\n    );\n};\n\n// for expandable rows only\nexport const getRowIdByIndexExpandable = (arrayOfObjects, index) => {\n    return arrayOfObjects[index / 2].id;\n};\n\nexport const getOffsetFromPageLimit = (page, limit) => {\n    return page * limit - limit;\n};\n\nexport const getLimitFromPageSize = limit => {\n    return limit;\n};\n\nexport function truncate(str, max, end) {\n    return str.length > max ? (\n        <React.Fragment>\n            {str.substr(0, max - 1)}\n            ...&nbsp;{end}\n        </React.Fragment>\n    ) : str;\n}\n\nexport function createAdvisoriesIcons([rhea, rhba, rhsa]) {\n    return (\n        <div>\n            {[rhea, rhba, rhsa].every(item => item === 0) &&\n                'No applicable advisories'}\n            {rhsa !== 0 && (<AdvisoriesIcon tooltipText={'Security advisories'} count = { rhsa } Icon = { SecurityIcon} />)}\n            {rhba !== 0 && (<AdvisoriesIcon tooltipText={'Bug fixes'} count = { rhba } Icon = { BugIcon} />)}\n            {rhea !== 0 && (<AdvisoriesIcon tooltipText={'Enhancements'} count = { rhea } Icon = { EnhancementIcon} />)}\n        </div>\n    );\n}\n\nexport function createUpgradableColumn(value) {\n    return <div style={{\n        display: 'flex',\n        alignItems: 'center'\n    }}>\n        {\n            value && <LongArrowAltUpIcon style={{ color: 'var(--pf-global--palette--blue-400)' }} />\n                || <CheckIcon style={{ color: 'var(--pf-global--success-color--100)' }}/>\n        }\n        {<span style={{ marginLeft: 'var(--pf-global--spacer--sm)' }}>\n            {\n                value && 'Upgradable' || 'Up-to-date'\n            }\n        </span>}\n    </div>;\n}\n\nexport function getSeverityById(id) {\n    return (\n        advisorySeverities.find(item => item.value === id) ||\n        advisorySeverities[0]\n    );\n}\n\nexport function handlePatchLink(type, name, body) {\n    if (location.href.indexOf('inventory') === -1) {\n        return (\n            <Link to={`/${type}/${name}`}>\n                {body === undefined ? name : body}\n            </Link>\n        );\n    } else {\n        return (\n            <a href={`${document.baseURI}insights/patch/${type}/${name}`}>\n                {body || name}\n            </a>\n        );\n    }\n}\n\nexport const arrayFromObj = items =>\n    Object.values(items).filter(value => value);\n\nexport const remediationProvider = (issues, systems, remediationIdentifier) => {\n    issues = [].concat(issues);\n    systems = [].concat(systems);\n    return issues.length && systems.length\n        ? {\n            issues: issues.map(item => ({\n                id: `${remediationIdentifier}:${item}`,\n                description: item\n            })),\n            systems\n        }\n        : false;\n};\n\nexport async function remediationProviderWithPairs(issues, createPairs, transformFunc) {\n    if (issues) {\n        const pairsCreated = await createPairs(issues);\n        const res = transformFunc(pairsCreated);\n        return await res;\n    }\n    else {\n        return false;\n    }\n}\n\n;\n\nexport const getFilterValue = (category, key) => {\n    const filterCategory = filterCategories[category];\n    if (filterCategory) {\n        const filterOption = filterCategory.values.find(\n            item => item.value === key\n        );\n        return filterOption || { apiValue: key };\n    }\n};\n\nexport const encodeParams = (parameters, shouldTranslateKeys) => {\n    const flattenFilters = filter => {\n        let result = {};\n        filter &&\n            Object.entries(filter).forEach(item => {\n                let [key, value] = item;\n                value = shouldTranslateKeys && getFilterValue(key, value).apiValue || value;\n                const operator = [].concat(value).length > 1 ? 'in:' : '';\n                result = {\n                    ...result,\n                    [`filter[${key}]`]: `${operator}${value.toString()}`\n                };\n            });\n        return result;\n    };\n\n    let { filter, ...allParams } = parameters;\n    allParams = { ...allParams, ...flattenFilters(filter) };\n    let params = [];\n    Object.keys(allParams).forEach(key => {\n        const argKey = encodeURIComponent(key);\n        const argValue = encodeURIComponent(allParams[key]);\n\n        if (!['', undefined, null].some(value => [argValue, key].includes(value))) {\n            if (!['selectedTags', 'systemProfile'].includes(key)) {\n                params.push(argKey.concat('=').concat(argValue));\n            } else if (key === 'selectedTags') {\n                params.push.apply(params, allParams[key]);\n            } else {\n                params.push(allParams[key]);\n            }\n        }\n    });\n\n    return '?'.concat(params.join('&'));\n};\n\nexport const encodeApiParams = parameters => {\n    return encodeParams(parameters, true);\n};\n\nexport const encodeURLParams = parameters => {\n    delete parameters.id;\n    let urlParams = { ...parameters };\n    delete urlParams.systemProfile;\n    delete urlParams.selectedTags;\n    return encodeParams(urlParams, false);\n};\n\nexport const decomposeFilterValue = filterValue => {\n    if (filterValue.startsWith('in:')) {\n        const values = filterValue.slice(3);\n        return values.split(',');\n    }\n\n    return filterValue;\n};\n\nexport const decodeQueryparams = queryString => {\n    const parsed = qs.parse(queryString);\n    const res = {};\n    Object.keys(parsed).forEach(key => {\n        if (!key.startsWith('filter[system_profile]')) {\n            const value = parsed[key];\n            const bracketIndex = key.search(/\\[.*\\]/);\n            if (bracketIndex > 0) {\n                const objParent = key.slice(0, bracketIndex);\n                const objKey = key.slice(bracketIndex + 1, -1);\n                res[objParent] = {\n                    ...res[objParent],\n                    [objKey]: decomposeFilterValue(value)\n                };\n            } else {\n                res[key] = value;\n            }\n        }\n    });\n    return res;\n};\n\nexport const buildFilterChips = (filters, search) => {\n\n    let filterConfig = [];\n    const processFilters = () => {\n        let categories = Object.keys(filters).filter(\n            item =>\n                filters[item] !== '' && [].concat(filters[item]).length !== 0\n        );\n        filterConfig = filterConfig.concat(\n            categories.map(category => {\n                const { label, values } = filterCategories[category];\n                return {\n                    category: label,\n                    id: category,\n                    chips: [].concat(filters[category]).map(filterValue => {\n                        const match = values.find(\n                            item =>\n                                item.value.toString() === filterValue.toString()\n                        );\n                        return {\n                            name: match.label,\n                            value: filterValue,\n                            id: match.value\n                        };\n                    })\n                };\n            })\n        );\n    };\n\n    const processSearch = () => {\n        filterConfig = filterConfig.concat([\n            {\n                category: 'Search',\n                id: 'search',\n                chips: [\n                    {\n                        name: search,\n                        value: search\n                    }\n                ]\n            }\n        ]);\n    };\n\n    filters && processFilters();\n    search && processSearch();\n\n    return filterConfig;\n};\n\nexport const changeListParams = (oldParams, newParams) => {\n    const newState = { ...oldParams, ...newParams };\n    const offsetResetParams = ['filter', 'search', 'limit', 'selectedTags'];\n    if (offsetResetParams.some(item => newParams.hasOwnProperty(item))) {\n        newState.offset = 0;\n    }\n\n    if (newParams.hasOwnProperty('filter')) {\n        newState.filter = { ...oldParams.filter, ...newParams.filter };\n    }\n\n    if (newState.hasOwnProperty('tags')) {\n        newState && delete newState.tags;\n    }\n\n    return newState;\n};\n\nexport function subtractDate(days) {\n    const date = new Date();\n    date.setDate(date.getDate() - days);\n    return date.toISOString();\n}\n\nexport function preserveNewlines(input) {\n    return input && input.replace(\n        new RegExp('\\\\n(?=[^\\\\n])', 'g'),\n        ''\n    );\n}\n\nexport function sortCves(cves, index, direction) {\n\n    const sortedCves = cves.sort(\n        ({ cells: aCells }, { cells: bCells }) => {\n            const aCell = aCells[index].value || aCells[index].title;\n            const bCell = bCells[index].value || bCells[index].title;\n\n            const stringA = aCell.toString().toUpperCase();\n            const stringB = bCell.toString().toUpperCase();\n\n            return stringA.localeCompare(stringB);\n        }\n    );\n\n    return {\n        sortBy: { index, direction },\n        sortedCves: direction === SortByDirection.asc ? sortedCves : sortedCves.reverse()\n    };\n\n}\n\nexport const createOSColumn = ({ osName, rhsm }) => (rhsm === '' || rhsm ===  undefined) &&  osName || (\n    <Tooltip\n        content={\n            intl.formatMessage(messages.textLockVersionTooltip, { lockedVersion: rhsm })\n        }\n    >\n        <Flex flex={{ default: 'inlineFlex' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>{osName}</FlexItem>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n                <InfoCircleIcon size=\"sm\" color={'var(--pf-global--info-color--100)'} />\n            </FlexItem>\n        </Flex>\n    </Tooltip>\n);\n","import { SortByDirection } from '@patternfly/react-table/dist/js';\nimport isDeepEqualReact from 'fast-deep-equal/react';\nimport React from 'react';\nimport { compoundSortValues } from './constants';\nimport { convertLimitOffset, getLimitFromPageSize, getOffsetFromPageLimit } from './Helpers';\n\nexport const useSetPage = (limit, callback) => {\n    const onSetPage = React.useCallback((_, page) =>\n        callback({ offset: getOffsetFromPageLimit(page, limit) })\n    );\n    return onSetPage;\n};\n\nexport const useHandleRefresh = (metadata, callback) => {\n    const handleRefresh = React.useCallback(({ page, per_page: perPage }) => {\n        const offset = getOffsetFromPageLimit(page, perPage);\n        const limit = getLimitFromPageSize(perPage);\n        (metadata.offset !== offset || metadata.limit !== limit) &&\n            callback({\n                ...(metadata.offset !== offset && { offset }),\n                ...(metadata.limit !== limit && { limit })\n            });\n    });\n    return handleRefresh;\n};\n\nexport const usePagePerPage = (limit, offset) => {\n    const [page, perPage] = React.useMemo(\n        () => convertLimitOffset(limit, offset),\n        [limit, offset]\n    );\n    return [page, perPage];\n};\n\nexport const usePerPageSelect = callback => {\n    const onPerPageSelect = React.useCallback((_, perPage) =>\n        callback({ limit: getLimitFromPageSize(perPage), offset: 0 })\n    );\n    return onPerPageSelect;\n};\n\nexport const useSortColumn = (columns, callback, offset = 0) => {\n    const onSort = React.useCallback((_, index, direction) => {\n        let columnName = columns[index - offset].key;\n        const compoundKey = compoundSortValues[columnName];\n        if (compoundKey) {\n            columnName = compoundKey[direction];\n        }\n        else if (direction === SortByDirection.desc) {\n            columnName = '-' + columnName;\n        }\n\n        callback({ sort: columnName });\n    });\n    return onSort;\n};\n\nexport const useRemoveFilter = (filters, callback) => {\n    const removeFilter = React.useCallback((event, selected) => {\n        let newParams = { filter: {} };\n        selected.forEach(selectedItem => {\n            let { id: categoryId, chips } = selectedItem;\n            if (categoryId !== 'search') {\n                let activeFilter = filters[categoryId];\n                const toRemove = chips.map(item => item.id.toString());\n                if (Array.isArray(activeFilter)) {\n                    newParams.filter[categoryId] = activeFilter.filter(\n                        item => !toRemove.includes(item.toString())\n                    );\n                } else {\n                    newParams.filter[categoryId] = '';\n                }\n            } else {\n                newParams.search = '';\n            }\n        });\n        callback({ ...newParams });\n    });\n    return removeFilter;\n};\n\nexport const useOnSelect = (rawData, selectedRows, fetchAllData, selectRows,\n    constructFilename = undefined, transformKey = undefined) =>{\n    const constructKey = (row) => {\n        if (transformKey) {\n            return transformKey(row);\n        }\n        else {\n            return row.id || row.name;\n        }\n    };\n\n    const onSelect =  React.useCallback((event, selected, rowId) => {\n        const createSelectedRow = (rawData, toSelect = []) => {\n            rawData.forEach((row)=>{\n                toSelect.push(\n                    {\n                        id: constructKey(row),\n                        selected: constructFilename && constructFilename(row) || row.id\n                    }\n                );});\n\n            return toSelect;\n        };\n\n        switch (event) {\n            case 'none': {\n                const toSelect = [];\n                Object.keys(selectedRows).forEach(id=>{\n                    toSelect.push(\n                        {\n                            id,\n                            selected: false\n                        }\n                    );\n                });\n                selectRows(toSelect);\n                break;\n            }\n\n            case 'page': {\n                selectRows(createSelectedRow(rawData));\n                break;\n            }\n\n            case 'all': {\n                const fetchCallback = ({ data }) => {\n                    selectRows(createSelectedRow(data));\n                };\n\n                fetchAllData().then(fetchCallback);\n\n                break;\n            }\n\n            default: {\n                selectRows([{\n                    id: constructKey(rawData[rowId]),\n                    selected: selected && (constructFilename && constructFilename(rawData[rowId]) || true)\n                }]);\n            }\n\n        }}\n    );\n\n    return onSelect;\n};\n\nexport const setPageTitle = (title) => {\n    React.useEffect(() => {\n        if (title) {\n            document.title = `${title} - Patch | Red Hat Insights`;\n        }\n    }, [title]);\n};\n\nexport const useDeepCompareEffect = (effect, deps) => {\n    const ref = React.useRef(undefined);\n\n    if (!ref.current || !isDeepEqualReact(deps, ref.current)) {\n        ref.current = deps;\n    }\n\n    React.useEffect(effect, ref.current);\n};\n","import { createIntl, createIntlCache } from 'react-intl';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\n\nexport const intl = createIntl({\n    // eslint-disable-next-line no-console\n    onError: console.log,\n    locale\n}, cache);\n\nexport const intlSettings = { locale };\n","import {\n    authInterceptor,\n    responseDataInterceptor\n} from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport axios from 'axios';\nimport { ReadOnlyNotification } from './constants';\n\nconst axiosInstance = axios.create();\n\nexport async function  accessCheckInterceptor (config)  {\n\n    const userPermissions = await insights.chrome.getUserPermissions();\n    const inventoryPermissionList = ['inventory:*:*', 'inventory:*:read', 'inventory:hosts:read'];\n\n    const hasInventoryAccess = userPermissions.some((access) => inventoryPermissionList.includes(access?.permission));\n\n    if (!hasInventoryAccess) {\n        throw new axios.Cancel('Operation canceled. User does not have access to Inventory');\n    }\n\n    return config;\n}\n\nexport function errorInterceptor(err) {\n\n    if (!axios.isCancel(err)) {\n\n        const { response, isAxiosError } = { ...err };\n\n        if (response && isAxiosError) {\n            const { status, statusText, data } = response;\n\n            if (!status) {\n                throw err;\n            } else {\n                const genericError = {\n                    title:\n                            'There was an error getting data'\n                };\n\n                const result = { ...genericError, detail: data.error || statusText, status };\n\n                throw result;\n            }\n        }\n\n        throw err;\n    }\n}\n\nexport function readOnlyInterceptor(error) {\n    if (error.response && error.response.status === 503) {\n        const data = ReadOnlyNotification;\n        throw data;\n    }\n\n    throw error;\n}\n\naxiosInstance.interceptors.request.use(accessCheckInterceptor);\naxiosInstance.interceptors.request.use(authInterceptor);\naxiosInstance.interceptors.response.use(responseDataInterceptor);\naxiosInstance.interceptors.response.use(null, readOnlyInterceptor);\naxiosInstance.interceptors.response.use(null, errorInterceptor);\n\nexport default axiosInstance;\n","import { encodeApiParams } from './Helpers';\nimport axios from './axiosInterceptors';\n\nexport function createApiCall(\n    endpoint,\n    method,\n    parameters = undefined,\n    data = undefined\n) {\n    if (parameters && method === 'get') {\n        endpoint = endpoint.concat(encodeApiParams(parameters));\n    }\n\n    let result = window.insights.chrome.auth\n    .getUser()\n    .then(() =>\n        axios({\n            method,\n            url: '/api/patch/v1' + endpoint,\n            withCredentials: true,\n            data\n        })\n    );\n\n    return result;\n}\n\nexport const fetchApplicableAdvisoriesApi = params => {\n    return createApiCall('/advisories', 'get', params);\n};\n\nexport const fetchApplicableSystemAdvisoriesApi = params => {\n    let { id, ...allParams } = params;\n    return createApiCall(`/systems/${id}/advisories`, 'get', allParams);\n};\n\nexport const fetchSystems = params => {\n    return createApiCall('/systems', 'get', params);\n};\n\nexport const fetchSystemDetails = id => {\n    return createApiCall(`/systems/${id}`, 'get');\n};\n\nexport const fetchAdvisoryDetailsApi = params => {\n    return createApiCall(`/advisories/${params.advisoryName}`, 'get');\n};\n\nexport const fetchPackageDetailsApi = params => {\n    return createApiCall(`/packages/${params.packageName}`, 'get');\n};\n\nexport const fetchApplicablePackagesApi = params => {\n    let { id, ...allParams } = params;\n    return createApiCall(`/systems/${id}/packages`, 'get', allParams);\n};\n\nexport const fetchAdvisorySystems = params => {\n    const { id, ...args } = params;\n    return createApiCall(`/advisories/${id}/systems`, 'get', args);\n};\n\nexport const fetchPackageSystems = params => {\n    const { id, ...args } = params;\n    return createApiCall(`/packages/${id}/systems`, 'get', args);\n};\n\nexport const fetchPackagesList = params => {\n    return createApiCall('/packages', 'get', params);\n};\n\nexport const fetchCvesInfo = async ({ cveIds }) => {\n\n    const result = await fetch(`/api/vulnerability/v1/vulnerabilities/cves?limit=${cveIds && cveIds.length}`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ cve_list: cveIds })\n    }).then(res => res.json()).then(data => data);\n\n    return result;\n};\n\nexport const fetchViewAdvisoriesSystems = async (input) => {\n    const result = await fetch(`/api/patch/v1/views/advisories/systems`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(input)\n    }).then(res => res.json()).then(data => data);\n\n    return result;\n};\n\nexport const exportAdvisoriesCSV = params => {\n    let endpoint = '/export/advisories';\n    endpoint = endpoint.concat(encodeApiParams(params));\n    return fetch('/api/patch/v1' + endpoint, {\n        method: 'get',\n        credentials: 'include',\n        headers: new Headers({ accept: 'text/csv' })\n    }).then(res => res.text());\n};\n\nexport const exportAdvisoriesJSON = params => {\n    let endpoint = '/export/advisories';\n    endpoint = endpoint.concat(encodeApiParams(params));\n    return fetch('/api/patch/v1' + endpoint, {\n        method: 'get',\n        credentials: 'include',\n        headers: new Headers({ accept: 'application/json' })\n    }).then(res => res.json());\n};\n\nexport const exportSystemsCSV = params => {\n    let endpoint = '/export/systems';\n    endpoint = endpoint.concat(encodeApiParams(params));\n    return fetch('/api/patch/v1' + endpoint, {\n        method: 'get',\n        credentials: 'include',\n        headers: new Headers({ accept: 'text/csv' })\n    }).then(res => res.text());\n};\n\nexport const exportSystemsJSON = params => {\n    let endpoint = '/export/systems';\n    endpoint = endpoint.concat(encodeApiParams(params));\n    return fetch('/api/patch/v1' + endpoint, {\n        method: 'get',\n        credentials: 'include',\n        headers: new Headers({ accept: 'application/json' })\n    }).then(res => res.json());\n};\n\nexport const exportPackagesCSV = params => {\n    let endpoint = '/export/packages';\n    endpoint = endpoint.concat(encodeApiParams(params));\n    return fetch('/api/patch/v1' + endpoint, {\n        method: 'get',\n        credentials: 'include',\n        headers: new Headers({ accept: 'text/csv' })\n    }).then(res => res.text());\n};\n\nexport const exportPackagesJSON = params => {\n    let endpoint = '/export/packages';\n    endpoint = endpoint.concat(encodeApiParams(params));\n    return fetch('/api/patch/v1' + endpoint, {\n        method: 'get',\n        credentials: 'include',\n        headers: new Headers({ accept: 'application/json' })\n    }).then(res => res.json());\n};\n","import BugIcon from '@patternfly/react-icons/dist/js/icons/bug-icon';\nimport EnhancementIcon from '@patternfly/react-icons/dist/js/icons/enhancement-icon';\nimport SecurityIcon from '@patternfly/react-icons/dist/js/icons/security-icon';\nimport React from 'react';\nimport { subtractDate } from './Helpers';\n\nexport const STATUS_REJECTED = 'rejected';\nexport const STATUS_LOADING = 'loading';\nexport const STATUS_RESOLVED = 'resolved';\n\nexport const compoundSortValues = {\n    operating_system: {\n        asc: 'os_name,os_major,os_minor',\n        desc: '-os_name,-os_major,-os_minor'\n    },\n    applicable_advisories: {\n        asc: 'rhsa_count,rhba_count,rhea_count',\n        desc: '-rhsa_count,-rhba_count,-rhea_count'\n    }\n};\n\n// messy check because of frontend-components tests\nexport const ENABLE_PACKAGES = window?.insights?.chrome?.isBeta && insights?.chrome?.isBeta();\nexport const storeListDefaults = {\n    rows: [],\n    metadata: {\n        limit: 25,\n        offset: 0,\n        total_items: 0\n    },\n    expandedRows: {},\n    selectedRows: {},\n    queryParams: {},\n    error: {}\n};\n\nexport const publicDateOptions = [\n    { apiValue: '', label: 'All', value: 'all' },\n    {\n        apiValue: `gt:${subtractDate(7)}`,\n        label: 'Last 7 days',\n        value: 'last7'\n    },\n    {\n        apiValue: `gt:${subtractDate(30)}`,\n        label: 'Last 30 days',\n        value: 'last30'\n    },\n    {\n        apiValue: `gt:${subtractDate(90)}`,\n        label: 'Last 90 days',\n        value: 'last90'\n    },\n    {\n        apiValue: `gt:${subtractDate(365)}`,\n        label: 'Last year',\n        value: 'lastYear'\n    },\n    {\n        apiValue: `lt:${subtractDate(365)}`,\n        label: 'More than 1 year ago',\n        value: 'moreThanYear'\n    }\n];\n\nexport const advisorySeverities = [\n    {\n        value: 0,\n        label: 'N/A',\n        color: 'var(--pf-global--Color--200)'\n    },\n    {\n        value: 1,\n        label: 'Low',\n        color: 'var(--pf-global--Color--200)',\n        text:\n            'This rating is given to all other issues that have a security impact. These are the types of vulnerabilities' +\n            ' that are believed to require unlikely circumstances to be able to be exploited, or where a successful exploit' +\n            ' would give minimal consequences.'\n    },\n    {\n        value: 2,\n        label: 'Moderate',\n        color: 'var(--pf-global--warning-color--100)',\n        text:\n            'This rating is given to flaws that may be more difficult to exploit but could still lead to some' +\n            ' compromise of the confidentiality, integrity, or availability of resources, under certain circumstances.' +\n            ' These are the types of vulnerabilities that could have had a Critical impact or Important impact' +\n            ' but are less easily exploited based on a technical evaluation of the flaw, or affect unlikely' +\n            ' configurations.'\n    },\n    {\n        value: 3,\n        label: 'Important',\n        color: '#ec7a08',\n        text:\n            'This rating is given to flaws that can easily compromise the confidentiality, integrity, or availability' +\n            ' of resources. These are the types of vulnerabilities that allow local users to gain privileges, allow' +\n            ' unauthenticated remote users to view resources that should otherwise be protected by authentication,' +\n            ' allow authenticated remote users to execute arbitrary code, or allow remote users to cause a denial' +\n            ' of service.'\n    },\n    {\n        value: 4,\n        label: 'Critical',\n        color: 'var(--pf-global--danger-color--100)',\n        text:\n            'This rating is given to flaws that could be easily exploited by a remote unauthenticated attacker' +\n            ' and lead to system compromise (arbitrary code execution) without requiring user interaction.' +\n            ' These are the types of vulnerabilities that can be exploited by worms. Flaws that require an authenticated' +\n            ' remote user, a local user, or an unlikely configuration are not classed as Critical impact.'\n    }\n];\n\nexport const advisoryTypes = [\n    {\n        value: 3,\n        label: 'Security',\n        icon: <SecurityIcon />\n    },\n    {\n        value: 2,\n        label: 'Bugfix',\n        icon: <BugIcon />\n    },\n    {\n        value: 1,\n        label: 'Enhancement',\n        icon: <EnhancementIcon />\n    }\n];\n\nexport const updatableTypes = [\n    {\n        value: '',\n        label: 'All'\n    },\n    {\n        value: true,\n        label: 'Upgradable'\n    }\n];\n\nexport const packagesListUpdatableTypes = [\n    {\n        value: '',\n        label: 'All'\n    },\n    {\n        value: 'gt:0',\n        label: 'Upgradable'\n    }\n];\n\nexport const filterCategories = {\n    advisory_type: {\n        label: 'Advisory type',\n        values: advisoryTypes\n    },\n    public_date: {\n        label: 'Public date',\n        values: publicDateOptions\n    },\n    updatable: {\n        label: 'Status',\n        values: updatableTypes\n    },\n    systems_updatable: {\n        label: 'Status',\n        values: packagesListUpdatableTypes\n    }\n};\n\nexport const entityTypes = {\n    advisories: 'advisories',\n    packages: 'packages'\n};\n\nexport const ReadOnlyNotification = {\n    title: 'title',\n    detail: 'message'\n};\n\nexport const remediationIdentifiers = {\n    package: 'patch-package',\n    advisory: 'patch-advisory'\n};\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1] || ''}`;\n}\n\nexport default getBaseName;\n","export const FETCH_APPLICABLE_ADVISORIES = 'FETCH_APPLICABLE_ADVISORIES';\nexport const EXPAND_ADVISORY_ROW = 'EXPAND_ADVISORY_ROW';\nexport const SELECT_ADVISORY_ROW = 'SELECT_ADVISORY_ROW';\nexport const CHANGE_ADVISORY_LIST_PARAMS = 'CHANGE_ADVISORY_LIST_PARAMS';\nexport const FETCH_SYSTEMS = 'FETCH_SYSTEMS';\nexport const CHANGE_SYSTEMS_LIST_PARAMS = 'CHANGE_SYSTEMS_LIST_PARAMS';\nexport const CHANGE_SYSTEM_ADVISORY_LIST_PARAMS =\n    'CHANGE_SYSTEM_SYSTEMS_LIST_PARAMS';\nexport const EXPAND_SYSTEM_ADVISORY_ROW = 'EXPAND_SYSTEM_ADVISORY_ROW';\nexport const FETCH_APPLICABLE_SYSTEM_ADVISORIES =\n    'FETCH_APPLICABLE_SYSTEM_ADVISORIES';\nexport const SELECT_SYSTEM_ADVISORY_ROW = 'SELECT_SYSTEM_ADVISORY_ROW';\nexport const CLEAR_SYSTEM_ADVISORIES = 'CLEAR_SYSTEM_ADVISORIES';\nexport const FETCH_ADVISORY_DETAILS = 'FETCH_ADVISORY_DETAILS';\nexport const FETCH_AFFECTED_SYSTEMS = 'FETCH_AFFECTED_SYSTEMS';\nexport const CHANGE_AFFECTED_SYSTEMS_PARAMS = 'CHANGE_AFFECTED_SYSTEMS_PARAMS';\nexport const CLEAR_AFFECTED_SYSTEMS = 'CLEAR_AFFECTED_SYSTEMS';\nexport const CLEAR_ADVISORY_DETAILS = 'CLEAR_ADVISORY_DETAILS';\nexport const CHANGE_SYSTEM_PACKAGES_LIST_PARAMS =\n    'CHANGE_SYSTEM_PACKAGES_LIST_PARAMS';\nexport const FETCH_APPLICABLE_SYSTEM_PACKAGES =\n    'FETCH_APPLICABLE_SYSTEM_PACKAGES';\nexport const SELECT_SYSTEM_PACKAGES_ROW = 'SELECT_SYSTEM_PACKAGES_ROW';\nexport const CLEAR_SYSTEM_PACKAGES = 'CLEAR_SYSTEM_PACKAGES';\nexport const TRIGGER_GLOBAL_FILTER = 'TRIGGER_GLOBAL_FILTER';\nexport const FETCH_PACKAGES_LIST = 'FETCH_PACKAGES_LIST';\nexport const FETCH_PACKAGE_DETAILS = 'FETCH_PACKAGE_DETAILS';\nexport const CLEAR_PACKAGE_DETAILS = 'CLEAR_PACKAGE_DETAILS';\nexport const CHANGE_PACKAGES_LIST_PARAMS = 'CHANGE_PACKAGES_LIST_PARAMS';\nexport const FETCH_PACKAGE_SYSTEMS = 'FETCH_PACKAGE_SYSTEMS';\nexport const CLEAR_PACKAGE_SYSTEMS = 'CLEAR_PACKAGE_SYSTEMS';\nexport const CHANGE_PACKAGE_SYSTEMS_PARAMS = 'CHANGE_PACKAGE_SYSTEMS_PARAMS';\nexport const FETCH_CVES_INFO = 'FETCH_CVES_INFO';\nexport const CHANGE_CVES_STORE_PARAMS = 'CHANGE_CVES_STORE_PARAMS';\nexport const FETCH_SYSTEM_DETAIL = 'FETCH_SYSTEM_DETAIL';\n","import { fetchAdvisoryDetailsApi, fetchAdvisorySystems, fetchApplicableAdvisoriesApi,\n    fetchApplicablePackagesApi, fetchApplicableSystemAdvisoriesApi, fetchPackageDetailsApi,\n    fetchPackagesList, fetchPackageSystems, fetchSystems, fetchCvesInfo, fetchSystemDetails } from '../../Utilities/api';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const fetchApplicableAdvisories = params => ({\n    type: ActionTypes.FETCH_APPLICABLE_ADVISORIES,\n    payload: new Promise(resolve => {\n        resolve(fetchApplicableAdvisoriesApi(params));\n    }).then(result => result)\n});\n\nexport const fetchApplicableSystemAdvisories = params => ({\n    type: ActionTypes.FETCH_APPLICABLE_SYSTEM_ADVISORIES,\n    payload: new Promise(resolve => {\n        resolve(fetchApplicableSystemAdvisoriesApi(params));\n    }).then(result => result),\n    meta: {\n        noError: true // Handle errors manually!\n    }\n});\n\nexport const fetchAvisoryDetails = params => ({\n    type: ActionTypes.FETCH_ADVISORY_DETAILS,\n    payload: new Promise(resolve => {\n        resolve(fetchAdvisoryDetailsApi(params));\n    }).then(result => result)\n});\n\nexport const fetchPackageDetails = params => ({\n    type: ActionTypes.FETCH_PACKAGE_DETAILS,\n    payload: new Promise(resolve => {\n        resolve(fetchPackageDetailsApi(params));\n    }).then(result => result)\n});\n\nexport const fetchSystemsAction = params => ({\n    type: ActionTypes.FETCH_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(fetchSystems(params));\n    }).then(result => result)\n});\n\nexport const changeAdvisoryListParams = params => ({\n    type: ActionTypes.CHANGE_ADVISORY_LIST_PARAMS,\n    payload: params\n});\n\nexport const changeSystemAdvisoryListParams = params => ({\n    type: ActionTypes.CHANGE_SYSTEM_ADVISORY_LIST_PARAMS,\n    payload: params\n});\n\nexport const changeSystemsListParams = params => ({\n    type: ActionTypes.CHANGE_SYSTEMS_LIST_PARAMS,\n    payload: params\n});\n\nexport const changeAdvisorySystemsParams = params => ({\n    type: ActionTypes.CHANGE_AFFECTED_SYSTEMS_PARAMS,\n    payload: params\n});\n\nexport const expandAdvisoryRow = rowState => ({\n    type: ActionTypes.EXPAND_ADVISORY_ROW,\n    payload: rowState\n});\n\nexport const expandSystemAdvisoryRow = rowState => ({\n    type: ActionTypes.EXPAND_SYSTEM_ADVISORY_ROW,\n    payload: rowState\n});\n\nexport const selectAdvisoryRow = rowState => ({\n    type: ActionTypes.SELECT_ADVISORY_ROW,\n    payload: rowState\n});\n\nexport const selectSystemAdvisoryRow = rowState => ({\n    type: ActionTypes.SELECT_SYSTEM_ADVISORY_ROW,\n    payload: rowState\n});\n\nexport const clearSystemAdvisoriesStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEM_ADVISORIES,\n    payload: []\n});\n\nexport const clearSystemPackagesStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEM_PACKAGES,\n    payload: []\n});\n\nexport const clearAdvisorySystemsStore = () => ({\n    type: ActionTypes.CLEAR_AFFECTED_SYSTEMS,\n    payload: []\n});\n\nexport const clearAdvisoryDetailStore = () => ({\n    type: ActionTypes.CLEAR_ADVISORY_DETAILS,\n    payload: []\n});\n\nexport const clearPackageDetailStore = () => ({\n    type: ActionTypes.CLEAR_ADVISORY_DETAILS,\n    payload: []\n});\n\nexport const fetchAdvisorySystemsAction = params => ({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(fetchAdvisorySystems(params));\n    }).then(result => result)\n});\n\nexport const fetchPackageSystemsAction = params => ({\n    type: ActionTypes.FETCH_PACKAGE_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(fetchPackageSystems(params));\n    }).then(result => result)\n});\n\nexport const clearPackageSystemsStore = () => ({\n    type: ActionTypes.CLEAR_PACKAGE_SYSTEMS,\n    payload: []\n});\n\nexport const fetchApplicableSystemPackages = params => ({\n    type: ActionTypes.FETCH_APPLICABLE_SYSTEM_PACKAGES,\n    payload: new Promise(resolve => {\n        resolve(fetchApplicablePackagesApi(params));\n    }).then(result => result)\n});\n\nexport const selectSystemPackagesRow = rowState => ({\n    type: ActionTypes.SELECT_SYSTEM_PACKAGES_ROW,\n    payload: rowState\n});\n\nexport const changeSystemPackagesParams = params => ({\n    type: ActionTypes.CHANGE_SYSTEM_PACKAGES_LIST_PARAMS,\n    payload: params\n});\n\nexport const globalFilter = params => ({\n    type: ActionTypes.TRIGGER_GLOBAL_FILTER,\n    payload: params\n});\n\nexport const fetchPackagesAction = params => ({\n    type: ActionTypes.FETCH_PACKAGES_LIST,\n    payload: new Promise(resolve => {\n        resolve(fetchPackagesList(params));\n    }).then(result => result)\n});\n\nexport const changePackagesListParams = params => ({\n    type: ActionTypes.CHANGE_PACKAGES_LIST_PARAMS,\n    payload: params\n});\n\nexport const changePackageSystemsParams = params => ({\n    type: ActionTypes.CHANGE_PACKAGE_SYSTEMS_PARAMS,\n    payload: params\n});\n\nexport const fetchCves = (params) => ({\n    type: ActionTypes.FETCH_CVES_INFO,\n    payload: new Promise(resolve => {\n        resolve(fetchCvesInfo(params));\n    }).then(result => result)\n});\n\nexport const changeCvesListParams = params => ({\n    type: ActionTypes.CHANGE_CVES_STORE_PARAMS,\n    payload: params\n});\n\nexport const fetchSystemDetailsAction = params => ({\n    type: ActionTypes.FETCH_SYSTEM_DETAIL,\n    payload: new Promise(resolve => {\n        resolve(fetchSystemDetails(params));\n    }).then(result => result)\n});\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport publishDateFilter from '../../PresentationalComponents/Filters/PublishDateFilter';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport typeFilter from '../../PresentationalComponents/Filters/TypeFilter';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport TableView from '../../PresentationalComponents/TableView/TableView';\nimport { systemAdvisoriesColumns } from '../../PresentationalComponents/TableView/TableViewAssets';\nimport { changeSystemAdvisoryListParams, clearSystemAdvisoriesStore, expandSystemAdvisoryRow,\n    fetchApplicableSystemAdvisories, selectSystemAdvisoryRow } from '../../store/Actions/Actions';\nimport { fetchApplicableSystemAdvisoriesApi } from '../../Utilities/api';\nimport { STATUS_REJECTED, remediationIdentifiers } from '../../Utilities/constants';\nimport { createSystemAdvisoriesRows } from '../../Utilities/DataMappers';\nimport { arrayFromObj, createSortBy, decodeQueryparams, encodeURLParams,\n    getRowIdByIndexExpandable, remediationProvider } from '../../Utilities/Helpers';\nimport { usePerPageSelect, useSetPage, useSortColumn, useOnSelect } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst SystemAdvisories = ({ history, handleNoSystemData }) => {\n    const dispatch = useDispatch();\n    const [firstMount, setFirstMount] = React.useState(true);\n    const advisories = useSelector(\n        ({ SystemAdvisoryListStore }) => SystemAdvisoryListStore.rows\n    );\n\n    const entity = useSelector(({ entityDetails }) => entityDetails.entity);\n\n    const expandedRows = useSelector(\n        ({ SystemAdvisoryListStore }) => SystemAdvisoryListStore.expandedRows\n    );\n    const queryParams = useSelector(\n        ({ SystemAdvisoryListStore }) => SystemAdvisoryListStore.queryParams\n    );\n    const selectedRows = useSelector(\n        ({ SystemAdvisoryListStore }) => SystemAdvisoryListStore.selectedRows\n    );\n    const metadata = useSelector(\n        ({ SystemAdvisoryListStore }) => SystemAdvisoryListStore.metadata\n    );\n    const status = useSelector(\n        ({ SystemAdvisoryListStore }) => SystemAdvisoryListStore.status\n    );\n    const error = useSelector(\n        ({ SystemAdvisoryListStore }) => SystemAdvisoryListStore.error\n    );\n    const rows = React.useMemo(\n        () =>\n            createSystemAdvisoriesRows(advisories, expandedRows, selectedRows, metadata),\n        [advisories, expandedRows, selectedRows]\n    );\n\n    React.useEffect(() => {\n        return () => dispatch(clearSystemAdvisoriesStore());\n    }, []);\n\n    React.useEffect(() => {\n        if (firstMount) {\n            apply(decodeQueryparams(history.location.search));\n            setFirstMount(false);\n        } else {\n            history.push(encodeURLParams(queryParams));\n            dispatch(\n                fetchApplicableSystemAdvisories({ id: entity.id, ...queryParams })\n            );\n        }\n    }, [queryParams]);\n\n    const onCollapse = React.useCallback((_, rowId, value) =>\n        dispatch(\n            expandSystemAdvisoryRow({\n                rowId: getRowIdByIndexExpandable(advisories, rowId),\n                value\n            })\n        )\n    );\n\n    const selectRows = (toSelect) => {\n        dispatch(\n            selectSystemAdvisoryRow(toSelect)\n        );\n    };\n\n    const fetchAllData = () =>\n        fetchApplicableSystemAdvisoriesApi({ id: entity.id, ...queryParams, limit: -1 });\n\n    const onSelect = useOnSelect(rows, selectedRows, fetchAllData, selectRows, (advisory) => advisory.id);\n\n    const onSort = useSortColumn(systemAdvisoriesColumns, apply, 2);\n    const sortBy = React.useMemo(\n        () => createSortBy(systemAdvisoriesColumns, metadata.sort, 2),\n        [metadata.sort]\n    );\n    const onSetPage = useSetPage(metadata.limit, apply);\n    const onPerPageSelect = usePerPageSelect(apply);\n\n    function apply(params) {\n        dispatch(changeSystemAdvisoryListParams({ id: entity.id, ...params }));\n    }\n\n    const errorState = error.status === 404 ? handleNoSystemData() : <Unavailable/>;\n\n    if (status === STATUS_REJECTED && error.status !== 404) {\n        dispatch(addNotification({\n            variant: 'danger',\n            title: error.title,\n            description: error.detail\n        }));}\n\n    return (\n        <React.Fragment>\n            <TableView\n                columns={systemAdvisoriesColumns}\n                compact\n                onCollapse={onCollapse}\n                onSelect={(advisories.length && onSelect) || undefined}\n                onSetPage={onSetPage}\n                onPerPageSelect={onPerPageSelect}\n                onSort={onSort}\n                sortBy={sortBy}\n                remediationProvider={() =>\n                    remediationProvider(\n                        arrayFromObj(selectedRows),\n                        entity.id,\n                        remediationIdentifiers.advisory\n                    )\n                }\n                selectedRows={selectedRows}\n                systemId={entity.id}\n                apply={apply}\n                store={{ rows, metadata, status, queryParams }}\n                remediationButtonOUIA={'toolbar-remediation-button'}\n                tableOUIA={'system-advisories-table'}\n                paginationOUIA={'system-advisories-pagination'}\n                filterConfig={{\n                    items: [\n                        searchFilter(apply, queryParams.search,\n                            intl.formatMessage(messages.labelsFiltersSearchAdvisoriesTitle),\n                            intl.formatMessage(messages.labelsFiltersSearchAdvisoriesPlaceholder)\n                        ),\n                        typeFilter(apply, queryParams.filter),\n                        publishDateFilter(apply, queryParams.filter)\n                    ]\n                }}\n                errorState={errorState}\n            />\n        </React.Fragment>\n    );\n};\n\nSystemAdvisories.propTypes = {\n    history: propTypes.object,\n    handleNoSystemData: propTypes.func\n};\nexport default withRouter(SystemAdvisories);\n","import { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport messages from '../../Messages';\nimport searchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/StatusFilter';\nimport { SystemUpToDate } from '../../PresentationalComponents/Snippets/SystemUpToDate';\nimport TableView from '../../PresentationalComponents/TableView/TableView';\nimport { systemPackagesColumns } from '../../PresentationalComponents/TableView/TableViewAssets';\nimport {\n    changeSystemPackagesParams, clearSystemPackagesStore,\n    fetchApplicableSystemPackages, selectSystemPackagesRow\n} from '../../store/Actions/Actions';\nimport { fetchApplicablePackagesApi } from '../../Utilities/api';\nimport { STATUS_REJECTED, STATUS_RESOLVED, remediationIdentifiers } from '../../Utilities/constants';\nimport { createSystemPackagesRows } from '../../Utilities/DataMappers';\nimport { arrayFromObj, createSortBy, remediationProvider } from '../../Utilities/Helpers';\nimport { useOnSelect, usePerPageSelect, useSetPage, useSortColumn } from '../../Utilities/Hooks';\nimport { intl } from '../../Utilities/IntlProvider';\n\nconst SystemPackages = ({ handleNoSystemData }) => {\n    const dispatch = useDispatch();\n    const entity = useSelector(({ entityDetails }) => entityDetails.entity);\n    const packages = useSelector(\n        ({ SystemPackageListStore }) => SystemPackageListStore.rows\n    );\n    const queryParams = useSelector(\n        ({ SystemPackageListStore }) => SystemPackageListStore.queryParams\n    );\n    const selectedRows = useSelector(\n        ({ SystemPackageListStore }) => SystemPackageListStore.selectedRows\n    );\n    const metadata = useSelector(\n        ({ SystemPackageListStore }) => SystemPackageListStore.metadata\n    );\n    const status = useSelector(\n        ({ SystemPackageListStore }) => SystemPackageListStore.status\n    );\n    const error = useSelector(\n        ({ SystemPackageListStore }) => SystemPackageListStore.error\n    );\n    const rows = React.useMemo(\n        () =>\n            createSystemPackagesRows(packages, selectedRows),\n        [packages,  selectedRows]\n    );\n\n    React.useEffect(() => {\n        return () => dispatch(clearSystemPackagesStore());\n    }, []);\n\n    React.useEffect(()=> {\n        dispatch(fetchApplicableSystemPackages({ id: entity.id, ...queryParams }));\n    }, [queryParams]);\n\n    const constructFilename = (pkg) => {\n        const pkgUpdates = pkg.updates || [];\n        const latestUpdate = pkgUpdates[pkgUpdates.length - 1];\n        return latestUpdate && `${pkg.name}-${latestUpdate.evra}`;\n    };\n\n    const transformKey = (row) => {\n        return `${row.name}-${row.evra}`;\n    };\n\n    const fetchAllData = () =>\n        fetchApplicablePackagesApi({ id: entity.id, ...queryParams, limit: -1 });\n\n    const selectRows = (toSelect) => {\n        dispatch(selectSystemPackagesRow(toSelect));\n    };\n\n    const onSelect = useOnSelect(packages, selectedRows, fetchAllData, selectRows, constructFilename, transformKey);\n\n    function apply(params) {\n        dispatch(changeSystemPackagesParams({ id: entity.id, ...params }));\n    }\n\n    const onSort = useSortColumn(systemPackagesColumns, apply, 1);\n    const sortBy = React.useMemo(\n        () => createSortBy(systemPackagesColumns, metadata.sort, 1),\n        [metadata.sort]\n    );\n    const onSetPage = useSetPage(metadata.limit, apply);\n    const onPerPageSelect = usePerPageSelect(apply);\n\n    const errorState = error.status === 404 ?  handleNoSystemData() : <Unavailable/>;\n    const emptyState = (status === STATUS_RESOLVED && metadata.total_items === 0\n                            && Object.keys(queryParams).length === 0) && <SystemUpToDate/>;\n\n    if (status === STATUS_REJECTED && error.status !== 404) {\n        dispatch(addNotification({\n            variant: 'danger',\n            title: error.title,\n            description: error.detail\n        }));}\n\n    return (\n        <React.Fragment>\n            <TableView\n                columns={systemPackagesColumns}\n                store={{ rows, metadata, status, queryParams }}\n                onSelect={(packages.length && onSelect) || undefined}\n                selectedRows={selectedRows}\n                compact\n                onSort={onSort}\n                sortBy={sortBy}\n                onSetPage={onSetPage}\n                onPerPageSelect={onPerPageSelect}\n                remediationProvider={() =>\n                    remediationProvider(\n                        arrayFromObj(selectedRows),\n                        entity.id,\n                        remediationIdentifiers.package\n                    )\n                }\n                apply={apply}\n                filterConfig={{\n                    items: [\n                        searchFilter(apply, queryParams.search,\n                            intl.formatMessage(messages.labelsFiltersPackagesSearchTitle),\n                            intl.formatMessage(messages.labelsFiltersPackagesSearchPlaceHolder)\n                        ),\n                        statusFilter(apply, queryParams.filter)\n                    ]\n                }}\n                remediationButtonOUIA={'toolbar-remediation-button'}\n                tableOUIA={'system-packages-table'}\n                paginationOUIA={'system-packages-pagination'}\n                errorState={errorState}\n                emptyState={emptyState}\n            />\n        </React.Fragment>\n    );\n};\n\nSystemPackages.propTypes = {\n    handleNoSystemData: propTypes.func\n};\nexport default SystemPackages;\n\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport SystemAdvisories from '../SystemAdvisories/SystemAdvisories';\nimport { useSelector } from 'react-redux';\nimport SystemPackages from '../SystemPackages/SystemPackages';\nimport './SystemDetail.scss';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\nimport { NoSystemData } from '../../PresentationalComponents/Snippets/NoSystemData';\nimport propTypes from 'prop-types';\n\nconst SystemDetail = ({ isInventoryApp }) => {\n    const [activeTabKey, setActiveTabKey] = React.useState(0);\n    const [areTabsHidden, setTabsHidden] = React.useState(false);\n\n    const entity = useSelector(({ entityDetails }) => entityDetails.entity || {});\n    const onTabSelect = (event, id) => {\n        setActiveTabKey(id);\n    };\n\n    const handleNoSystemData = () => {\n        isInventoryApp && setTabsHidden(prevTabsHidden => !prevTabsHidden);\n        return isInventoryApp && null || <NoSystemData />;\n    };\n\n    return !entity.id ? null : (!areTabsHidden && (\n        <Tabs activeKey={activeTabKey} onSelect={onTabSelect} className={'patchTabSelect'} isHidden>\n            <Tab eventKey={0} title={<TabTitleText>{intl.formatMessage(messages.titlesAdvisories)}</TabTitleText>}\n                data-ouia-component-type={`system-advisories-tab`}\n                data-ouia-component-id={`system-advisories-tab`}\n            >\n                <SystemAdvisories handleNoSystemData={handleNoSystemData}/>\n            </Tab>\n            <Tab\n                eventKey={1}\n                title={<TabTitleText>{intl.formatMessage(messages.titlesPackages)}</TabTitleText>}\n                data-ouia-component-type={`system-packages-tab`}\n                data-ouia-component-id={`system-packages-tab`}\n            >\n                <SystemPackages handleNoSystemData={handleNoSystemData}/>\n            </Tab>\n        </Tabs>\n    )  || <NoSystemData/>);\n};\n\nSystemDetail.propTypes = {\n    isInventoryApp: propTypes.bool\n};\nexport default SystemDetail;\n","import React from 'react';\nimport SystemDetail from '../../SmartComponents/SystemDetail/SystemDetail';\n\nlet initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const SystemDetailStore = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'FETCH_SYSTEM_DETAIL_FULFILLED':\n            state.hasThirdPartyRepo = payload.data?.attributes.third_party;\n            return state;\n        case 'LOAD_ENTITY_FULFILLED':\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Patch',\n                        name: 'patch',\n                        component: () => <SystemDetail />\n                    }\n                ]\n            };\n        case 'LOAD_ENTITY_REJECTED':\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Patch',\n                        name: 'patch',\n                        component: () => <SystemDetail />\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n","import { addOrRemoveItemFromSet, changeListParams, getNewSelectedItems } from '../../Utilities/Helpers';\nimport { STATUS_LOADING, STATUS_REJECTED, STATUS_RESOLVED } from '../../Utilities/constants';\n\nexport const changeFilters = (state, action) => {\n    state.queryParams = changeListParams(\n        state.queryParams,\n        action.payload\n    );\n\n    return state;\n};\n\nexport const selectRows = (state, action) => {\n    const selectedUpdated = getNewSelectedItems(action.payload, state.selectedRows);\n    state = { ...state, selectedRows: selectedUpdated };\n    return state;\n};\n\nexport const expandRows = (state, action) => {\n    const expandedUpdated = addOrRemoveItemFromSet(\n        state.expandedRows,\n        [].concat(action.payload)\n    );\n    state = { ...state, expandedRows: expandedUpdated };\n    return state;\n};\n\nexport const fetchPending = (state) => {\n    state.error = {};\n    state.status = STATUS_LOADING;\n    return state;\n};\n\nexport const fetchRejected = (state, action) => {\n    state.status = STATUS_REJECTED;\n    state.error = action.payload;\n    return state;\n};\n\nexport const fetchFulfilled = (state, action) => {\n    state.rows = action.payload.data;\n    state.metadata = action.payload.meta;\n    state.error = {};\n    state.status = STATUS_RESOLVED;\n    return state;\n};\n","import { STATUS_LOADING, STATUS_RESOLVED } from '../../Utilities/constants';\nimport { CLEAR_ADVISORY_DETAILS, FETCH_ADVISORY_DETAILS } from '../ActionTypes';\nimport {\n\n    fetchPending,\n    fetchRejected\n} from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: STATUS_LOADING\n};\n\n// Reducer\nexport const AdvisoryDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_ADVISORY_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: STATUS_RESOLVED,\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_ADVISORY_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_ADVISORY_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_ADVISORY_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    expandRows,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const AdvisoryListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_APPLICABLE_ADVISORIES + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_ADVISORY_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.EXPAND_ADVISORY_ROW:\n            return expandRows(newState, action);\n\n        case ActionTypes.SELECT_ADVISORY_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const AdvisorySystemsStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case 'SELECT_ENTITY':\n            return selectRows(newState, action);\n\n        case ActionTypes.CHANGE_AFFECTED_SYSTEMS_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.CLEAR_AFFECTED_SYSTEMS:\n            return storeListDefaults;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled\n} from './HelperReducers';\n\nexport const CvesListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_CVES_INFO + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_CVES_INFO + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_CVES_INFO + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_CVES_STORE_PARAMS:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { STATUS_LOADING, STATUS_RESOLVED } from '../../Utilities/constants';\nimport { CLEAR_PACKAGE_DETAILS, FETCH_PACKAGE_DETAILS } from '../ActionTypes';\nimport { fetchPending, fetchRejected } from './HelperReducers';\n\nexport let initialState = {\n    data: { attributes: {} },\n    status: STATUS_LOADING\n};\n\n// Reducer\nexport const PackageDetailStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case FETCH_PACKAGE_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                status: STATUS_RESOLVED,\n                data: action.payload.data,\n                error: {}\n            };\n\n        case FETCH_PACKAGE_DETAILS + '_PENDING':\n            return fetchPending(newState);\n\n        case FETCH_PACKAGE_DETAILS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case CLEAR_PACKAGE_DETAILS:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport { changeFilters, fetchFulfilled, fetchPending, fetchRejected } from './HelperReducers';\n\nconst initialStore = { ...storeListDefaults,  queryParams: { filter: { systems_updatable: 'gt:0'  } } };\n\nexport const PackagesListStore = (state = initialStore, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_PACKAGES_LIST + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_PACKAGES_LIST + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_PACKAGES_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport { changeFilters, fetchFulfilled, fetchPending, fetchRejected, selectRows } from './HelperReducers';\n\nexport const PackageSystemsStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_PACKAGE_SYSTEMS + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_PACKAGE_SYSTEMS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case 'SELECT_ENTITY':\n            return selectRows(newState, action);\n\n        case ActionTypes.CHANGE_PACKAGE_SYSTEMS_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.FETCH_PACKAGE_SYSTEMS + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.CLEAR_PACKAGE_SYSTEMS:\n            return storeListDefaults;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n    selectRows,\n    fetchPending,\n    fetchRejected,\n    fetchFulfilled,\n    expandRows\n} from './HelperReducers';\n\nexport const SystemAdvisoryListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_APPLICABLE_SYSTEM_ADVISORIES + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_APPLICABLE_SYSTEM_ADVISORIES + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_APPLICABLE_SYSTEM_ADVISORIES + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_SYSTEM_ADVISORY_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.EXPAND_SYSTEM_ADVISORY_ROW:\n            return expandRows(newState, action);\n\n        case ActionTypes.SELECT_SYSTEM_ADVISORY_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.CLEAR_SYSTEM_ADVISORIES:\n            return storeListDefaults;\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport { changeFilters, fetchFulfilled, fetchPending, fetchRejected, selectRows } from './HelperReducers';\n\nlet initializeState = { queryParams: { filter: { updatable: 'true' } } };\n\nexport const SystemPackageListStore = (state = { ...storeListDefaults, ...initializeState }, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_APPLICABLE_SYSTEM_PACKAGES + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_APPLICABLE_SYSTEM_PACKAGES + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_APPLICABLE_SYSTEM_PACKAGES + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_SYSTEM_PACKAGES_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.SELECT_SYSTEM_PACKAGES_ROW:\n            return selectRows(newState, action);\n\n        case ActionTypes.CLEAR_SYSTEM_PACKAGES:\n            return { ...storeListDefaults, ...initializeState };\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        default:\n            return state;\n    }\n};\n","import { storeListDefaults } from '../../Utilities/constants';\nimport * as ActionTypes from '../ActionTypes';\nimport {\n    changeFilters,\n\n    fetchFulfilled, fetchPending,\n    fetchRejected,\n    selectRows\n} from './HelperReducers';\n\nexport const SystemsListStore = (state = storeListDefaults, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_SYSTEMS + '_PENDING':\n            return fetchPending(newState);\n\n        case ActionTypes.FETCH_SYSTEMS + '_FULFILLED':\n            return fetchFulfilled(newState, action);\n\n        case ActionTypes.FETCH_SYSTEMS + '_REJECTED':\n            return fetchRejected(newState, action);\n\n        case ActionTypes.CHANGE_SYSTEMS_LIST_PARAMS:\n            return changeFilters(newState, action);\n\n        case ActionTypes.TRIGGER_GLOBAL_FILTER:\n            return changeFilters(newState, action);\n\n        case 'SELECT_ENTITY':\n            return selectRows(newState, action);\n\n        default:\n            return state;\n    }\n};\n","/* eslint new-cap: 0 */\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { AdvisoryDetailStore } from './Reducers/AdvisoryDetailStore';\nimport { AdvisoryListStore } from './Reducers/AdvisoryListStore';\nimport { AdvisorySystemsStore } from './Reducers/AdvisorySystemsStore';\nimport { CvesListStore } from './Reducers/CvesListStore';\nimport { PackageDetailStore } from './Reducers/PackageDetailStore';\nimport { PackagesListStore } from './Reducers/PackagesListStore';\nimport { PackageSystemsStore } from './Reducers/PackageSystemsStore';\nimport { SystemAdvisoryListStore } from './Reducers/SystemAdvisoryListStore';\nimport { SystemDetailStore } from './Reducers/SystemDetailStore';\nimport { SystemPackageListStore } from './Reducers/SystemPackageListStore';\nimport { SystemsListStore } from './Reducers/SystemsListStore';\n\nconst persistenceMiddleware = store => next => action => {\n    const storeContent = store.getState();\n    if (action.type === 'LOAD_ENTITIES_FULFILLED') {\n        action = { ...action, store };\n    }\n\n    next(action);\n    if (!action.type.endsWith('_REJECTED')) {\n        sessionStorage.setItem('PatchStore', JSON.stringify(storeContent));\n    }\n};\n\nconst storage = JSON.parse(sessionStorage.getItem('PatchStore')) || {};\n\nconst registry = getRegistry({}, [promiseMiddleware, notificationsMiddleware(), persistenceMiddleware]);\nregistry.register({\n    AdvisoryListStore: (state = storage.AdvisoryListStore, action) => AdvisoryListStore(state, action),\n    SystemsListStore: (state = storage.SystemsListStore, action) => SystemsListStore(state, action),\n    SystemDetailStore: (state = storage.SystemDetailStore, action) => SystemDetailStore(state, action),\n    SystemAdvisoryListStore: (state = storage.SystemAdvisoryListStore, action) => SystemAdvisoryListStore(state, action),\n    AdvisoryDetailStore: (state = storage.AdvisoryDetailStore, action) => AdvisoryDetailStore(state, action),\n    AdvisorySystemsStore: (state = storage.AdvisorySystemsStore, action) => AdvisorySystemsStore(state, action),\n    SystemPackageListStore: (state = storage.SystemPackageListStore, action) => SystemPackageListStore(state, action),\n    PackagesListStore: (state = storage.PackagesListStore, action) => PackagesListStore(state, action),\n    PackageDetailStore: (state = storage.PackageDetailStore, action) => PackageDetailStore(state, action),\n    PackageSystemsStore: (state = storage.PackageSystemsStore, action) => PackageSystemsStore(state, action),\n    CvesListStore: (state = storage.CvesListStore, action) => CvesListStore(state, action),\n    notifications: notificationsReducer\n});\n\nexport const getStore = () => registry.getStore();\nexport const register = newReducers => {\n    registry.register(newReducers);\n};\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Label.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Label.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./SystemDetail.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./SystemDetail.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}