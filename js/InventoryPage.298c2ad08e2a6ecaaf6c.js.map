{"version":3,"sources":["webpack:///./src/SmartComponents/SystemDetail/InventoryPage.js"],"names":["InventoryDetail","React","useState","InventoryHeader","setInventoryHeader","InventoryBody","setInventoryBody","entityDetails","useSelector","entity","fetchInventory","a","insights","loadInventory","ReactRedux","reactRouterDom","pfReactTable","Table","PfTable","TableBody","TableHeader","TableGridBreakpoint","cellWidth","TableVariant","sortable","expandable","SortByDirection","pfReact","reactCore","inventoryConnector","mergeWithDetail","register","SystemDetailStore","getStore","InventoryDetailHead","AppInfo","useEffect","Fragment","title","headerOUIA","breadcrumbs","intl","formatMessage","messages","appName","to","paths","advisories","isActive","systems","display_name","hideBack"],"mappings":"g2BA2FeA,UA5ES,WAAM,MACoBC,IAAMC,WAD1B,WACnBC,EADmB,KACFC,EADE,OAEgBH,IAAMC,WAFtB,WAEnBG,EAFmB,KAEJC,EAFI,KAIpBC,EAAgBC,uBAClB,gBAAGD,EAAH,EAAGA,cAAH,OAAuBA,GAAiBA,EAAcE,UAGpDC,EAAc,+BAAG,sCAAAC,EAAA,sEAITC,SAASC,cAAc,CAC7BC,aACAb,UACAc,iBACAC,aAAc,CACVC,MAAOC,QACPC,sBACAC,0BACAC,0CACAC,sBACAC,4BACAC,oBACAC,wBACAC,mCAEJC,QAASC,cAnBM,gBAEfC,EAFe,EAEfA,mBACAC,EAHe,EAGfA,gBAmBJC,YAAS,EAAD,GACDD,EAAgBE,OAvBJ,EA0BsBH,EAAmBI,eAApDC,EA1BW,EA0BXA,oBAAqBC,EA1BV,EA0BUA,QAC7B/B,GAAmB,kBAAM8B,KACzB5B,GAAiB,kBAAM6B,KA5BJ,2CAAH,qDAmCpB,OAJAlC,IAAMmC,WAAU,WACZ1B,MACD,IAGC,kBAAC,IAAM2B,SAAP,KACI,kBAAC,IAAD,CACIC,MAAM,GACNC,WAAY,oBACZC,YAAa,CACT,CACIF,MAAOG,IAAKC,cAAcC,IAASC,SACnCC,GAAIC,IAAMC,WAAWF,GACrBG,UAAU,GAEd,CACIV,MAAOG,IAAKC,cAAcC,IAASM,SACnCJ,GAAIC,IAAMG,QAAQJ,GAClBG,UAAU,GAEdzC,GAAiB,CACb+B,MAAO/B,EAAc2C,aACrBF,UAAU,KAIjB7C,GAAmB,kBAACA,EAAD,CAAiBgD,UAAQ,KAEhD9C,GACG,kBAAC,OAAD,KACI,kBAACA,EAAD","file":"js/InventoryPage.298c2ad08e2a6ecaaf6c.js","sourcesContent":["import { cellWidth, expandable, sortable, SortByDirection,\n    Table as PfTable, TableBody, TableGridBreakpoint, TableHeader, TableVariant } from '@patternfly/react-table';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as ReactRedux from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/files/inventoryDependencies';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { paths } from '../../Routes';\nimport { getStore, register } from '../../store';\nimport { SystemDetailStore } from '../../store/Reducers/SystemDetailStore';\nimport { intl } from '../../Utilities/IntlProvider';\nimport messages from '../../Messages';\n\nconst InventoryDetail = () => {\n    const [InventoryHeader, setInventoryHeader] = React.useState();\n    const [InventoryBody, setInventoryBody] = React.useState();\n\n    const entityDetails = useSelector(\n        ({ entityDetails }) => entityDetails && entityDetails.entity\n    );\n\n    const fetchInventory = async () => {\n        const {\n            inventoryConnector,\n            mergeWithDetail\n        } = await insights.loadInventory({\n            ReactRedux,\n            React,\n            reactRouterDom,\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            },\n            pfReact: reactCore\n        });\n\n        register({\n            ...mergeWithDetail(SystemDetailStore)\n        });\n\n        const { InventoryDetailHead, AppInfo } = inventoryConnector(getStore());\n        setInventoryHeader(() => InventoryDetailHead);\n        setInventoryBody(() => AppInfo);\n    };\n\n    React.useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Header\n                title=\"\"\n                headerOUIA={'inventory-details'}\n                breadcrumbs={[\n                    {\n                        title: intl.formatMessage(messages.appName),\n                        to: paths.advisories.to,\n                        isActive: false\n                    },\n                    {\n                        title: intl.formatMessage(messages.systems),\n                        to: paths.systems.to,\n                        isActive: false\n                    },\n                    entityDetails && {\n                        title: entityDetails.display_name,\n                        isActive: true\n                    }\n                ]}\n            >\n                {InventoryHeader && <InventoryHeader hideBack />}\n            </Header>\n            {InventoryBody && (\n                <Main>\n                    <InventoryBody />\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default InventoryDetail;\n"],"sourceRoot":""}