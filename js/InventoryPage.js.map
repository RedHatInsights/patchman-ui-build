{"version":3,"sources":["webpack:///./src/SmartComponents/SystemDetail/InventoryPage.js"],"names":["InventoryDetail","React","useState","InventoryHeader","setInventoryHeader","InventoryBody","setInventoryBody","InventoryWrapper","setInventoryWrapper","entityDetails","useSelector","entity","fetchInventory","a","insights","loadInventory","ReactRedux","reactRouterDom","pfReactTable","Table","PfTable","TableBody","TableHeader","TableGridBreakpoint","cellWidth","TableVariant","sortable","expandable","SortByDirection","pfReact","reactCore","inventoryConnector","mergeWithDetail","register","SystemDetailStore","getStore","InventoryDetailHead","AppInfo","DetailWrapper","useEffect","Wrapper","Fragment","title","breadcrumbs","to","paths","advisories","isActive","systems","display_name","hideBack"],"mappings":"20BAoGeA,UA9ES,WAAM,MACoBC,IAAMC,WAD1B,WACnBC,EADmB,KACFC,EADE,OAEgBH,IAAMC,WAFtB,WAEnBG,EAFmB,KAEJC,EAFI,OAGsBL,IAAMC,WAH5B,WAGnBK,EAHmB,KAGDC,EAHC,KAKpBC,EAAgBC,uBAClB,gBAAGD,EAAH,EAAGA,cAAH,OAAuBA,GAAiBA,EAAcE,UAGpDC,EAAc,+BAAG,wCAAAC,EAAA,sEAITC,SAASC,cAAc,CAC7BC,aACAf,UACAgB,iBACAC,aAAc,CACVC,MAAOC,QACPC,sBACAC,0BACAC,0CACAC,sBACAC,4BACAC,oBACAC,wBACAC,mCAEJC,QAASC,cAnBM,gBAEfC,EAFe,EAEfA,mBACAC,EAHe,EAGfA,gBAmBJC,YAAS,EAAD,GACDD,EAAgBE,OAvBJ,EA0BqCH,EAAmBI,eAAnEC,EA1BW,EA0BXA,oBAAqBC,EA1BV,EA0BUA,QAASC,EA1BnB,EA0BmBA,cACtClC,GAAmB,kBAAMgC,KACzB9B,GAAiB,kBAAM+B,KACvB7B,GAAoB,kBAAM8B,KA7BP,4CAAH,qDAgCpBrC,IAAMsC,WAAU,WACZ3B,MACD,IAEH,IAAM4B,EAAUjC,GAAoBN,IAAMwC,SAC1C,OACI,kBAACD,EAAD,KACI,kBAAC,IAAD,CACIE,MAAM,GACNC,YAAa,CACT,CACID,MAAO,QACPE,GAAIC,IAAMC,WAAWF,GACrBG,UAAU,GAEd,CACIL,MAAO,UACPE,GAAIC,IAAMG,QAAQJ,GAClBG,UAAU,GAEdtC,GAAiB,CACbiC,MAAOjC,EAAcwC,aACrBF,UAAU,KAIjB5C,GAAmB,kBAACA,EAAD,CAAiB+C,UAAQ,KAEhD7C,GACG,kBAAC,OAAD,KACI,kBAACA,EAAD","file":"js/InventoryPage.js","sourcesContent":["import {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    cellWidth,\n    TableVariant,\n    sortable,\n    expandable,\n    SortByDirection\n} from '@patternfly/react-table/dist/js';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as ReactRedux from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/files/inventoryDependencies';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { paths } from '../../Routes';\nimport { getStore, register } from '../../store';\nimport { SystemDetailStore } from '../../store/Reducers/SystemDetailStore';\n\nconst InventoryDetail = () => {\n    const [InventoryHeader, setInventoryHeader] = React.useState();\n    const [InventoryBody, setInventoryBody] = React.useState();\n    const [InventoryWrapper, setInventoryWrapper] = React.useState();\n\n    const entityDetails = useSelector(\n        ({ entityDetails }) => entityDetails && entityDetails.entity\n    );\n\n    const fetchInventory = async () => {\n        const {\n            inventoryConnector,\n            mergeWithDetail\n        } = await insights.loadInventory({\n            ReactRedux,\n            React,\n            reactRouterDom,\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            },\n            pfReact: reactCore\n        });\n\n        register({\n            ...mergeWithDetail(SystemDetailStore)\n        });\n\n        const { InventoryDetailHead, AppInfo, DetailWrapper } = inventoryConnector(getStore());\n        setInventoryHeader(() => InventoryDetailHead);\n        setInventoryBody(() => AppInfo);\n        setInventoryWrapper(() => DetailWrapper);\n    };\n\n    React.useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    const Wrapper = InventoryWrapper || React.Fragment;\n    return (\n        <Wrapper>\n            <Header\n                title=\"\"\n                breadcrumbs={[\n                    {\n                        title: 'Patch',\n                        to: paths.advisories.to,\n                        isActive: false\n                    },\n                    {\n                        title: 'Systems',\n                        to: paths.systems.to,\n                        isActive: false\n                    },\n                    entityDetails && {\n                        title: entityDetails.display_name,\n                        isActive: true\n                    }\n                ]}\n            >\n                {InventoryHeader && <InventoryHeader hideBack />}\n            </Header>\n            {InventoryBody && (\n                <Main>\n                    <InventoryBody />\n                </Main>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default InventoryDetail;\n"],"sourceRoot":""}