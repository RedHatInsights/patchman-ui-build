{"version":3,"sources":["webpack:///./src/SmartComponents/SystemDetail/InventoryPage.js"],"names":["InventoryDetail","React","useState","InventoryHeader","setInventoryHeader","InventoryBody","setInventoryBody","entityDetails","useSelector","entity","fetchInventory","a","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithDetail","register","SystemDetailStore","getStore","InventoryDetailHead","AppInfo","useEffect","Fragment","title","breadcrumbs","to","paths","advisories","isActive","display_name","hideBack"],"mappings":"o1BAwEeA,UA5DS,WAAM,MACoBC,IAAMC,WAD1B,WACnBC,EADmB,KACFC,EADE,OAEgBH,IAAMC,WAFtB,WAEnBG,EAFmB,KAEJC,EAFI,KAIpBC,EAAgBC,uBAClB,gBAAGD,EAAH,EAAGA,cAAH,OAAuBA,GAAiBA,EAAcE,UAGpDC,EAAc,+BAAG,sCAAAC,EAAA,sEAITC,SAASC,cAAc,CAC7BC,MAAOb,IACPc,iBACAC,YACAC,aACAC,iBATe,gBAEfC,EAFe,EAEfA,mBACAC,EAHe,EAGfA,gBASJC,YAAS,EAAD,GACDD,EAAgBE,OAbJ,EAgBsBH,EAAmBI,eAApDC,EAhBW,EAgBXA,oBAAqBC,EAhBV,EAgBUA,QAC7BrB,GAAmB,kBAAMoB,KACzBlB,GAAiB,kBAAMmB,KAlBJ,2CAAH,qDAyBpB,OAJAxB,IAAMyB,WAAU,WACZhB,MACD,IAGC,kBAAC,IAAMiB,SAAP,KACI,kBAAC,IAAD,CACIC,MAAM,GACNC,YAAa,CACT,CACID,MAAO,kBACPE,GAAIC,IAAMC,WAAWF,GACrBG,UAAU,GAEd1B,GAAiB,CACbqB,MAAOrB,EAAc2B,aACrBD,UAAU,KAIjB9B,GAAmB,kBAACA,EAAD,CAAiBgC,UAAQ,KAEhD9B,GACG,kBAAC,OAAD,KACI,kBAACA,EAAD","file":"js/InventoryPage.js","sourcesContent":["import * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { paths } from '../../Routes';\nimport { getStore, register } from '../../store';\nimport { SystemDetailStore } from '../../store/Reducers/SystemDetailStore';\n\nconst InventoryDetail = () => {\n    const [InventoryHeader, setInventoryHeader] = React.useState();\n    const [InventoryBody, setInventoryBody] = React.useState();\n\n    const entityDetails = useSelector(\n        ({ entityDetails }) => entityDetails && entityDetails.entity\n    );\n\n    const fetchInventory = async () => {\n        const {\n            inventoryConnector,\n            mergeWithDetail\n        } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n\n        register({\n            ...mergeWithDetail(SystemDetailStore)\n        });\n\n        const { InventoryDetailHead, AppInfo } = inventoryConnector(getStore());\n        setInventoryHeader(() => InventoryDetailHead);\n        setInventoryBody(() => AppInfo);\n    };\n\n    React.useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Header\n                title=\"\"\n                breadcrumbs={[\n                    {\n                        title: 'System Patching',\n                        to: paths.advisories.to,\n                        isActive: false\n                    },\n                    entityDetails && {\n                        title: entityDetails.display_name,\n                        isActive: true\n                    }\n                ]}\n            >\n                {InventoryHeader && <InventoryHeader hideBack />}\n            </Header>\n            {InventoryBody && (\n                <Main>\n                    <InventoryBody />\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default InventoryDetail;\n"],"sourceRoot":""}