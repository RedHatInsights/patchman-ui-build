{"version":3,"sources":["webpack:///./src/PresentationalComponents/Header/Header.scss","webpack:///./src/PresentationalComponents/Header/Header.scss?f238","webpack:///./src/PresentationalComponents/Header/HeaderBreadcrumbs.js","webpack:///./src/PresentationalComponents/Header/HeaderTabs.js","webpack:///./src/PresentationalComponents/Header/Header.js","webpack:///./src/SmartComponents/SystemDetail/InventoryPage.js"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","HeaderBreadcrumbs","items","Breadcrumb","filter","Boolean","map","item","BreadcrumbItem","title","isActive","to","Link","propTypes","PropTypes","arrayOf","shape","bool","string","HeaderTabs","history","Tabs","onSelect","event","tabString","activeKey","location","pathname","className","Tab","eventKey","paths","advisories","systems","object","withRouter","Header","showTabs","breadcrumbs","children","Fragment","array","any","InventoryDetail","React","useState","InventoryHeader","setInventoryHeader","InventoryBody","setInventoryBody","entityDetails","useSelector","entity","useEffect","async","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithDetail","register","SystemDetailStore","getStore","InventoryDetailHead","AppInfo","display_name","hideBack"],"mappings":"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","file":"js/InventoryPage.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-tabs.patchman-tabs{background-color:var(--pf-global--BackgroundColor--100);padding-left:var(--pf-c-page__main-section--md--PaddingLeft);display:block}\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Header.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderBreadcrumbs = ({ items }) => {\n    return (\n        <Breadcrumb>\n            {items.filter(Boolean).map(item => (\n                <BreadcrumbItem key={item.title} isActive={item.isActive}>\n                    {(item.to && <Link to={item.to}>{item.title}</Link>) ||\n                        item.title}\n                </BreadcrumbItem>\n            ))}\n        </Breadcrumb>\n    );\n};\n\nHeaderBreadcrumbs.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            isActive: PropTypes.bool,\n            to: PropTypes.string,\n            title: PropTypes.string\n        })\n    )\n};\n\nexport default HeaderBreadcrumbs;\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { paths } from '../../Routes';\nimport './Header.scss';\n\nconst HeaderTabs = ({ history }) => {\n    const handleRedirect = (event, tabString) => {\n        history.push(tabString);\n    };\n\n    return (\n        <Tabs\n            onSelect={handleRedirect}\n            activeKey={history.location.pathname}\n            className={'patchman-tabs'}\n        >\n            <Tab\n                eventKey={paths.advisories.to}\n                title={paths.advisories.title}\n            />\n            <Tab eventKey={paths.systems.to} title={paths.systems.title} />\n        </Tabs>\n    );\n};\n\nHeaderTabs.propTypes = {\n    history: propTypes.object\n};\n\nexport default withRouter(HeaderTabs);\n","import {\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport HeaderBreadcrumbs from './HeaderBreadcrumbs';\nimport HeaderTabs from './HeaderTabs';\n\nconst Header = ({ title, showTabs, breadcrumbs, children }) => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                {breadcrumbs && <HeaderBreadcrumbs items={breadcrumbs} />}\n                <PageHeaderTitle title={title} />\n                {children}\n            </PageHeader>\n            {showTabs && <HeaderTabs />}\n        </React.Fragment>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string,\n    showTabs: PropTypes.bool,\n    breadcrumbs: PropTypes.array,\n    children: PropTypes.any\n};\n\nexport default Header;\n","import * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { paths } from '../../Routes';\nimport { getStore, register } from '../../store';\nimport { SystemDetailStore } from '../../store/Reducers/SystemDetailStore';\n\nconst InventoryDetail = () => {\n    const [InventoryHeader, setInventoryHeader] = React.useState();\n    const [InventoryBody, setInventoryBody] = React.useState();\n\n    const entityDetails = useSelector(\n        ({ entityDetails }) => entityDetails && entityDetails.entity\n    );\n\n    const fetchInventory = async () => {\n        const {\n            inventoryConnector,\n            mergeWithDetail\n        } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n\n        register({\n            ...mergeWithDetail(SystemDetailStore)\n        });\n\n        const { InventoryDetailHead, AppInfo } = inventoryConnector(getStore());\n        setInventoryHeader(() => InventoryDetailHead);\n        setInventoryBody(() => AppInfo);\n    };\n\n    React.useEffect(() => {\n        fetchInventory();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Header\n                title=\"\"\n                breadcrumbs={[\n                    {\n                        title: 'System Patching',\n                        to: paths.advisories.to,\n                        isActive: false\n                    },\n                    entityDetails && {\n                        title: entityDetails.display_name,\n                        isActive: true\n                    }\n                ]}\n            >\n                {InventoryHeader && <InventoryHeader hideBack />}\n            </Header>\n            {InventoryBody && (\n                <Main>\n                    <InventoryBody />\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default InventoryDetail;\n"],"sourceRoot":""}